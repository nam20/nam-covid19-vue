{"remainingRequest":"C:\\projects\\nam-lol\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\projects\\nam-lol\\frontend\\src\\components\\CovidNews.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\projects\\nam-lol\\frontend\\src\\components\\CovidNews.vue","mtime":1600316964487},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwppbXBvcnQgX3NsaWNlZFRvQXJyYXkgZnJvbSAiQzovcHJvamVjdHMvbmFtLWxvbC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L3Byb2plY3RzL25hbS1sb2wvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgQ2hhcnRDYXJkIGZyb20gJ0AvY29tcG9uZW50cy9DaGFydENhcmQnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQ2hhcnRDYXJkOiBDaGFydENhcmQKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBuYXZlck5ld3M6ICcnLAogICAgICBnb29nbGVOZXdzOiAnJwogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLm5ld3NDcmF3bGluZygpOwogIH0sCiAgbWV0aG9kczogewogICAgbmV3c0NyYXdsaW5nOiBmdW5jdGlvbiBuZXdzQ3Jhd2xpbmcoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBuYXZlclByb21pc2UsIGdvb2dsZVByb21pc2UsIF95aWVsZCRQcm9taXNlJGFsbCwgX3lpZWxkJFByb21pc2UkYWxsMiwgbmF2ZXJDcmF3bGluZywgZ29vZ2xlQ3Jhd2xpbmc7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgICAgbmF2ZXJQcm9taXNlID0gYXhpb3MuZ2V0KCcvY292aWQvbmV3cy9uYXZlcicpOwogICAgICAgICAgICAgICAgZ29vZ2xlUHJvbWlzZSA9IGF4aW9zLmdldCgnL2NvdmlkL25ld3MvZ29vZ2xlJyk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLmFsbChbbmF2ZXJQcm9taXNlLCBnb29nbGVQcm9taXNlXSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIF95aWVsZCRQcm9taXNlJGFsbCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfeWllbGQkUHJvbWlzZSRhbGwyID0gX3NsaWNlZFRvQXJyYXkoX3lpZWxkJFByb21pc2UkYWxsLCAyKTsKICAgICAgICAgICAgICAgIG5hdmVyQ3Jhd2xpbmcgPSBfeWllbGQkUHJvbWlzZSRhbGwyWzBdOwogICAgICAgICAgICAgICAgZ29vZ2xlQ3Jhd2xpbmcgPSBfeWllbGQkUHJvbWlzZSRhbGwyWzFdOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2cobmF2ZXJDcmF3bGluZyk7CiAgICAgICAgICAgICAgICBfdGhpcy5uYXZlck5ld3MgPSBuYXZlckNyYXdsaW5nLmRhdGE7CiAgICAgICAgICAgICAgICBfdGhpcy5nb29nbGVOZXdzID0gZ29vZ2xlQ3Jhd2xpbmcuZGF0YTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNzsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE0OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoX2NvbnRleHQudDApOwoKICAgICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1swLCAxNF1dKTsKICAgICAgfSkpKCk7CiAgICB9IC8vIGFzeW5jIG5hdmVyQ3Jhd2xpbmcoKXsKICAgIC8vICAgICB0cnl7CiAgICAvLyAgICAgICAgIGxldCB7IGRhdGEgfSA9IGF3YWl0IGF4aW9zLmdldCgnL2NvdmlkL25ld3MvbmF2ZXInKQogICAgLy8gICAgICAgICB0aGlzLm5hdmVyTmV3cyA9IGRhdGEKICAgIC8vICAgICB9Y2F0Y2goZSl7CiAgICAvLyAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSkKICAgIC8vICAgICB9CiAgICAvLyB9LAogICAgLy8gYXN5bmMgZ29vZ2xlQ3Jhd2xpbmcoKXsKICAgIC8vICAgICB0cnl7CiAgICAvLyAgICAgICAgIGxldCB7IGRhdGEgfSA9IGF3YWl0IGF4aW9zLmdldCgnL2NvdmlkL25ld3MvZ29vZ2xlJykKICAgIC8vICAgICAgICAgdGhpcy5nb29nbGVOZXdzID0gZGF0YQogICAgLy8gICAgIH1jYXRjaChlKXsKICAgIC8vICAgICAgICAgY29uc29sZS5lcnJvcihlKQogICAgLy8gICAgIH0KICAgIC8vIH0sCgogIH0KfTs="},{"version":3,"sources":["CovidNews.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA,OAAA,SAAA,MAAA,wBAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA;AAFA,KAAA;AAIA,GATA;AAUA,EAAA,OAVA,qBAUA;AACA,SAAA,YAAA;AACA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,YAFA,GAEA,KAAA,CAAA,GAAA,CAAA,mBAAA,CAFA;AAGA,gBAAA,aAHA,GAGA,KAAA,CAAA,GAAA,CAAA,oBAAA,CAHA;AAAA;AAAA,uBAKA,OAAA,CAAA,GAAA,CAAA,CAAA,YAAA,EAAA,aAAA,CAAA,CALA;;AAAA;AAAA;AAAA;AAKA,gBAAA,aALA;AAKA,gBAAA,cALA;AAMA,gBAAA,OAAA,CAAA,GAAA,CAAA,aAAA;AACA,gBAAA,KAAA,CAAA,SAAA,GAAA,aAAA,CAAA,IAAA;AACA,gBAAA,KAAA,CAAA,UAAA,GAAA,cAAA,CAAA,IAAA;AARA;AAAA;;AAAA;AAAA;AAAA;AAUA,gBAAA,OAAA,CAAA,KAAA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA,KAbA,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA7BA;AAbA,CAAA","sourcesContent":["<template>\r\n    <v-row id=\"worldKoreaNews\">\r\n        <v-col cols=\"12\" xs=\"12\" md=\"6\" >\r\n            <chart-card>\r\n                <template v-slot:title>\r\n                    국내 주요 뉴스\r\n                </template>\r\n                <template v-slot:body>\r\n                    <v-simple-table >\r\n                        <tbody>\r\n                            <tr v-for=\"news in naverNews\" :key=\"news\">\r\n                                <td>\r\n                                    <h4>\r\n                                        <a :href=\"news.href\" style=\"text-decoration:none; color:#2d46c4\" target=\"_blank\">{{news.title}}</a>\r\n                                    </h4>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </v-simple-table>\r\n                </template>\r\n            </chart-card>\r\n            \r\n        </v-col>\r\n\r\n        <v-col cols=\"12\" xs=\"12\" md=\"6\" >\r\n            <chart-card>\r\n                <template v-slot:title>\r\n                    해외 주요 뉴스\r\n                </template>\r\n                <template v-slot:body>\r\n                    <v-simple-table>\r\n                        <tbody>\r\n                            <tr v-for=\"news in googleNews\" :key=\"news\">\r\n                                <td>\r\n                                    <h4>\r\n                                        <a :href=\"news.href\" style=\"text-decoration:none; color:#2d46c4\" target=\"_blank\">{{news.title}}</a>\r\n                                    </h4>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </v-simple-table>\r\n                    \r\n                </template>\r\n            </chart-card>\r\n            \r\n        </v-col>\r\n    </v-row>\r\n</template>\r\n\r\n<script>\r\nimport ChartCard from '@/components/ChartCard'\r\nexport default {\r\n    components:{\r\n        ChartCard\r\n    },\r\n    data(){\r\n        return {\r\n            naverNews : '',\r\n            googleNews : ''\r\n        }\r\n    },\r\n    created(){\r\n        this.newsCrawling()\r\n    },\r\n    methods:{\r\n        async newsCrawling(){\r\n            try{\r\n                const naverPromise = axios.get('/covid/news/naver')\r\n                const googlePromise = axios.get('/covid/news/google')\r\n\r\n                const [naverCrawling, googleCrawling] = await Promise.all([naverPromise, googlePromise])\r\n                console.log(naverCrawling)\r\n                this.naverNews = naverCrawling.data\r\n                this.googleNews = googleCrawling.data\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        // async naverCrawling(){\r\n        //     try{\r\n        //         let { data } = await axios.get('/covid/news/naver')\r\n        //         this.naverNews = data\r\n        //     }catch(e){\r\n        //         console.error(e)\r\n        //     }\r\n        // },\r\n        // async googleCrawling(){\r\n        //     try{\r\n        //         let { data } = await axios.get('/covid/news/google')\r\n        //         this.googleNews = data\r\n        //     }catch(e){\r\n        //         console.error(e)\r\n        //     }\r\n        // },\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"sourceRoot":"src/components"}]}