{"remainingRequest":"C:\\projects\\nam-lol\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\projects\\nam-lol\\frontend\\src\\components\\TodayTotal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\projects\\nam-lol\\frontend\\src\\components\\TodayTotal.vue","mtime":1600398626070},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIudG8tZml4ZWQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IFsna29yZWFUb3RhbERhdGEnLCAnd29ybGRUb3RhbERhdGEnXSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgey8vIHRoaXMuZ2V0V29ybGRUb3RhbCgpCiAgICAvLyB0aGlzLmdldEtvcmVhVG90YWwoKQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRvZGF5S29yZWFUb3RhbDogJycsCiAgICAgIHRvZGF5V29ybGRUb3RhbDogJycKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgY29tcHV0ZTogZnVuY3Rpb24gY29tcHV0ZSgpIHsKICAgICAgY29uc29sZS5sb2coa29yZWFUb3RhbERhdGEpOwogICAgICByZXR1cm4gIiI7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAga29yZWFUb3RhbERhdGE6IGZ1bmN0aW9uIGtvcmVhVG90YWxEYXRhKCkgewogICAgICB0aGlzLmdldEtvcmVhVG90YWwoKTsKICAgIH0sCiAgICB3b3JsZFRvdGFsRGF0YTogZnVuY3Rpb24gd29ybGRUb3RhbERhdGEoKSB7CiAgICAgIHRoaXMuZ2V0V29ybGRUb3RhbCgpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0V29ybGRUb3RhbDogZnVuY3Rpb24gZ2V0V29ybGRUb3RhbCgpIHsKICAgICAgdmFyIHllc3RlcmRheVdvcmxkID0gdGhpcy53b3JsZFRvdGFsRGF0YVswXTsKICAgICAgdmFyIHRvZGF5V29ybGQgPSB0aGlzLndvcmxkVG90YWxEYXRhWzFdOwogICAgICB2YXIgd29ybGRUb3RhbCA9IHsKICAgICAgICB0b3RhbENvbmZpcm1lZDogdG9kYXlXb3JsZC5jb25maXJtZWQsCiAgICAgICAgdG90YWxEZWF0aHM6IHRvZGF5V29ybGQuZGVhdGhzLAogICAgICAgIHRvdGFsUmVjb3ZlcmVkOiB0b2RheVdvcmxkLnJlY292ZXJlZCwKICAgICAgICB0b3RhbENyaXRpY2FsOiAodG9kYXlXb3JsZC5kZWF0aHMgLyB0b2RheVdvcmxkLmNvbmZpcm1lZCAqIDEwMCkudG9GaXhlZCgxKSwKICAgICAgICBuZXdDb25maXJtZWQ6IHRvZGF5V29ybGQuY29uZmlybWVkIC0geWVzdGVyZGF5V29ybGQuY29uZmlybWVkLAogICAgICAgIG5ld0RlYXRoczogdG9kYXlXb3JsZC5kZWF0aHMgLSB5ZXN0ZXJkYXlXb3JsZC5kZWF0aHMsCiAgICAgICAgbmV3UmVjb3ZlcmVkOiB0b2RheVdvcmxkLnJlY292ZXJlZCAtIHllc3RlcmRheVdvcmxkLnJlY292ZXJlZAogICAgICB9OwoKICAgICAgZm9yICh2YXIgZWwgaW4gd29ybGRUb3RhbCkgewogICAgICAgIHdvcmxkVG90YWxbZWxdID0gdGhpcy5udW1iZXJDb21tYXMod29ybGRUb3RhbFtlbF0pOwogICAgICB9CgogICAgICB0aGlzLnRvZGF5V29ybGRUb3RhbCA9IHdvcmxkVG90YWw7CiAgICB9LAogICAgZ2V0S29yZWFUb3RhbDogZnVuY3Rpb24gZ2V0S29yZWFUb3RhbCgpIHsKICAgICAgdmFyIF90aGlzJGtvcmVhVG90YWxEYXRhID0gdGhpcy5rb3JlYVRvdGFsRGF0YSwKICAgICAgICAgIGNvbmZpcm1lZCA9IF90aGlzJGtvcmVhVG90YWxEYXRhLmNvbmZpcm1lZCwKICAgICAgICAgIHJlY292ZXJlZCA9IF90aGlzJGtvcmVhVG90YWxEYXRhLnJlY292ZXJlZCwKICAgICAgICAgIGRlYXRocyA9IF90aGlzJGtvcmVhVG90YWxEYXRhLmRlYXRoczsKICAgICAgY29uZmlybWVkID0gY29uZmlybWVkLnNsaWNlKGNvbmZpcm1lZC5sZW5ndGggLSAyKTsKICAgICAgcmVjb3ZlcmVkID0gcmVjb3ZlcmVkLnNsaWNlKHJlY292ZXJlZC5sZW5ndGggLSAyKTsKICAgICAgZGVhdGhzID0gZGVhdGhzLnNsaWNlKGRlYXRocy5sZW5ndGggLSAyKTsKICAgICAgdmFyIGtvcmVhVG90YWwgPSB7CiAgICAgICAgdG90YWxDb25maXJtZWQ6IGNvbmZpcm1lZFsxXSwKICAgICAgICB0b3RhbERlYXRoczogZGVhdGhzWzFdLAogICAgICAgIHRvdGFsUmVjb3ZlcmVkOiByZWNvdmVyZWRbMV0sCiAgICAgICAgdG90YWxDcml0aWNhbDogKGRlYXRoc1sxXSAvIGNvbmZpcm1lZFsxXSAqIDEwMCkudG9GaXhlZCgxKSwKICAgICAgICBuZXdDb25maXJtZWQ6IGNvbmZpcm1lZFsxXSAtIGNvbmZpcm1lZFswXSwKICAgICAgICBuZXdEZWF0aHM6IGRlYXRoc1sxXSAtIGRlYXRoc1swXSwKICAgICAgICBuZXdSZWNvdmVyZWQ6IHJlY292ZXJlZFsxXSAtIHJlY292ZXJlZFswXQogICAgICB9OwoKICAgICAgZm9yICh2YXIgZWwgaW4ga29yZWFUb3RhbCkgewogICAgICAgIGtvcmVhVG90YWxbZWxdID0gdGhpcy5udW1iZXJDb21tYXMoa29yZWFUb3RhbFtlbF0pOwogICAgICB9CgogICAgICB0aGlzLnRvZGF5S29yZWFUb3RhbCA9IGtvcmVhVG90YWw7CiAgICB9LAogICAgbnVtYmVyQ29tbWFzOiBmdW5jdGlvbiBudW1iZXJDb21tYXMoaW5wdXQpIHsKICAgICAgcmV0dXJuIGlucHV0LnRvU3RyaW5nKCkucmVwbGFjZSgvXEIoPz0oXGR7M30pKyg/IVxkKSkvZywgIiwiKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["TodayTotal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <v-row justify=\"center\" id=\"covidStatus\"> \r\n        <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n            <v-card>\r\n                \r\n                <v-card-title class=\"justify-center\">\r\n                    <h3>국내 현황</h3>\r\n                </v-card-title>\r\n                <v-row>\r\n                    <v-col class=\"text-center\">\r\n                        <p>확진자</p>\r\n                        <p class=\"number mb-0\">{{todayKoreaTotal.totalConfirmed}}</p>\r\n                        <p class=\"covid\">+({{todayKoreaTotal.newConfirmed}})</p>                            \r\n                    </v-col>\r\n                    <v-col class=\"text-center\">\r\n                        <p>사망자</p>\r\n                        <p class=\"number covid mb-0\">{{todayKoreaTotal.totalDeaths}}</p>\r\n                        <p class=\"covid\">+({{todayKoreaTotal.newDeaths}})</p>   \r\n                    </v-col>\r\n                    <v-col class=\"text-center\">\r\n                        <p>치명율</p>\r\n                        <p class=\"number\">{{todayKoreaTotal.totalCritical}}%</p>\r\n                    </v-col>\r\n                    <v-col class=\"text-center\">\r\n                        <p>완치자</p>\r\n                        <p class=\"number mb-0\">{{todayKoreaTotal.totalRecovered}}</p>\r\n                        <p class=\"recovered\">+({{todayKoreaTotal.newRecovered}})</p>   \r\n                    </v-col>\r\n                </v-row>\r\n\r\n            </v-card>\r\n        </v-col>\r\n        <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n            <v-card>\r\n                <v-card-title class=\"justify-center\">\r\n                    <h3>세계 현황</h3>\r\n                </v-card-title>\r\n                <v-row>\r\n                    <v-col class=\"text-center\">\r\n                        <p>확진자</p>\r\n                        <p class=\"number mb-0\">{{todayWorldTotal.totalConfirmed}}</p>       \r\n                        <p class=\"covid\">+({{todayWorldTotal.newConfirmed}})</p>                         \r\n                    </v-col>\r\n                    <v-col class=\"text-center\">\r\n                        <p>사망자</p>\r\n                        <p class=\"number covid mb-0\">{{todayWorldTotal.totalDeaths}}</p>\r\n                        <p class=\"covid\">+({{todayWorldTotal.newDeaths}})</p>   \r\n                    </v-col>\r\n                    <v-col class=\"text-center\">\r\n                        <p>치명율</p>\r\n                        <p class=\"number\">{{todayWorldTotal.totalCritical}}%</p>\r\n                    </v-col>\r\n                    <v-col class=\"text-center\">\r\n                        <p>완치자</p>\r\n                        <p class=\"number mb-0\">{{todayWorldTotal.totalRecovered}}</p>\r\n                        <p class=\"recovered\">+({{todayWorldTotal.newRecovered}})</p>   \r\n                    </v-col>\r\n                </v-row>\r\n            </v-card>\r\n        </v-col>\r\n    </v-row>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props:['koreaTotalData','worldTotalData'],\r\n    created(){\r\n        // this.getWorldTotal()\r\n        // this.getKoreaTotal()\r\n    },\r\n    data(){\r\n        return {\r\n            todayKoreaTotal : '',\r\n            todayWorldTotal : ''\r\n            \r\n        }\r\n    },\r\n    computed:{\r\n        compute(){\r\n            console.log(koreaTotalData)\r\n            return \"\"\r\n        }\r\n    },\r\n    watch:{\r\n        koreaTotalData(){\r\n            \r\n            this.getKoreaTotal()\r\n        },\r\n        worldTotalData(){\r\n            this.getWorldTotal()\r\n        }\r\n    },\r\n    methods:{\r\n        getWorldTotal(){\r\n\r\n            const yesterdayWorld = this.worldTotalData[0]\r\n            const todayWorld = this.worldTotalData[1]\r\n            \r\n            const worldTotal = {\r\n                totalConfirmed : todayWorld.confirmed ,\r\n                totalDeaths : todayWorld.deaths,\r\n                totalRecovered : todayWorld.recovered,\r\n                totalCritical: (todayWorld.deaths / todayWorld.confirmed * 100 ).toFixed(1),\r\n                newConfirmed : todayWorld.confirmed - yesterdayWorld.confirmed,\r\n                newDeaths: todayWorld.deaths - yesterdayWorld.deaths,\r\n                newRecovered : todayWorld.recovered - yesterdayWorld.recovered\r\n            }\r\n\r\n            for(let el in worldTotal){\r\n                worldTotal[el] = this.numberCommas(worldTotal[el])\r\n            }\r\n\r\n            this.todayWorldTotal = worldTotal\r\n        },\r\n        getKoreaTotal(){\r\n\r\n            let { confirmed, recovered, deaths } = this.koreaTotalData\r\n\r\n            confirmed = confirmed.slice(confirmed.length-2)\r\n            recovered = recovered.slice(recovered.length-2)\r\n            deaths = deaths.slice(deaths.length-2)\r\n\r\n            const koreaTotal = {\r\n                totalConfirmed : confirmed[1],\r\n                totalDeaths : deaths[1],\r\n                totalRecovered : recovered[1],\r\n                totalCritical: (deaths[1] / confirmed[1] * 100).toFixed(1),\r\n                newConfirmed : confirmed[1] - confirmed[0],\r\n                newDeaths : deaths[1] - deaths[0],\r\n                newRecovered : recovered[1] - recovered[0]\r\n            }\r\n\r\n            for(let el in koreaTotal){\r\n                koreaTotal[el] = this.numberCommas(koreaTotal[el])\r\n            }\r\n\r\n            this.todayKoreaTotal = koreaTotal\r\n        },\r\n        numberCommas(input){\r\n            return input.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n        },\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.col p.number {\r\n    font-size: 22px;\r\n    font-weight: 500;\r\n}\r\n\r\n.col .covid {\r\n    color: red;\r\n}\r\n\r\n.col .recovered {\r\n    color: rgb(34, 182, 23);\r\n}\r\n\r\n</style>"],"sourceRoot":"src/components"}]}