{"remainingRequest":"C:\\projects\\nam-lol\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\projects\\nam-lol\\frontend\\src\\views\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\projects\\nam-lol\\frontend\\src\\views\\index.vue","mtime":1599488919223},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    \r\n        <v-container  > \r\n            <!-- <v-btn color=\"success\" @click=\"$router.push('/home')\">home</v-btn>\r\n            <v-btn color=\"#2196F3\" @click=\"$router.push('/signup')\">회원가입</v-btn>\r\n            <v-btn color=\"warning\" @click=\"$router.push('/login')\">로그인</v-btn>\r\n            <v-btn @click=\"$router.push('/nav')\">테스트</v-btn>\r\n            <v-btn @click=\"$router.push('/postForm')\">에디터</v-btn>\r\n            <v-btn @click=\"$router.push('/postList')\">게시판</v-btn> -->\r\n            <v-btn @click=\"$router.push('/chartjs')\">뷰차트 테스트</v-btn>\r\n            <v-row>\r\n                <v-col>\r\n\r\n                    <v-card>\r\n                        <v-card-title>\r\n                            <h2><span class=\"title mb-1\">국내</span></h2>\r\n                        </v-card-title>\r\n                        \r\n                        <v-list-item  >\r\n                            \r\n                            <v-list-item-content class=\"justify-center\">\r\n                                <v-card-title >확진</v-card-title>\r\n                                <v-card-text><h2>{{koreaTotal.TotalConfirmed}}</h2></v-card-text>\r\n                            </v-list-item-content >\r\n                            <v-list-item-content class=\"justify-center\">\r\n                                <v-card-title >완치</v-card-title>\r\n                                <v-card-text><h2>{{koreaTotal.TotalRecovered}}</h2></v-card-text>\r\n                                \r\n                            </v-list-item-content >\r\n                            <v-list-item-content class=\"justify-center\">\r\n                                <v-card-title >사망</v-card-title>\r\n                                <v-card-text><h2>{{koreaTotal.TotalDeaths}}</h2></v-card-text>\r\n                                \r\n                            </v-list-item-content >\r\n                        </v-list-item>\r\n                    </v-card>\r\n                </v-col>\r\n                <v-col >\r\n                    <v-card>\r\n                        <v-card-title>\r\n                            <h2><span class=\"title mb-1\">해외</span></h2>\r\n                        </v-card-title>\r\n                        <v-list-item >\r\n                            \r\n                            <v-list-item-content class=\"justify-center\">\r\n                                <v-card-title >확진</v-card-title>\r\n                                <v-card-text><h2>{{worldTotal.TotalConfirmed}}</h2></v-card-text>\r\n                            </v-list-item-content >\r\n                            <v-list-item-content class=\"justify-center\">\r\n                                <v-card-title >완치</v-card-title>\r\n                                <v-card-text><h2>{{worldTotal.TotalRecovered}}</h2></v-card-text>\r\n                                \r\n                            </v-list-item-content >\r\n                            <v-list-item-content class=\"justify-center\">\r\n                                <v-card-title >사망</v-card-title>\r\n                                <v-card-text><h2>{{worldTotal.TotalDeaths}}</h2></v-card-text>\r\n                                \r\n                            </v-list-item-content >\r\n                        </v-list-item>\r\n                    </v-card>\r\n                </v-col>\r\n            </v-row>\r\n            <v-row>\r\n                <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n                    <v-card>\r\n                        <h3>국내 확진자수 증가추이</h3>\r\n                        \r\n                        <line-chart \r\n                        v-if=\"loaded\"\r\n                        :chart-data=\"koreaChartData\"\r\n                        >\r\n                        </line-chart>\r\n                    </v-card>\r\n                </v-col>\r\n                <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n                    <v-card>\r\n                        <h3>도시별 확진자 현황</h3>\r\n                        <bar-chart\r\n                        :chart-data=\"koreaCityChartData\"\r\n                        v-if=\"cityChartLoaded\">\r\n                        </bar-chart>\r\n                        \r\n                    </v-card>\r\n                </v-col>\r\n            </v-row>\r\n            \r\n            <v-row>\r\n                <v-col cols=\"12\" xs=\"12\" md=\"6\" >\r\n                    <v-card>\r\n                        <v-card-title>\r\n                            <h2><span class=\"title mb-4\">국내 주요 뉴우스</span></h2>\r\n                        </v-card-title>\r\n                        <v-card-text v-for=\"news in naverNews\" :key=\"news\">\r\n                            <h4>\r\n                                <a :href=\"news.href\" style=\"text-decoration:none; color:#2d46c4\" target=\"_blank\">{{news.title}}</a>\r\n                            </h4>\r\n                        </v-card-text>\r\n                        \r\n                    </v-card>\r\n                </v-col>\r\n\r\n                <v-col cols=\"12\" xs=\"12\" md=\"6\" >\r\n                    <v-card>\r\n                        <v-card-title>\r\n                            <h2><span class=\"title mb-4\">해외 주요 뉴우스</span></h2>\r\n                        </v-card-title>\r\n                        <v-card-text v-for=\"news in googleNews\" :key=\"news\">\r\n                            <h4>\r\n                                <a :href=\"news.href\" style=\"text-decoration:none; color:#2d46c4\" target=\"_blank\">{{news.title}}</a>\r\n                            </h4>\r\n                        </v-card-text>\r\n                        \r\n                    </v-card>\r\n                </v-col>\r\n            </v-row>\r\n\r\n            <v-row justify=\"center\">\r\n                <v-col cols=\"12\" sm=\"12\" md=\"8\">\r\n                    <v-card>\r\n                        <h3>국내 발병 지도</h3>\r\n                        <GChart\r\n                            type=\"GeoChart\"\r\n                            :settings=\"{ packages: [ 'geochart'], mapsApiKey : 'AIzaSyDXlL3m7Q99D4ZDHEDntQ5b_uj30bzduqY' }\"\r\n                            :data=\"koreaGeoChartData\"\r\n                            :options=\"koreaGeoChartOptions\"\r\n                            \r\n                        />\r\n                        \r\n                    </v-card>\r\n                </v-col>\r\n                <!-- <v-col cols=\"6\">\r\n                    <v-card>\r\n                        <GChart\r\n                            type=\"GeoChart\"\r\n                            :settings=\"{ packages: [ 'geochart'], mapsApiKey : 'AIzaSyDXlL3m7Q99D4ZDHEDntQ5b_uj30bzduqY' }\"\r\n                            :data=\"worldGeoChartData\"\r\n                            :options=\"worldGeoChartOptions\"\r\n                           \r\n                        />\r\n                    </v-card>\r\n                </v-col> -->\r\n            </v-row>\r\n\r\n\r\n            <v-row>\r\n                <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n                    <v-card>\r\n\r\n                        <h3>국내 확진자 일일 신규 증가추이</h3>\r\n                        \r\n                        <line-chart \r\n                        v-if=\"loaded\"\r\n                        :chart-data=\"koreaDailyChartData\">\r\n                        </line-chart>\r\n\r\n                    </v-card>\r\n                    \r\n                </v-col>\r\n                <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n                   <v-card>\r\n                        <h3>성별 확진자 현황</h3>\r\n                        <pie-chart\r\n                        :chart-data=\"koreaGenChartData\"\r\n                        v-if=\"genAgeChartLoaded\">\r\n                        </pie-chart>\r\n                   </v-card>\r\n                </v-col>\r\n            </v-row>\r\n            <v-row>\r\n                <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n                    <v-card>\r\n                        <h3>연령대별 확진자 현황</h3>\r\n                        <polar-area-chart\r\n                        :chart-data=\"koreaAgeChartData\"\r\n                        v-if=\"genAgeChartLoaded\">\r\n                        </polar-area-chart>\r\n                    </v-card>\r\n                </v-col>\r\n                <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n                    \r\n                    <v-card>\r\n                        <h3>연령대별 치명율 현황</h3>\r\n                        <radar-chart\r\n                        :chart-data=\"koreaCriticalChartData\"\r\n                        v-if=\"genAgeChartLoaded\">\r\n                        </radar-chart>\r\n                    </v-card>\r\n                    \r\n                </v-col>\r\n            </v-row>\r\n            \r\n            \r\n            <!-- <v-row>\r\n                <v-col cols=\"12\"  md=\"8\" lg=\"9\">\r\n                    <v-card >\r\n                        <GChart\r\n                            type=\"GeoChart\"\r\n                            :settings=\"{ packages: [ 'geochart'], mapsApiKey : 'AIzaSyDXlL3m7Q99D4ZDHEDntQ5b_uj30bzduqY' }\"\r\n                            :data=\"koreaGeoChartData\"\r\n                            :options=\"koreaGeoChartOptions\"\r\n                            \r\n                        />\r\n                    </v-card>\r\n                </v-col>\r\n                <v-col cols=\"12\" md=\"4\" lg=\"3\">\r\n                    <v-card >\r\n                        <v-carousel\r\n                            cycle\r\n                            \r\n                            hide-delimiter-background\r\n                            show-arrows-on-hover\r\n                            height=\"auto\"\r\n                        >\r\n                            <v-carousel-item\r\n                            v-for=\"slide in slides\"\r\n                            :key=\"slide\"\r\n                            \r\n                        \r\n                            >\r\n                           \r\n                            <v-img :src=\"slide.src\" contain />\r\n                               \r\n                            </v-carousel-item>\r\n                        </v-carousel>\r\n                    </v-card>\r\n                </v-col>\r\n                \r\n            </v-row> -->\r\n            <v-row>\r\n                <v-col>\r\n                    \r\n                    <v-card>\r\n                        <h3>전세계 확진 발병 지도</h3>\r\n                        <GChart\r\n                            type=\"GeoChart\"\r\n                            :settings=\"{ packages: [ 'geochart'], mapsApiKey : 'AIzaSyDXlL3m7Q99D4ZDHEDntQ5b_uj30bzduqY' }\"\r\n                            :data=\"worldGeoChartData\"\r\n                            :options=\"worldGeoChartOptions\"\r\n                           \r\n                        />\r\n                    </v-card>\r\n                </v-col>\r\n            </v-row>\r\n            <v-row>\r\n                <v-col cols=\"12\" sm=\"12\" md=\"6\" >\r\n                    <v-card>\r\n                        <h3>전세계 증가추이</h3>\r\n                        <line-chart\r\n                        :chart-data=\"worldChartData\"\r\n                        v-if=\"worldChartLoaded\">\r\n                        </line-chart>\r\n                    </v-card>\r\n                </v-col>\r\n                <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n                    <v-card>\r\n                        <h3>국가별 확진 현황</h3>\r\n                        <pie-chart\r\n                        :chart-data=\"worldCounrtyChartData\"\r\n                        v-if=\"worldCounrtyChartLoaded\">\r\n                        </pie-chart>\r\n                    </v-card>\r\n                </v-col>\r\n            </v-row>\r\n            <v-row justify=\"center\">\r\n                 <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n                    <v-card >\r\n                        <v-carousel\r\n                            cycle\r\n                            \r\n                            hide-delimiter-background\r\n                            show-arrows-on-hover\r\n                            height=\"auto\"\r\n                        >\r\n                            <v-carousel-item\r\n                            v-for=\"slide in slides\"\r\n                            :key=\"slide\"\r\n                            \r\n                        \r\n                            >\r\n                           \r\n                            <v-img :src=\"slide.src\" contain />\r\n                               \r\n                            </v-carousel-item>\r\n                        </v-carousel>\r\n                    </v-card>\r\n                </v-col>\r\n            </v-row>\r\n            \r\n            <v-row justify=\"center\">\r\n                <v-col cols=\"8\">\r\n                    <v-card>\r\n                        <h3>전염병 통계 비교</h3>\r\n                        <v-simple-table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>병명</th>\r\n                                    <th>코로나 19</th>\r\n                                    <th>MERS</th>\r\n                                    <th>SARS</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>발생연도</td>\r\n                                    <td>2019</td>\r\n                                    <td>2012</td>\r\n                                    <td>2003</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>확진자</td>\r\n                                    <td>{{worldTotal.TotalConfirmed}}</td>\r\n                                    <td>2,494</td>\r\n                                    <td>8,096</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>사망자</td>\r\n                                    <td>{{worldTotal.TotalDeaths}}</td>\r\n                                    <td>858</td>\r\n                                    <td>774</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>치명율</td>\r\n                                    <td>{{worldTotal.TotalCritical}}%</td>\r\n                                    <td>약 10%</td>\r\n                                    <td>약 35%</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>영향국가</td>\r\n                                    <td>214</td>\r\n                                    <td>27</td>\r\n                                    <td>26</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </v-simple-table>\r\n                    </v-card>\r\n                </v-col>\r\n               \r\n            </v-row>\r\n        </v-container>\r\n        \r\n</template>\r\n\r\n<script>\r\nimport LineChart from '@/components/LineChart'\r\nimport BarChart from '@/components/BarChart'\r\nimport PieChart from '@/components/PieChart'\r\nimport { GChart } from 'vue-google-charts'\r\nimport PolarAreaChart from '@/components/PolarAreaChart'\r\nimport RadarChart from '@/components/RadarChart'\r\n\r\nexport default {\r\n    components:{\r\n        LineChart,\r\n        BarChart,\r\n        GChart,\r\n        PieChart,\r\n        PolarAreaChart,\r\n        RadarChart,\r\n    },\r\n    data(){\r\n        return {\r\n            worldTotal:{},\r\n            koreaTotal:{},\r\n            koreaTotalChartData: null,\r\n            koreaDailyChartData:null,\r\n            koreaGenChartData:null,\r\n            koreaAgeChartData:null,\r\n            koreaCriticalChartData:null,\r\n            koreaCityChartData:null,\r\n            worldChartData:null,\r\n            loaded:false,\r\n            naverNews:'',\r\n            googleNews:'',\r\n            genAgeChartLoaded:false,\r\n            cityChartLoaded:false,\r\n            worldChartLoaded:false,\r\n            worldCounrtyChartData:null,\r\n            worldCounrtyChartLoaded:false,\r\n            \r\n            koreaGeoChartData: [\r\n               \r\n                ['City', '확진'],\r\n                [{v:'KR-49',f:'제주'}],\r\n                [{v:'KR-48',f:'경남'}],\r\n                [{v:'KR-47',f:'경북'}],\r\n                [{v:'KR-46',f:'전남'}],\r\n                [{v:'KR-45',f:'전북'}],\r\n                [{v:'KR-44',f:'충남'}],\r\n                [{v:'KR-43',f:'충북'}],\r\n                [{v:'KR-42',f:'강원'}],\r\n                [{v:'KR-41',f:'경기'}],\r\n                [{v:'KR-50',f:'세종'}],\r\n                [{v:'KR-31',f:'울산'}],\r\n                [{v:'KR-30',f:'대전'}],\r\n                [{v:'KR-29',f:'광주'}],\r\n                [{v:'KR-28',f:'인천'}],\r\n                [{v:'KR-27',f:'대구'}],\r\n                [{v:'KR-26',f:'부산'}],\r\n                [{v:'KR-11',f:'서울'}],\r\n                \r\n            ],\r\n            koreaGeoChartOptions: {\r\n                region: 'KR',\r\n                resolution: 'provinces',\r\n                colorAxis:{\r\n                    minValue: 0,  colors: ['#fffcfc', '#b00b0b']\r\n                }\r\n            },\r\n\r\n            worldGeoChartData:[['Country', '확진'] ],\r\n\r\n\r\n            worldGeoChartOptions:{\r\n                resolution: 'countries',\r\n                colorAxis:{\r\n                    minValue: 0,  colors: ['#fffcfc', '#b00b0b']\r\n                }\r\n            },\r\n            slides:[\r\n                {\r\n                    src: 'images/corona-1.jpg'\r\n                },\r\n                {\r\n                    src: 'images/corona-2.jpg'\r\n                },\r\n                {\r\n                    src: 'images/corona-3.jpg'\r\n                },\r\n                {\r\n                    src: 'images/corona-4.jpg'\r\n                },\r\n                \r\n            ]\r\n\r\n            \r\n        }\r\n    },\r\n    created(){\r\n        this.getWorldDailyTotal()\r\n        this.getKoreaDailyTotal()\r\n        this.googleCrawling()\r\n        \r\n        this.naverCrawling()\r\n        this.covidGenAge();\r\n        this.covidCity();\r\n\r\n        this.getCountryTotal()\r\n       \r\n       \r\n    },\r\n    methods:{\r\n       \r\n        async getWorldDailyTotal(){\r\n            try{\r\n                let { data } = await axios.get('/covid/world/daily')\r\n                console.log(data)\r\n                this.worldChartData  = {\r\n                    labels : data.map(covid => covid.reportDate.substring(5)),\r\n                    datasets:[\r\n                        {\r\n                            label: 'Confirmed',\r\n                            borderColor:'#03fcec',\r\n                            backgroundColor:'rgba(3, 252, 236, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: data.map(covid => covid.confirmed.total)\r\n                        },\r\n                        {\r\n                            label: 'Deaths',\r\n                            borderColor:'#c70808',\r\n                            backgroundColor:'rgba(199, 8, 8, 0.7)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: data.map(covid => covid.deaths.total)\r\n                        }\r\n                    ]\r\n                }\r\n                \r\n                this.worldChartLoaded = true\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async getCountryTotal(){\r\n            try{\r\n                let { data } = await axios.get('/covid/world')\r\n                \r\n                console.log(data)\r\n\r\n                let world = data[7]\r\n                \r\n                this.worldTotal = {\r\n                    TotalConfirmed : world.confirmed,\r\n                    TotalDeaths : world.deaths,\r\n                    TotalRecovered : world.recovered,\r\n                    TotalCritical: (this.stringFormat(world.deaths) / this.stringFormat(world.confirmed) * 100 ).toFixed(1)\r\n                }\r\n\r\n                data = data.slice(8,223)\r\n                \r\n                data.forEach(covid => {\r\n                    let confirmed = covid.confirmed.replaceAll(/,/g,'')\r\n                    this.worldGeoChartData.push([covid.country, parseInt(confirmed, 10)])\r\n                })\r\n                \r\n                const otherCountryCount = data.slice(10)\r\n                                         .map(covid => this.stringFormat(covid.confirmed))\r\n                                         .reduce((acc,cur) => acc + cur)\r\n                data = data.slice(0,10)\r\n\r\n                this.worldCounrtyChartData = {\r\n                    labels: [...(data.map(covid => covid.country)), 'other'],\r\n                    datasets:[\r\n                        {\r\n                            label: 'Confirmed',\r\n                            borderColor:'rgba(255, 255, 255, 0)',\r\n                            backgroundColor:[\r\n                                '#b3290b',\r\n                                '#460bb3',\r\n                                '#4eb30b',\r\n                                '#0babb3',\r\n                                '#b3730b',\r\n                                '#cfc44c',\r\n                                '#cf4cb5',\r\n                                '#6e1427',\r\n                                '#637ed4',\r\n                                '#487564',\r\n                                '#8e9190'\r\n\r\n                            ],\r\n                            \r\n                            data: [...(data.map(covid => this.stringFormat(covid.confirmed))), otherCountryCount]\r\n                        }\r\n                    ]\r\n                }\r\n               \r\n                this.worldCounrtyChartLoaded = true\r\n\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async getKoreaDailyTotal(){\r\n            try{\r\n                let { data } = await axios.get('/covid/korea/day')\r\n                \r\n                data = data.response.body.items.item.reverse()\r\n                data.splice(116, 2)\r\n                console.log(data)\r\n                let dates = data.map(covid => covid.createDt.substring(5,10))\r\n                let confirmed = data.map(covid => covid.decideCnt)\r\n                let recovered = data.map(covid => covid.clearCnt)\r\n                let deaths = data.map(covid => covid.deathCnt)\r\n                this.koreaChartData = {\r\n                    labels: dates,\r\n                    datasets:[\r\n                        {\r\n                            label: 'Confirmed',\r\n                            borderColor:'#03fcec',\r\n                            backgroundColor:'rgba(3, 252, 236, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: confirmed\r\n                        },\r\n                        {\r\n                            label: 'Recovered',\r\n                            borderColor:'#0ecf4b',                     \r\n                            backgroundColor:'rgba(14, 207, 75, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: recovered\r\n                        },\r\n                        \r\n                        {\r\n                            label: 'Deaths',\r\n                            borderColor:'#c70808',\r\n                            backgroundColor:'rgba(199, 8, 8, 0.7)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: deaths\r\n                        },\r\n                        \r\n                    ]\r\n                }\r\n                \r\n                let dailyConfirmed = confirmed.slice(confirmed.length - 31)\r\n                let dailyDates = dates.slice(dates.length - 30)\r\n                \r\n                for(let i=0; i<30; i++){\r\n                    dailyConfirmed[i] = dailyConfirmed[i+1] - dailyConfirmed[i]\r\n                }\r\n                console.log(dailyConfirmed)\r\n                this.koreaDailyChartData = {\r\n                    labels: dailyDates,\r\n                    datasets:[\r\n                        {\r\n                            label: 'Confirmed',\r\n                            borderColor:'#03fcec',\r\n                            backgroundColor:'rgba(3, 252, 236, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: dailyConfirmed.slice(0,dailyConfirmed.length-1)\r\n                        }\r\n                    ]\r\n                }\r\n\r\n                this.koreaTotal = {\r\n                    TotalConfirmed : this.numberFormat(confirmed[confirmed.length-1]),\r\n                    TotalDeaths : this.numberFormat(deaths[deaths.length-1]),\r\n                    TotalRecovered : this.numberFormat(recovered[recovered.length-1])\r\n                }\r\n                this.loaded = true\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async naverCrawling(){\r\n            try{\r\n                let { data } = await axios.get('/covid/news/naver')\r\n                this.naverNews = data\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async googleCrawling(){\r\n            try{\r\n                let { data } = await axios.get('/covid/news/google')\r\n                this.googleNews = data\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async covidGenAge(){\r\n            try{\r\n                let res = await axios.get('/covid/korea/genAge')\r\n                console.log(res)\r\n                let data = res.data.response.body.items.item\r\n                let ageData = data.slice(0, 9)\r\n                let genData = data.slice(9, 11)\r\n                \r\n                let age = ageData.map(genAge => genAge.gubun)\r\n               \r\n                this.koreaAgeChartData = {\r\n                    labels: age,\r\n                    datasets:[\r\n                        {\r\n                            label: '확진',\r\n                            borderWidth: 1,\r\n                            backgroundColor:[\r\n                                'rgba(240, 12, 12, 0.2)',\r\n                                'rgba(237, 226, 14, 0.2)',\r\n                                'rgba(29, 237, 14, 0.2)',\r\n                                'rgba(237, 159, 14, 0.2)',\r\n                                'rgba(14, 237, 237, 0.2)',\r\n                                'rgba(14, 44, 237, 0.2)',\r\n                                'rgba(189, 235, 52, 0.2)',\r\n                                'rgba(171, 50, 165, 0.2)',\r\n                                'rgba(91, 168, 35, 0.2)',\r\n                            ],\r\n                            borderColor:[\r\n                                'rgba(240, 12, 12, 1)',\r\n                                'rgba(237, 226, 14, 1)',\r\n                                'rgba(29, 237, 14, 1)',\r\n                                'rgba(237, 159, 14, 1)',\r\n                                'rgba(14, 237, 237, 1)',\r\n                                'rgba(14, 44, 237, 1)',\r\n                                'rgba(189, 235, 52, 1)',\r\n                                'rgba(171, 50, 165, 1)',\r\n                                'rgba(91, 168, 35, 1)',\r\n                            ],\r\n                            data : ageData.map(genAge => genAge.confCase)\r\n                        }\r\n                    ]\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n                // this.koreaAgeChartData = {\r\n                //     labels : age,\r\n                //     datasets:[\r\n                //         {\r\n                //             label: '확진자',\r\n                //             borderColor:'#03fcec',\r\n                //             backgroundColor:'rgba(3, 252, 236, 0.2)',\r\n                //             pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                //             borderWidth: 2,\r\n                //             data: ageData.map(genAge => genAge.confCase)\r\n                //         },\r\n                        \r\n                //     ]\r\n                // }\r\n\r\n                this.koreaCriticalChartData = {\r\n                    labels : age,\r\n                    datasets:[\r\n                        {\r\n                            label: '치명율 (사망자/확진자)',\r\n                            \r\n                            backgroundColor:'rgba(54, 162, 235, 0.2)',\r\n                            \r\n                            borderWidth: 1,\r\n                            data: ageData.map(genAge => genAge.criticalRate)\r\n                        },\r\n                        \r\n                    ]\r\n                }\r\n\r\n                this.koreaGenChartData = {\r\n                    labels : genData.map(genAge => genAge.gubun),\r\n                    datasets: [\r\n                        {\r\n                            label: '확진자',\r\n                            borderColor:[\r\n                                'rgba(255,99,132,1)',\r\n                                'rgba(54, 162, 235, 1)',\r\n                            ],\r\n                            backgroundColor:[\r\n                                'rgba(255, 99, 132, 0.2)',\r\n                                'rgba(54, 162, 235, 0.2)',\r\n                            ],\r\n                            \r\n                            borderWidth: 2,\r\n                            data: genData.map(genAge => genAge.confCase)\r\n                        },\r\n                    ]\r\n                }\r\n                this.genAgeChartLoaded = true\r\n                console.log(age)\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async covidCity(){\r\n            try{\r\n                let res = await axios.get('/covid/korea/city')\r\n                let cityData = res.data.response.body.items.item.slice(0, 18)\r\n                console.log(cityData)\r\n                this.koreaCityChartData = {\r\n                    labels: cityData.map(city => city.gubun),\r\n                    datasets:[\r\n                        {\r\n                            label: '확진자',\r\n                            borderColor:'#03fcec',\r\n                            backgroundColor:'rgba(3, 252, 236, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: cityData.map(city => city.defCnt)\r\n                        }\r\n                    ]\r\n                }\r\n                this.cityChartLoaded = true\r\n\r\n                for(let i=1; i<cityData.length; i++){\r\n                    this.koreaGeoChartData[i].push(cityData[i].defCnt)\r\n                }\r\n                this.koreaGeoChartLoaded = true\r\n\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        numberFormat(input){\r\n            return input.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n        },\r\n        stringFormat(input){\r\n            return parseInt(input.replaceAll(/,/g, ''), 10)\r\n        }\r\n        \r\n            \r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/views"}]}