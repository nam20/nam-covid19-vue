{"remainingRequest":"C:\\projects\\nam-lol\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\projects\\nam-lol\\frontend\\src\\views\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\projects\\nam-lol\\frontend\\src\\views\\index.vue","mtime":1600436455493},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n       <v-container fluid style=\"background-color: #f7f9fc\"> \r\n            \r\n            <today-total \r\n            :koreaTotalData=\"koreaDailyTotalData\" \r\n            :worldTotalData=\"worldTotalData\"\r\n            >\r\n            </today-total>\r\n          \r\n            <korea-daily\r\n            :dailyTotalData=\"koreaDailyTotalData\"\r\n            :cityData=\"koreaCityData\">\r\n            </korea-daily>\r\n        \r\n            <covid-news>\r\n            </covid-news>\r\n      \r\n            <city-gender\r\n            :cityData=\"koreaCityData\"\r\n            :genderData=\"koreaGenData\">\r\n            </city-gender>\r\n\r\n            <age-status\r\n            :ageData=\"koreaAgeData\">\r\n            </age-status>\r\n\r\n            <korea-country\r\n            :koreaNewConfData=\"koreaDailyTotalData\"\r\n            :worldCountryData=\"countryTotalData\">\r\n            </korea-country>\r\n\r\n            <world-daily\r\n            :countryData=\"countryTotalData\">\r\n            </world-daily>\r\n\r\n            <covid-other\r\n            :koreaTotalData=\"koreaDailyTotalData\" \r\n            :worldTotalData=\"worldTotalData\">\r\n            </covid-other>\r\n            \r\n        </v-container>        \r\n</template>\r\n\r\n<script>\r\nimport TodayTotal from '@/components/TodayTotal'\r\nimport CovidNews from '@/components/CovidNews'\r\nimport KoreaDaily from '@/components/KoreaDaily'\r\nimport CityGender from '@/components/CityGender'\r\nimport AgeStatus from '@/components/AgeStatus'\r\nimport KoreaCountry from '@/components/KoreaCountry'\r\nimport WorldDaily from '@/components/WorldDaily'\r\nimport CovidOther from '@/components/CovidOther'\r\n\r\nexport default {\r\n    components:{\r\n        TodayTotal,\r\n        CovidNews,\r\n        KoreaDaily,\r\n        CityGender,\r\n        AgeStatus,\r\n        KoreaCountry,\r\n        WorldDaily,\r\n        CovidOther\r\n    },\r\n    data(){\r\n        return {\r\n            \r\n            worldTotalData : '',\r\n            \r\n            koreaDailyTotalData:'',\r\n            \r\n            koreaCityData:'',\r\n\r\n            koreaGenData:'',\r\n    \r\n            koreaAgeData:'',\r\n\r\n            countryTotalData:'',\r\n        }\r\n    },\r\n\r\n    created(){\r\n        this.getKoreaDailyTotal()\r\n        this.getCountryTotal()\r\n        this.covidGenAge();\r\n        this.covidCity();\r\n    },\r\n    methods:{\r\n       \r\n        async getCountryTotal(){\r\n            try{\r\n                let { data } = await axios.get('/covid/world')\r\n                \r\n                data = data.map(covid => {\r\n                    return {\r\n                        confirmed : this.stringFormat(covid.confirmed),\r\n                        recovered : this.stringFormat(covid.recovered),\r\n                        deaths : this.stringFormat(covid.deaths),\r\n                        country : covid.country\r\n                    }\r\n                })\r\n                \r\n                this.worldTotalData = data.slice(0,2)\r\n\r\n                this.countryTotalData = data.slice(2,217)\r\n\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async getKoreaDailyTotal(){\r\n            try{\r\n                let { data } = await axios.get('/covid/korea/day')\r\n                console.log(data)\r\n                data = data.response.body.items.item.reverse()\r\n                data.splice(116, 2)\r\n                \r\n                //this.koreaTotal = data.slice(data.length-2)\r\n                \r\n                const dates = data.map(covid => covid.createDt.substring(5,10))\r\n                const confirmed = data.map(covid => covid.decideCnt)\r\n                const recovered = data.map(covid => covid.clearCnt)\r\n                const deaths = data.map(covid => covid.deathCnt)\r\n\r\n                this.koreaDailyTotalData = {\r\n                    dates, \r\n                    confirmed,\r\n                    recovered,\r\n                    deaths\r\n                }\r\n\r\n                \r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n       \r\n        async covidGenAge(){\r\n            try{\r\n                const res = await axios.get('/covid/korea/genAge')\r\n                \r\n                const data = res.data.response.body.items.item\r\n                \r\n               \r\n                this.koreaAgeData = data.slice(0, 9)\r\n          \r\n                this.koreaGenData = data.slice(9, 11)\r\n\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async covidCity(){\r\n            try{\r\n                const res = await axios.get('/covid/korea/city')\r\n                const cityData = res.data.response.body.items.item.slice(0, 18)\r\n                const cityNames = cityData.map(city => city.gubun)\r\n\r\n                this.koreaCityData = {\r\n                    cityData, \r\n                    cityNames\r\n                }\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        stringFormat(input){\r\n            return input && input != \"N/A\" ? parseInt(input.replaceAll(/,/g, ''), 10) : 0\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"],"sourceRoot":"src/views"}]}