{"remainingRequest":"C:\\projects\\nam-lol\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\projects\\nam-lol\\frontend\\src\\components\\WorldDaily.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\projects\\nam-lol\\frontend\\src\\components\\WorldDaily.vue","mtime":1600489245180},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L3Byb2plY3RzL25hbS1sb2wvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBHQ2hhcnQgfSBmcm9tICd2dWUtZ29vZ2xlLWNoYXJ0cyc7CmltcG9ydCBDaGFydENhcmQgZnJvbSAnLi9DaGFydENhcmQnOwppbXBvcnQgTGluZUNoYXJ0IGZyb20gJ0AvY29tcG9uZW50cy9jaGFydC9MaW5lQ2hhcnQnOwppbXBvcnQgaXNvQ291bnRyaWVzIGZyb20gJ0AvZGF0YS9pc29Db3VudHJpZXMnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgR0NoYXJ0OiBHQ2hhcnQsCiAgICBDaGFydENhcmQ6IENoYXJ0Q2FyZCwKICAgIExpbmVDaGFydDogTGluZUNoYXJ0CiAgfSwKICBwcm9wczogWydjb3VudHJ5RGF0YSddLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB3b3JsZEdlb0NoYXJ0RGF0YTogW1snQ291bnRyeScsICftmZXsp4TsnpAnLCAn7IKs66ed7J6QJ11dLAogICAgICB3b3JsZEdlb0NoYXJ0T3B0aW9uczogewogICAgICAgIHJlc29sdXRpb246ICdjb3VudHJpZXMnLAogICAgICAgIGNvbG9yQXhpczogewogICAgICAgICAgbWluVmFsdWU6IDAsCiAgICAgICAgICBjb2xvcnM6IFsnI2ZmZmNmYycsICcjYjAwYjBiJ10KICAgICAgICB9LAogICAgICAgIGhlaWdodDogNTUwCiAgICAgIH0sCiAgICAgIHdvcmxkR2VvQ2hhcnRMb2FkZWQ6IGZhbHNlLAogICAgICBkYWlseVRvdGFsQ2hhcnREYXRhOiAnJywKICAgICAgZGFpbHlUb3RhbENoYXJ0TG9hZGVkOiBmYWxzZQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldFdvcmxkRGFpbHlUb3RhbENoYXJ0KCk7CiAgICBjb25zb2xlLmxvZyhpc29Db3VudHJpZXNbJ0FmZ2hhbmlzdGFuJ10pOwogIH0sCiAgd2F0Y2g6IHsKICAgIGNvdW50cnlEYXRhOiBmdW5jdGlvbiBjb3VudHJ5RGF0YSgpIHsKICAgICAgdGhpcy53b3JsZENvdW50cnlHZW9DaGFydCgpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgd29ybGRDb3VudHJ5R2VvQ2hhcnQ6IGZ1bmN0aW9uIHdvcmxkQ291bnRyeUdlb0NoYXJ0KCkgewogICAgICB2YXIgZGF0YSA9IHRoaXMuY291bnRyeURhdGE7CiAgICAgIHZhciBjb3VudHJ5R2VvRGF0YSA9IGRhdGEubWFwKGZ1bmN0aW9uIChjb3ZpZCkgewogICAgICAgIHZhciBpc29Db3VudHJ5ID0gaXNvQ291bnRyaWVzW2NvdmlkLmNvdW50cnldOwogICAgICAgIHJldHVybiBbewogICAgICAgICAgdjogaXNvQ291bnRyeS5pc28sCiAgICAgICAgICBmOiBpc29Db3VudHJ5Lm5hbWUKICAgICAgICB9LCBjb3ZpZC5jb25maXJtZWQsIGNvdmlkLmRlYXRoc107CiAgICAgIH0pLmZpbHRlcihmdW5jdGlvbiAoY292aWQpIHsKICAgICAgICByZXR1cm4gY292aWRbMF0udjsKICAgICAgfSk7CiAgICAgIHRoaXMud29ybGRHZW9DaGFydERhdGEgPSB0aGlzLndvcmxkR2VvQ2hhcnREYXRhLmNvbmNhdChjb3VudHJ5R2VvRGF0YSk7CiAgICAgIHRoaXMud29ybGRHZW9DaGFydExvYWRlZCA9IHRydWU7CiAgICB9LAogICAgZ2V0V29ybGREYWlseVRvdGFsQ2hhcnQ6IGZ1bmN0aW9uIGdldFdvcmxkRGFpbHlUb3RhbENoYXJ0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgX3lpZWxkJGF4aW9zJGdldCwgZGF0YTsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoJy9jb3ZpZC93b3JsZC9kYWlseScpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBfeWllbGQkYXhpb3MkZ2V0ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkYXhpb3MkZ2V0LmRhdGE7CiAgICAgICAgICAgICAgICBfdGhpcy5kYWlseVRvdGFsQ2hhcnREYXRhID0gewogICAgICAgICAgICAgICAgICBsYWJlbHM6IGRhdGEubWFwKGZ1bmN0aW9uIChjb3ZpZCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBjb3ZpZC5yZXBvcnREYXRlLnN1YnN0cmluZyg1KTsKICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgIGRhdGFzZXRzOiBbewogICAgICAgICAgICAgICAgICAgIGxhYmVsOiAn7ZmV7KeE7J6QJywKICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogJ3JnYmEoNTQsIDE2MiwgMjM1LCAxKScsCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSg1NCwgMTYyLCAyMzUsIDAuMiknLAogICAgICAgICAgICAgICAgICAgIHBvaW50Qm9yZGVyQ29sb3I6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDApJywKICAgICAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMiwKICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLm1hcChmdW5jdGlvbiAoY292aWQpIHsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb3ZpZC5jb25maXJtZWQudG90YWw7CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBfdGhpcy5kYWlseVRvdGFsQ2hhcnRMb2FkZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA5OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoX2NvbnRleHQudDApOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1swLCA5XV0pOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["WorldDaily.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <v-row>\r\n        <v-col cols=\"12\" md=\"6\">\r\n            <chart-card>\r\n                <template v-slot:title>\r\n                    코로나 발병 세계 지도\r\n                </template>\r\n                <template v-slot:body>\r\n                    <GChart\r\n                    type=\"GeoChart\"\r\n                    :settings=\"{ packages: [ 'geochart'] }\"\r\n                    :data=\"worldGeoChartData\"\r\n                    :options=\"worldGeoChartOptions\"\r\n                    :resizeDebounce=\"1000\"\r\n                    v-if=\"worldGeoChartLoaded\"\r\n                    \r\n                    />\r\n                </template>\r\n            </chart-card>\r\n        </v-col>\r\n        <v-col cols=\"12\" md=\"6\">\r\n            <chart-card>\r\n                <template v-slot:title>\r\n                    전세계 확진자 증가추이\r\n                </template>\r\n                <template v-slot:body>\r\n                    <line-chart\r\n                    :chart-data=\"dailyTotalChartData\"\r\n                    v-if=\"dailyTotalChartLoaded\"\r\n                    :height=\"550\">\r\n                    </line-chart>\r\n                </template>\r\n            </chart-card>\r\n        </v-col>\r\n    </v-row>\r\n</template>\r\n\r\n<script>\r\nimport { GChart } from 'vue-google-charts'\r\nimport ChartCard from './ChartCard'\r\nimport LineChart from '@/components/chart/LineChart'\r\nimport isoCountries from '@/data/isoCountries'\r\n\r\nexport default {\r\n    components:{\r\n        GChart,\r\n        ChartCard,\r\n        LineChart\r\n    },\r\n    props:['countryData'],\r\n    data(){\r\n        return {\r\n            worldGeoChartData: [['Country', '확진자', '사망자']],\r\n            worldGeoChartOptions: {\r\n                resolution: 'countries',\r\n                colorAxis:{\r\n                    minValue: 0,  colors: ['#fffcfc', '#b00b0b']\r\n                },\r\n                height:550\r\n            },\r\n            worldGeoChartLoaded: false,\r\n\r\n            dailyTotalChartData: '',\r\n            dailyTotalChartLoaded: false\r\n        }\r\n    },\r\n    created(){\r\n        this.getWorldDailyTotalChart()\r\n\r\n        console.log(isoCountries['Afghanistan'])\r\n        \r\n    },\r\n    watch:{\r\n        countryData(){\r\n            this.worldCountryGeoChart()\r\n        },\r\n        \r\n    },\r\n    methods:{\r\n        worldCountryGeoChart(){\r\n\r\n            const data = this.countryData\r\n\r\n            const countryGeoData = data.map(covid => {\r\n\r\n                const isoCountry = isoCountries[covid.country]\r\n                return [\r\n                    { \r\n                        v: isoCountry.iso,\r\n                        f: isoCountry.name\r\n                    }, \r\n                    covid.confirmed, \r\n                    covid.deaths\r\n                ]\r\n            }).filter(covid => covid[0].v)\r\n\r\n            this.worldGeoChartData = this.worldGeoChartData.concat(countryGeoData)\r\n\r\n            this.worldGeoChartLoaded = true\r\n        },\r\n        async getWorldDailyTotalChart(){\r\n\r\n            try{\r\n                const { data } = await axios.get('/covid/world/daily')\r\n                \r\n                this.dailyTotalChartData  = {\r\n                    labels : data.map(covid => covid.reportDate.substring(5)),\r\n                    datasets:[\r\n                        {\r\n                            label: '확진자',\r\n                            borderColor:'rgba(54, 162, 235, 1)',\r\n                            backgroundColor:'rgba(54, 162, 235, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: data.map(covid => covid.confirmed.total)\r\n                        }\r\n                    ]\r\n                }\r\n                \r\n\r\n                this.dailyTotalChartLoaded = true\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n            \r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"sourceRoot":"src/components"}]}