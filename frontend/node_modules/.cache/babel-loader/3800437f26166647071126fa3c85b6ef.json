{"remainingRequest":"C:\\projects\\nam-lol\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\projects\\nam-lol\\frontend\\src\\views\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\projects\\nam-lol\\frontend\\src\\views\\index.vue","mtime":1598880458992},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJDOi9wcm9qZWN0cy9uYW0tbG9sL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IExpbmVDaGFydCBmcm9tICdAL2NvbXBvbmVudHMvTGluZUNoYXJ0JzsKaW1wb3J0IEJhckNoYXJ0IGZyb20gJ0AvY29tcG9uZW50cy9CYXJDaGFydCc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBMaW5lQ2hhcnQ6IExpbmVDaGFydCwKICAgIEJhckNoYXJ0OiBCYXJDaGFydAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHdvcmxkVG90YWw6IHt9LAogICAgICBrb3JlYVRvdGFsOiB7fSwKICAgICAga29yZWFUb3RhbENoYXJ0RGF0YTogbnVsbCwKICAgICAga29yZWFEYWlseUNoYXJ0RGF0YTogbnVsbCwKICAgICAga29yZWFHZW5DaGFydERhdGE6IG51bGwsCiAgICAgIGtvcmVhQWdlQ2hhcnREYXRhOiBudWxsLAogICAgICBrb3JlYUNyaXRpY2FsQ2hhcnREYXRhOiBudWxsLAogICAgICBrb3JlYUNpdHlDaGFydERhdGE6IG51bGwsCiAgICAgIGxvYWRlZDogZmFsc2UsCiAgICAgIG5hdmVyTmV3czogJycsCiAgICAgIGdvb2dsZU5ld3M6ICcnLAogICAgICBnZW5BZ2VDaGFydExvYWRlZDogZmFsc2UsCiAgICAgIGNpdHlDaGFydExvYWRlZDogZmFsc2UKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRXb3JsZFRvdGFsKCk7CiAgICB0aGlzLmNvcm9uYSgpOwogICAgdGhpcy5nb29nbGVDcmF3bGluZygpOwogICAgdGhpcy5uYXZlckNyYXdsaW5nKCk7CiAgICB0aGlzLmNvdmlkR2VuQWdlKCk7CiAgICB0aGlzLmNvdmlkQ2l0eSgpOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0V29ybGRUb3RhbDogZnVuY3Rpb24gZ2V0V29ybGRUb3RhbCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGF4aW9zLmdldCgnaHR0cHM6Ly9hcGkuY292aWQxOWFwaS5jb20vd29ybGQvdG90YWwnKS50aGVuKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgICAgdmFyIGRhdGEgPSBfcmVmLmRhdGE7CiAgICAgICAgX3RoaXMud29ybGRUb3RhbCA9IHsKICAgICAgICAgIFRvdGFsQ29uZmlybWVkOiBfdGhpcy5udW1iZXJGb3JtYXQoZGF0YS5Ub3RhbENvbmZpcm1lZCksCiAgICAgICAgICBUb3RhbERlYXRoczogX3RoaXMubnVtYmVyRm9ybWF0KGRhdGEuVG90YWxEZWF0aHMpLAogICAgICAgICAgVG90YWxSZWNvdmVyZWQ6IF90aGlzLm51bWJlckZvcm1hdChkYXRhLlRvdGFsUmVjb3ZlcmVkKQogICAgICAgIH07CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICBjb25zb2xlLmVycm9yKGVycik7CiAgICAgIH0pOwogICAgfSwKICAgIGNvcm9uYTogZnVuY3Rpb24gY29yb25hKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIF95aWVsZCRheGlvcyRnZXQsIGRhdGEsIGRhdGVzLCBjb25maXJtZWQsIHJlY292ZXJlZCwgZGVhdGhzLCBkYWlseUNvbmZpcm1lZCwgZGFpbHlEYXRlcywgaTsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoJ2h0dHBzOi8vYXBpLmNvdmlkMTlhcGkuY29tL3RvdGFsL2NvdW50cnkvc291dGgta29yZWEnKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgX3lpZWxkJGF4aW9zJGdldCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBkYXRhID0gX3lpZWxkJGF4aW9zJGdldC5kYXRhOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7CiAgICAgICAgICAgICAgICBkYXRlcyA9IGRhdGEubWFwKGZ1bmN0aW9uIChjb3ZpZCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gY292aWQuRGF0ZS5zdWJzdHJpbmcoNSwgMTApOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBjb25maXJtZWQgPSBkYXRhLm1hcChmdW5jdGlvbiAoY292aWQpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvdmlkLkNvbmZpcm1lZDsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgcmVjb3ZlcmVkID0gZGF0YS5tYXAoZnVuY3Rpb24gKGNvdmlkKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBjb3ZpZC5SZWNvdmVyZWQ7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGRlYXRocyA9IGRhdGEubWFwKGZ1bmN0aW9uIChjb3ZpZCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gY292aWQuRGVhdGhzOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBfdGhpczIua29yZWFDaGFydERhdGEgPSB7CiAgICAgICAgICAgICAgICAgIGxhYmVsczogZGF0ZXMsCiAgICAgICAgICAgICAgICAgIGRhdGFzZXRzOiBbewogICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnQ29uZmlybWVkJywKICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogJyMwM2ZjZWMnLAogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMywgMjUyLCAyMzYsIDAuMiknLAogICAgICAgICAgICAgICAgICAgIHBvaW50Qm9yZGVyQ29sb3I6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDApJywKICAgICAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMiwKICAgICAgICAgICAgICAgICAgICBkYXRhOiBjb25maXJtZWQKICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnUmVjb3ZlcmVkJywKICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogJyMwZWNmNGInLAogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMTQsIDIwNywgNzUsIDAuMiknLAogICAgICAgICAgICAgICAgICAgIHBvaW50Qm9yZGVyQ29sb3I6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDApJywKICAgICAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMiwKICAgICAgICAgICAgICAgICAgICBkYXRhOiByZWNvdmVyZWQKICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnRGVhdGhzJywKICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogJyNjNzA4MDgnLAogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMTk5LCA4LCA4LCAwLjcpJywKICAgICAgICAgICAgICAgICAgICBwb2ludEJvcmRlckNvbG9yOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwKScsCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDIsCiAgICAgICAgICAgICAgICAgICAgZGF0YTogZGVhdGhzCiAgICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgZGFpbHlDb25maXJtZWQgPSBjb25maXJtZWQuc2xpY2UoY29uZmlybWVkLmxlbmd0aCAtIDMxKTsKICAgICAgICAgICAgICAgIGRhaWx5RGF0ZXMgPSBkYXRlcy5zbGljZShkYXRlcy5sZW5ndGggLSAzMCk7CgogICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IDMwOyBpKyspIHsKICAgICAgICAgICAgICAgICAgZGFpbHlDb25maXJtZWRbaV0gPSBkYWlseUNvbmZpcm1lZFtpICsgMV0gLSBkYWlseUNvbmZpcm1lZFtpXTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYWlseUNvbmZpcm1lZCk7CiAgICAgICAgICAgICAgICBfdGhpczIua29yZWFEYWlseUNoYXJ0RGF0YSA9IHsKICAgICAgICAgICAgICAgICAgbGFiZWxzOiBkYWlseURhdGVzLAogICAgICAgICAgICAgICAgICBkYXRhc2V0czogW3sKICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ0NvbmZpcm1lZCcsCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICcjMDNmY2VjJywKICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDMsIDI1MiwgMjM2LCAwLjIpJywKICAgICAgICAgICAgICAgICAgICBwb2ludEJvcmRlckNvbG9yOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwKScsCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDIsCiAgICAgICAgICAgICAgICAgICAgZGF0YTogZGFpbHlDb25maXJtZWQuc2xpY2UoMCwgZGFpbHlDb25maXJtZWQubGVuZ3RoIC0gMSkKICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBfdGhpczIua29yZWFUb3RhbCA9IHsKICAgICAgICAgICAgICAgICAgVG90YWxDb25maXJtZWQ6IF90aGlzMi5udW1iZXJGb3JtYXQoY29uZmlybWVkW2NvbmZpcm1lZC5sZW5ndGggLSAxXSksCiAgICAgICAgICAgICAgICAgIFRvdGFsRGVhdGhzOiBfdGhpczIubnVtYmVyRm9ybWF0KGRlYXRoc1tkZWF0aHMubGVuZ3RoIC0gMV0pLAogICAgICAgICAgICAgICAgICBUb3RhbFJlY292ZXJlZDogX3RoaXMyLm51bWJlckZvcm1hdChyZWNvdmVyZWRbcmVjb3ZlcmVkLmxlbmd0aCAtIDFdKQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIF90aGlzMi5sb2FkZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDIzOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMjA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjA7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihfY29udGV4dC50MCk7CgogICAgICAgICAgICAgIGNhc2UgMjM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDIwXV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBuYXZlckNyYXdsaW5nOiBmdW5jdGlvbiBuYXZlckNyYXdsaW5nKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBfeWllbGQkYXhpb3MkZ2V0MiwgZGF0YTsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoJy9jb3ZpZC9uYXZlckNyYXdsaW5nJyk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIF95aWVsZCRheGlvcyRnZXQyID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBkYXRhID0gX3lpZWxkJGF4aW9zJGdldDIuZGF0YTsKICAgICAgICAgICAgICAgIF90aGlzMy5uYXZlck5ld3MgPSBkYXRhOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDg7CiAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0Mi50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMCwgOF1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZ29vZ2xlQ3Jhd2xpbmc6IGZ1bmN0aW9uIGdvb2dsZUNyYXdsaW5nKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBfeWllbGQkYXhpb3MkZ2V0MywgZGF0YTsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoJy9jb3ZpZC9nb29nbGVDcmF3bGluZycpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBfeWllbGQkYXhpb3MkZ2V0MyA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgZGF0YSA9IF95aWVsZCRheGlvcyRnZXQzLmRhdGE7CiAgICAgICAgICAgICAgICBfdGhpczQuZ29vZ2xlTmV3cyA9IGRhdGE7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDExOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gODsKICAgICAgICAgICAgICAgIF9jb250ZXh0My50MCA9IF9jb250ZXh0M1siY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoX2NvbnRleHQzLnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMywgbnVsbCwgW1swLCA4XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBjb3ZpZEdlbkFnZTogZnVuY3Rpb24gY292aWRHZW5BZ2UoKSB7CiAgICAgIHZhciBfdGhpczUgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgICAgdmFyIHJlcywgZGF0YSwgYWdlRGF0YSwgZ2VuRGF0YSwgYWdlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCcvY292aWQvY2FzZScsIHsKICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgICAgICAgc2VydmljZUNhc2U6ICdnZW5BZ2UnCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7CiAgICAgICAgICAgICAgICBkYXRhID0gcmVzLmRhdGEucmVzcG9uc2UuYm9keS5pdGVtcy5pdGVtOwogICAgICAgICAgICAgICAgYWdlRGF0YSA9IGRhdGEuc2xpY2UoMCwgOSk7CiAgICAgICAgICAgICAgICBnZW5EYXRhID0gZGF0YS5zbGljZSg5LCAxMSk7CiAgICAgICAgICAgICAgICBhZ2UgPSBhZ2VEYXRhLm1hcChmdW5jdGlvbiAoZ2VuQWdlKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBnZW5BZ2UuZ3VidW47CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIF90aGlzNS5rb3JlYUFnZUNoYXJ0RGF0YSA9IHsKICAgICAgICAgICAgICAgICAgbGFiZWxzOiBhZ2UsCiAgICAgICAgICAgICAgICAgIGRhdGFzZXRzOiBbewogICAgICAgICAgICAgICAgICAgIGxhYmVsOiAn7ZmV7KeE7J6QJywKICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogJyMwM2ZjZWMnLAogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMywgMjUyLCAyMzYsIDAuMiknLAogICAgICAgICAgICAgICAgICAgIHBvaW50Qm9yZGVyQ29sb3I6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDApJywKICAgICAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMiwKICAgICAgICAgICAgICAgICAgICBkYXRhOiBhZ2VEYXRhLm1hcChmdW5jdGlvbiAoZ2VuQWdlKSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZ2VuQWdlLmNvbmZDYXNlOwogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgX3RoaXM1LmtvcmVhQ3JpdGljYWxDaGFydERhdGEgPSB7CiAgICAgICAgICAgICAgICAgIGxhYmVsczogYWdlLAogICAgICAgICAgICAgICAgICBkYXRhc2V0czogW3sKICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ+y5mOuqheycqCAo7IKs66ed7J6QL+2ZleynhOyekCknLAogICAgICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiAnIzAzZmNlYycsCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgzLCAyNTIsIDIzNiwgMC4yKScsCiAgICAgICAgICAgICAgICAgICAgcG9pbnRCb3JkZXJDb2xvcjogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMCknLAogICAgICAgICAgICAgICAgICAgIGJvcmRlcldpZHRoOiAyLAogICAgICAgICAgICAgICAgICAgIGRhdGE6IGFnZURhdGEubWFwKGZ1bmN0aW9uIChnZW5BZ2UpIHsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBnZW5BZ2UuY3JpdGljYWxSYXRlOwogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgX3RoaXM1LmtvcmVhR2VuQ2hhcnREYXRhID0gewogICAgICAgICAgICAgICAgICBsYWJlbHM6IGdlbkRhdGEubWFwKGZ1bmN0aW9uIChnZW5BZ2UpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gZ2VuQWdlLmd1YnVuOwogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgZGF0YXNldHM6IFt7CiAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICftmZXsp4TsnpAnLAogICAgICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiAnIzAzZmNlYycsCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgzLCAyNTIsIDIzNiwgMC4yKScsCiAgICAgICAgICAgICAgICAgICAgcG9pbnRCb3JkZXJDb2xvcjogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMCknLAogICAgICAgICAgICAgICAgICAgIGJvcmRlcldpZHRoOiAyLAogICAgICAgICAgICAgICAgICAgIGRhdGE6IGdlbkRhdGEubWFwKGZ1bmN0aW9uIChnZW5BZ2UpIHsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBnZW5BZ2UuY29uZkNhc2U7CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBfdGhpczUuZ2VuQWdlQ2hhcnRMb2FkZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coYWdlKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTk7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gMTY7CiAgICAgICAgICAgICAgICBfY29udGV4dDQudDAgPSBfY29udGV4dDRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0NC50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTk6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTQsIG51bGwsIFtbMCwgMTZdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGNvdmlkQ2l0eTogZnVuY3Rpb24gY292aWRDaXR5KCkgewogICAgICB2YXIgX3RoaXM2ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KCkgewogICAgICAgIHZhciByZXMsIGNpdHlEYXRhOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNSQoX2NvbnRleHQ1KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDUucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCcvY292aWQvY2FzZScsIHsKICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgICAgICAgc2VydmljZUNhc2U6ICdjaXR5JwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQ1LnNlbnQ7CiAgICAgICAgICAgICAgICBjaXR5RGF0YSA9IHJlcy5kYXRhLnJlc3BvbnNlLmJvZHkuaXRlbXMuaXRlbS5zbGljZSgwLCAxOCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhjaXR5RGF0YSk7CiAgICAgICAgICAgICAgICBfdGhpczYua29yZWFDaXR5Q2hhcnREYXRhID0gewogICAgICAgICAgICAgICAgICBsYWJlbHM6IGNpdHlEYXRhLm1hcChmdW5jdGlvbiAoY2l0eSkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBjaXR5Lmd1YnVuOwogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgZGF0YXNldHM6IFt7CiAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICftmZXsp4TsnpAnLAogICAgICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiAnIzAzZmNlYycsCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgzLCAyNTIsIDIzNiwgMC4yKScsCiAgICAgICAgICAgICAgICAgICAgcG9pbnRCb3JkZXJDb2xvcjogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMCknLAogICAgICAgICAgICAgICAgICAgIGJvcmRlcldpZHRoOiAyLAogICAgICAgICAgICAgICAgICAgIGRhdGE6IGNpdHlEYXRhLm1hcChmdW5jdGlvbiAoY2l0eSkgewogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNpdHkuZGVmQ250OwogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgX3RoaXM2LmNpdHlDaGFydExvYWRlZCA9IHRydWU7CiAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfY29udGV4dDUucHJldiA9IDEwOwogICAgICAgICAgICAgICAgX2NvbnRleHQ1LnQwID0gX2NvbnRleHQ1WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihfY29udGV4dDUudDApOwoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU1LCBudWxsLCBbWzAsIDEwXV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBudW1iZXJGb3JtYXQ6IGZ1bmN0aW9uIG51bWJlckZvcm1hdChpbnB1dCkgewogICAgICByZXR1cm4gaW5wdXQudG9TdHJpbmcoKS5yZXBsYWNlKC9cQig/PShcZHszfSkrKD8hXGQpKS9nLCAiLCIpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    \r\n        <v-container fluid > \r\n            <!-- <v-btn color=\"success\" @click=\"$router.push('/home')\">home</v-btn>\r\n            <v-btn color=\"#2196F3\" @click=\"$router.push('/signup')\">회원가입</v-btn>\r\n            <v-btn color=\"warning\" @click=\"$router.push('/login')\">로그인</v-btn>\r\n            <v-btn @click=\"$router.push('/nav')\">테스트</v-btn>\r\n            <v-btn @click=\"$router.push('/postForm')\">에디터</v-btn>\r\n            <v-btn @click=\"$router.push('/postList')\">게시판</v-btn> -->\r\n            <v-btn @click=\"$router.push('/chartjs')\">뷰차트 테스트</v-btn>\r\n            <v-row>\r\n                <v-col>\r\n\r\n                    <v-card>\r\n                        <v-card-title>\r\n                            <h2><span class=\"title mb-1\">국내</span></h2>\r\n                        </v-card-title>\r\n                        \r\n                        <v-list-item  >\r\n                            \r\n                            <v-list-item-content class=\"justify-center\">\r\n                                <v-card-title >확진</v-card-title>\r\n                                <v-card-text><h2>{{koreaTotal.TotalConfirmed}}</h2></v-card-text>\r\n                            </v-list-item-content >\r\n                            <v-list-item-content class=\"justify-center\">\r\n                                <v-card-title >완치</v-card-title>\r\n                                <v-card-text><h2>{{koreaTotal.TotalRecovered}}</h2></v-card-text>\r\n                                \r\n                            </v-list-item-content >\r\n                            <v-list-item-content class=\"justify-center\">\r\n                                <v-card-title >사망</v-card-title>\r\n                                <v-card-text><h2>{{koreaTotal.TotalDeaths}}</h2></v-card-text>\r\n                                \r\n                            </v-list-item-content >\r\n                        </v-list-item>\r\n                    </v-card>\r\n                </v-col>\r\n                <v-col >\r\n                    <v-card>\r\n                        <v-card-title>\r\n                            <h2><span class=\"title mb-1\">해외</span></h2>\r\n                        </v-card-title>\r\n                        <v-list-item >\r\n                            \r\n                            <v-list-item-content class=\"justify-center\">\r\n                                <v-card-title >확진</v-card-title>\r\n                                <v-card-text><h2>{{worldTotal.TotalConfirmed}}</h2></v-card-text>\r\n                            </v-list-item-content >\r\n                            <v-list-item-content class=\"justify-center\">\r\n                                <v-card-title >완치</v-card-title>\r\n                                <v-card-text><h2>{{worldTotal.TotalRecovered}}</h2></v-card-text>\r\n                                \r\n                            </v-list-item-content >\r\n                            <v-list-item-content class=\"justify-center\">\r\n                                <v-card-title >사망</v-card-title>\r\n                                <v-card-text><h2>{{worldTotal.TotalDeaths}}</h2></v-card-text>\r\n                                \r\n                            </v-list-item-content >\r\n                        </v-list-item>\r\n                    </v-card>\r\n                </v-col>\r\n            </v-row>\r\n            <v-row>\r\n                <v-col >\r\n                    <v-card>\r\n                        <h3>국내 확진자수 증가추이</h3>\r\n                        <v-switch label=\"test\"></v-switch>\r\n                        <line-chart \r\n                        v-if=\"loaded\"\r\n                        :chart-data=\"koreaChartData\">\r\n                        </line-chart>\r\n                    </v-card>\r\n                </v-col>\r\n                <v-col>\r\n                    <v-card>\r\n                        <h3>국내 확진자 일일 신규</h3>\r\n                        <v-switch label=\"test\"></v-switch>\r\n                        <line-chart \r\n                        v-if=\"loaded\"\r\n                        :chart-data=\"koreaDailyChartData\">\r\n                        </line-chart>\r\n                    </v-card>\r\n                </v-col>\r\n            </v-row>\r\n            \r\n            <v-row>\r\n                <v-col cols=\"12\" xs=\"12\" md=\"6\" >\r\n                    <v-card>\r\n                        <v-card-title>\r\n                            <h2><span class=\"title mb-4\">국내 주요 뉴우스</span></h2>\r\n                        </v-card-title>\r\n                        <v-card-text v-for=\"news in naverNews\" :key=\"news\">\r\n                            <h4>\r\n                                <a :href=\"news.href\" style=\"text-decoration:none; color:#2d46c4\" target=\"_blank\">{{news.title}}</a>\r\n                            </h4>\r\n                        </v-card-text>\r\n                        \r\n                    </v-card>\r\n                </v-col>\r\n\r\n                <v-col cols=\"12\" xs=\"12\" md=\"6\" >\r\n                    <v-card>\r\n                        <v-card-title>\r\n                            <h2><span class=\"title mb-4\">해외 주요 뉴우스</span></h2>\r\n                        </v-card-title>\r\n                        <v-card-text v-for=\"news in googleNews\" :key=\"news\">\r\n                            <h4>\r\n                                <a :href=\"news.href\" style=\"text-decoration:none; color:#2d46c4\" target=\"_blank\">{{news.title}}</a>\r\n                            </h4>\r\n                        </v-card-text>\r\n                        \r\n                    </v-card>\r\n                </v-col>\r\n            </v-row>\r\n            <v-row>\r\n                <v-col>\r\n                    <v-card>\r\n                        <h3>연령대별 확진자 현황</h3>\r\n                        <bar-chart\r\n                        :chart-data=\"koreaAgeChartData\"\r\n                        v-if=\"genAgeChartLoaded\">\r\n                        </bar-chart>\r\n                    </v-card>\r\n                    <v-card>\r\n                        <h3>연령대별 치명율 현황</h3>\r\n                        <bar-chart\r\n                        :chart-data=\"koreaCriticalChartData\"\r\n                        v-if=\"genAgeChartLoaded\">\r\n                        </bar-chart>\r\n                    </v-card>\r\n                </v-col>\r\n            </v-row>\r\n            \r\n            <v-row>\r\n                <v-col>\r\n                    <v-card>\r\n                        <h3>성별 확진자 현황</h3>\r\n                        <bar-chart\r\n                        :chart-data=\"koreaGenChartData\"\r\n                        v-if=\"genAgeChartLoaded\">\r\n                        </bar-chart>\r\n                    </v-card>\r\n                    <v-card>\r\n                        <h3>도시별 확진자 현황</h3>\r\n                        <bar-chart\r\n                        :chart-data=\"koreaCityChartData\"\r\n                        v-if=\"cityChartLoaded\">\r\n                        </bar-chart>\r\n                    </v-card>\r\n                </v-col>\r\n            </v-row>\r\n        </v-container>\r\n        \r\n</template>\r\n\r\n<script>\r\nimport LineChart from '@/components/LineChart'\r\nimport BarChart from '@/components/BarChart'\r\n\r\nexport default {\r\n    components:{\r\n        LineChart,\r\n        BarChart,\r\n    },\r\n    data(){\r\n        return {\r\n            worldTotal:{},\r\n            koreaTotal:{},\r\n            koreaTotalChartData: null,\r\n            koreaDailyChartData:null,\r\n            koreaGenChartData:null,\r\n            koreaAgeChartData:null,\r\n            koreaCriticalChartData:null,\r\n            koreaCityChartData:null,\r\n            loaded:false,\r\n            naverNews:'',\r\n            googleNews:'',\r\n            genAgeChartLoaded:false,\r\n            cityChartLoaded:false,\r\n\r\n            \r\n        }\r\n    },\r\n    created(){\r\n        this.getWorldTotal()\r\n        this.corona()\r\n        this.googleCrawling()\r\n        \r\n        this.naverCrawling()\r\n        this.covidGenAge();\r\n        this.covidCity();\r\n    },\r\n    methods:{\r\n        getWorldTotal(){\r\n            axios.get('https://api.covid19api.com/world/total')\r\n            .then(({data})=>{\r\n                this.worldTotal = {\r\n                    TotalConfirmed : this.numberFormat(data.TotalConfirmed),\r\n                    TotalDeaths : this.numberFormat(data.TotalDeaths),\r\n                    TotalRecovered : this.numberFormat(data.TotalRecovered)\r\n                }\r\n            })\r\n            .catch(err=>{\r\n                console.error(err)\r\n            })\r\n        },\r\n        async corona(){\r\n            try{\r\n                let { data } = await axios.get('https://api.covid19api.com/total/country/south-korea')\r\n                console.log(data)\r\n                let dates = data.map(covid => covid.Date.substring(5,10))\r\n                let confirmed = data.map(covid => covid.Confirmed)\r\n                let recovered = data.map(covid => covid.Recovered)\r\n                let deaths = data.map(covid => covid.Deaths)\r\n                this.koreaChartData = {\r\n                    labels: dates,\r\n                    datasets:[\r\n                        {\r\n                            label: 'Confirmed',\r\n                            borderColor:'#03fcec',\r\n                            backgroundColor:'rgba(3, 252, 236, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: confirmed\r\n                        },\r\n                        {\r\n                            label: 'Recovered',\r\n                            borderColor:'#0ecf4b',                     \r\n                            backgroundColor:'rgba(14, 207, 75, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: recovered\r\n                        },\r\n                        \r\n                        {\r\n                            label: 'Deaths',\r\n                            borderColor:'#c70808',\r\n                            backgroundColor:'rgba(199, 8, 8, 0.7)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: deaths\r\n                        },\r\n                        \r\n                    ]\r\n                }\r\n                \r\n                let dailyConfirmed = confirmed.slice(confirmed.length - 31)\r\n                let dailyDates = dates.slice(dates.length - 30)\r\n                \r\n                for(let i=0; i<30; i++){\r\n                    dailyConfirmed[i] = dailyConfirmed[i+1] - dailyConfirmed[i]\r\n                }\r\n                console.log(dailyConfirmed)\r\n                this.koreaDailyChartData = {\r\n                    labels: dailyDates,\r\n                    datasets:[\r\n                        {\r\n                            label: 'Confirmed',\r\n                            borderColor:'#03fcec',\r\n                            backgroundColor:'rgba(3, 252, 236, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: dailyConfirmed.slice(0,dailyConfirmed.length-1)\r\n                        }\r\n                    ]\r\n                }\r\n\r\n                this.koreaTotal = {\r\n                    TotalConfirmed : this.numberFormat(confirmed[confirmed.length-1]),\r\n                    TotalDeaths : this.numberFormat(deaths[deaths.length-1]),\r\n                    TotalRecovered : this.numberFormat(recovered[recovered.length-1])\r\n                }\r\n                this.loaded = true\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async naverCrawling(){\r\n            try{\r\n                let { data } = await axios.get('/covid/naverCrawling')\r\n                this.naverNews = data\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async googleCrawling(){\r\n            try{\r\n                let { data } = await axios.get('/covid/googleCrawling')\r\n                this.googleNews = data\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async covidGenAge(){\r\n            try{\r\n                let res = await axios.get('/covid/case',{\r\n                    params: {\r\n                        serviceCase : 'genAge'\r\n                    }\r\n                })\r\n                console.log(res)\r\n                let data = res.data.response.body.items.item\r\n                let ageData = data.slice(0, 9)\r\n                let genData = data.slice(9, 11)\r\n                \r\n                let age = ageData.map(genAge => genAge.gubun)\r\n               \r\n                this.koreaAgeChartData = {\r\n                    labels : age,\r\n                    datasets:[\r\n                        {\r\n                            label: '확진자',\r\n                            borderColor:'#03fcec',\r\n                            backgroundColor:'rgba(3, 252, 236, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: ageData.map(genAge => genAge.confCase)\r\n                        },\r\n                        \r\n                    ]\r\n                }\r\n\r\n                this.koreaCriticalChartData = {\r\n                    labels : age,\r\n                    datasets:[\r\n                        {\r\n                            label: '치명율 (사망자/확진자)',\r\n                            borderColor:'#03fcec',\r\n                            backgroundColor:'rgba(3, 252, 236, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: ageData.map(genAge => genAge.criticalRate)\r\n                        },\r\n                        \r\n                    ]\r\n                }\r\n\r\n                this.koreaGenChartData = {\r\n                    labels : genData.map(genAge => genAge.gubun),\r\n                    datasets: [\r\n                        {\r\n                            label: '확진자',\r\n                            borderColor:'#03fcec',\r\n                            backgroundColor:'rgba(3, 252, 236, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: genData.map(genAge => genAge.confCase)\r\n                        },\r\n                    ]\r\n                }\r\n                this.genAgeChartLoaded = true\r\n                console.log(age)\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async covidCity(){\r\n            try{\r\n                let res = await axios.get('/covid/case',{\r\n                    params:{\r\n                        serviceCase : 'city'\r\n                    }\r\n                })\r\n                let cityData = res.data.response.body.items.item.slice(0, 18)\r\n                console.log(cityData)\r\n                this.koreaCityChartData = {\r\n                    labels: cityData.map(city => city.gubun),\r\n                    datasets:[\r\n                        {\r\n                            label: '확진자',\r\n                            borderColor:'#03fcec',\r\n                            backgroundColor:'rgba(3, 252, 236, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: cityData.map(city => city.defCnt)\r\n                        }\r\n                    ]\r\n                }\r\n                this.cityChartLoaded = true\r\n\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        numberFormat(input){\r\n            return input.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n        },\r\n        \r\n            \r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/views"}]}