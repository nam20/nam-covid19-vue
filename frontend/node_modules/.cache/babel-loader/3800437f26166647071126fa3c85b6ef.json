{"remainingRequest":"C:\\projects\\nam-lol\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\projects\\nam-lol\\frontend\\src\\views\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\projects\\nam-lol\\frontend\\src\\views\\index.vue","mtime":1598626286231},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovcHJvamVjdHMvbmFtLWxvbC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBMaW5lQ2hhcnQgZnJvbSAnQC9jb21wb25lbnRzL0xpbmVDaGFydCc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBMaW5lQ2hhcnQ6IExpbmVDaGFydAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHdvcmxkVG90YWw6IHt9LAogICAgICBrb3JlYVRvdGFsOiB7fSwKICAgICAgZGF0YWNvbGxlY3Rpb246IG51bGwsCiAgICAgIGxvYWRlZDogZmFsc2UsCiAgICAgIG5hdmVyTmV3czogJycKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRXb3JsZFRvdGFsKCk7CiAgICB0aGlzLmNvcm9uYSgpOwogICAgdGhpcy5uYXZlckNyYXdsaW5nKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRXb3JsZFRvdGFsOiBmdW5jdGlvbiBnZXRXb3JsZFRvdGFsKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgYXhpb3MuZ2V0KCdodHRwczovL2FwaS5jb3ZpZDE5YXBpLmNvbS93b3JsZC90b3RhbCcpLnRoZW4oZnVuY3Rpb24gKF9yZWYpIHsKICAgICAgICB2YXIgZGF0YSA9IF9yZWYuZGF0YTsKICAgICAgICBfdGhpcy53b3JsZFRvdGFsID0gZGF0YTsKICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTsKICAgICAgfSk7CiAgICB9LAogICAgY29yb25hOiBmdW5jdGlvbiBjb3JvbmEoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgX3lpZWxkJGF4aW9zJGdldCwgZGF0YTsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoJ2h0dHBzOi8vYXBpLmNvdmlkMTlhcGkuY29tL3RvdGFsL2NvdW50cnkvc291dGgta29yZWEnKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgX3lpZWxkJGF4aW9zJGdldCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBkYXRhID0gX3lpZWxkJGF4aW9zJGdldC5kYXRhOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7CiAgICAgICAgICAgICAgICBfdGhpczIuZGF0YWNvbGxlY3Rpb24gPSB7CiAgICAgICAgICAgICAgICAgIGxhYmVsczogZGF0YS5tYXAoZnVuY3Rpb24gKGNvdmlkKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvdmlkLkRhdGUuc3Vic3RyaW5nKDUsIDEwKTsKICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgIGRhdGFzZXRzOiBbewogICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnQ29uZmlybWVkJywKICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogJyMwM2ZjZWMnLAogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMywgMjUyLCAyMzYsIDAuMiknLAogICAgICAgICAgICAgICAgICAgIHBvaW50Qm9yZGVyQ29sb3I6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDApJywKICAgICAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMiwKICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLm1hcChmdW5jdGlvbiAoY292aWQpIHsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb3ZpZC5Db25maXJtZWQ7CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnUmVjb3ZlcmVkJywKICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogJyMwZWNmNGInLAogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMTQsIDIwNywgNzUsIDAuMiknLAogICAgICAgICAgICAgICAgICAgIHBvaW50Qm9yZGVyQ29sb3I6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDApJywKICAgICAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMiwKICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLm1hcChmdW5jdGlvbiAoY292aWQpIHsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb3ZpZC5SZWNvdmVyZWQ7CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnRGVhdGhzJywKICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogJyNjNzA4MDgnLAogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMTk5LCA4LCA4LCAwLjcpJywKICAgICAgICAgICAgICAgICAgICBwb2ludEJvcmRlckNvbG9yOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwKScsCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDIsCiAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YS5tYXAoZnVuY3Rpb24gKGNvdmlkKSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY292aWQuRGVhdGhzOwogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgX3RoaXMyLmxvYWRlZCA9IHRydWU7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgMTBdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIG5hdmVyQ3Jhd2xpbmc6IGZ1bmN0aW9uIG5hdmVyQ3Jhd2xpbmcoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgYXhpb3MuZ2V0KCcvdXNlci9uYXZlckNyYXdsaW5nJykudGhlbihmdW5jdGlvbiAoX3JlZjIpIHsKICAgICAgICB2YXIgZGF0YSA9IF9yZWYyLmRhdGE7CiAgICAgICAgY29uc29sZS5sb2coZGF0YSk7CiAgICAgICAgX3RoaXMzLm5hdmVyTmV3cyA9IGRhdGE7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgY29uc29sZS5lcnJvcihlKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA,OAAA,SAAA,MAAA,wBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA,EAFA;AAGA,MAAA,cAAA,EAAA,IAHA;AAIA,MAAA,MAAA,EAAA,KAJA;AAKA,MAAA,SAAA,EAAA;AALA,KAAA;AAOA,GAZA;AAaA,EAAA,OAbA,qBAaA;AACA,SAAA,aAAA;AACA,SAAA,MAAA;AACA,SAAA,aAAA;AACA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,wCAAA,EACA,IADA,CACA,gBAAA;AAAA,YAAA,IAAA,QAAA,IAAA;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,OAJA,EAKA,KALA,CAKA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,GAAA;AACA,OAPA;AAQA,KAVA;AAWA,IAAA,MAXA,oBAWA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,CAAA,GAAA,CAAA,sDAAA,CAFA;;AAAA;AAAA;AAEA,gBAAA,IAFA,oBAEA,IAFA;AAGA,gBAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AAEA,gBAAA,MAAA,CAAA,cAAA,GAAA;AACA,kBAAA,MAAA,EAAA,IAAA,CAAA,GAAA,CAAA,UAAA,KAAA;AAAA,2BAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AAAA,mBAAA,CADA;AAEA,kBAAA,QAAA,EAAA,CACA;AACA,oBAAA,KAAA,EAAA,WADA;AAEA,oBAAA,WAAA,EAAA,SAFA;AAGA,oBAAA,eAAA,EAAA,wBAHA;AAIA,oBAAA,gBAAA,EAAA,wBAJA;AAKA,oBAAA,WAAA,EAAA,CALA;AAMA,oBAAA,IAAA,EAAA,IAAA,CAAA,GAAA,CAAA,UAAA,KAAA;AAAA,6BAAA,KAAA,CAAA,SAAA;AAAA,qBAAA;AANA,mBADA,EASA;AACA,oBAAA,KAAA,EAAA,WADA;AAEA,oBAAA,WAAA,EAAA,SAFA;AAGA,oBAAA,eAAA,EAAA,wBAHA;AAIA,oBAAA,gBAAA,EAAA,wBAJA;AAKA,oBAAA,WAAA,EAAA,CALA;AAMA,oBAAA,IAAA,EAAA,IAAA,CAAA,GAAA,CAAA,UAAA,KAAA;AAAA,6BAAA,KAAA,CAAA,SAAA;AAAA,qBAAA;AANA,mBATA,EAkBA;AACA,oBAAA,KAAA,EAAA,QADA;AAEA,oBAAA,WAAA,EAAA,SAFA;AAGA,oBAAA,eAAA,EAAA,sBAHA;AAIA,oBAAA,gBAAA,EAAA,wBAJA;AAKA,oBAAA,WAAA,EAAA,CALA;AAMA,oBAAA,IAAA,EAAA,IAAA,CAAA,GAAA,CAAA,UAAA,KAAA;AAAA,6BAAA,KAAA,CAAA,MAAA;AAAA,qBAAA;AANA,mBAlBA;AAFA,iBAAA;AA+BA,gBAAA,MAAA,CAAA,MAAA,GAAA,IAAA;AApCA;AAAA;;AAAA;AAAA;AAAA;AAuCA,gBAAA,OAAA,CAAA,KAAA;;AAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyCA,KApDA;AAqDA,IAAA,aArDA,2BAqDA;AAAA;;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,qBAAA,EACA,IADA,CACA,iBAAA;AAAA,YAAA,IAAA,SAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,QAAA,MAAA,CAAA,SAAA,GAAA,IAAA;AACA,OAJA,EAKA,KALA,CAKA,UAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,CAAA;AACA,OAPA;AAQA;AA9DA;AAlBA,CAAA","sourcesContent":["<template>\r\n    <v-container>\r\n        <v-btn color=\"success\" @click=\"$router.push('/home')\">home</v-btn>\r\n        <v-btn color=\"#2196F3\" @click=\"$router.push('/signup')\">회원가입</v-btn>\r\n        <v-btn color=\"warning\" @click=\"$router.push('/login')\">로그인</v-btn>\r\n        <v-btn @click=\"$router.push('/nav')\">테스트</v-btn>\r\n        <v-btn @click=\"$router.push('/postForm')\">에디터</v-btn>\r\n        <v-btn @click=\"$router.push('/postList')\">게시판</v-btn>\r\n        <v-btn @click=\"$router.push('/chartjs')\">뷰차트 테스트</v-btn>\r\n        \r\n        <v-col cols=\"12\">\r\n            <v-card\r\n                class=\"mx-auto\"\r\n                max-width=\"344\"\r\n                outlined\r\n                v-if=\"worldTotal\"\r\n            >\r\n               \r\n                <v-list-item three-line >\r\n                    <v-list-item-content class=\"d-flex justify-center\">\r\n                        <v-btn text>확진</v-btn>\r\n                        <v-btn text>{{worldTotal.TotalConfirmed}}</v-btn>\r\n                    </v-list-item-content >\r\n                    <v-list-item-content class=\"d-flex justify-center\">\r\n                        <v-btn text>완치</v-btn>\r\n                        <v-btn text>{{worldTotal.TotalRecovered}}</v-btn>\r\n                    </v-list-item-content >\r\n                    <v-list-item-content class=\"d-flex justify-center\">\r\n                        <v-btn text>사망</v-btn>\r\n                        <v-btn text>{{worldTotal.TotalDeaths}}</v-btn>\r\n                    </v-list-item-content >\r\n                </v-list-item>\r\n              \r\n            </v-card>\r\n        </v-col>\r\n\r\n        <v-col>\r\n            <v-card>\r\n                <h3>Line Chart</h3>\r\n                <v-switch label=\"test\"></v-switch>\r\n                <line-chart \r\n                v-if=\"loaded\"\r\n                :chart-data=\"datacollection\">\r\n                </line-chart>\r\n            </v-card>\r\n        </v-col>\r\n        <v-col>\r\n            <v-card\r\n            class=\"mx-auto\">\r\n                <v-card-title>\r\n                    <span class=\"title mb-4\">국내 주요 뉴우스</span>\r\n                </v-card-title>\r\n                <v-card-text v-for=\"news in naverNews\" :key=\"news\">\r\n                    <h3>\r\n                        <a :href=\"news.href\" style=\"text-decoration:none; \">{{news.title}}</a>\r\n                    </h3>\r\n                    \r\n                </v-card-text>\r\n                <!-- <v-list-item>\r\n                    \r\n                    <v-list-item-content >\r\n                        <v-list-item-title>\r\n                            <span class=\"title\">국내 주요 뉴우스</span>\r\n                        </v-list-item-title>\r\n                        <h3 v-for=\"news in naverNews\" :key=\"news\">\r\n                            <a href=\"\" style=\"text-decoration:none; \">{{news.title}}</a>\r\n                        </h3>\r\n                    </v-list-item-content>\r\n                </v-list-item> -->\r\n            </v-card>\r\n        </v-col>\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\nimport LineChart from '@/components/LineChart'\r\n\r\nexport default {\r\n    components:{\r\n        LineChart\r\n    },\r\n    data(){\r\n        return {\r\n            worldTotal:{},\r\n            koreaTotal:{},\r\n            datacollection: null,\r\n            loaded:false,\r\n            naverNews:''\r\n        }\r\n    },\r\n    created(){\r\n        this.getWorldTotal()\r\n        this.corona()\r\n        this.naverCrawling()\r\n    },\r\n    methods:{\r\n        getWorldTotal(){\r\n            axios.get('https://api.covid19api.com/world/total')\r\n            .then(({data})=>{\r\n                this.worldTotal = data\r\n                console.log(data)\r\n            })\r\n            .catch(err=>{\r\n                console.error(err)\r\n            })\r\n        },\r\n        async corona(){\r\n            try{\r\n                let { data } = await axios.get('https://api.covid19api.com/total/country/south-korea')\r\n                console.log(data)\r\n                \r\n                this.datacollection = {\r\n                    labels: data.map(covid => covid.Date.substring(5,10)),\r\n                    datasets:[\r\n                        {\r\n                            label: 'Confirmed',\r\n                            borderColor:'#03fcec',\r\n                            backgroundColor:'rgba(3, 252, 236, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: data.map(covid => covid.Confirmed)\r\n                        },\r\n                        {\r\n                            label: 'Recovered',\r\n                            borderColor:'#0ecf4b',                     \r\n                            backgroundColor:'rgba(14, 207, 75, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: data.map(covid => covid.Recovered)\r\n                        },\r\n                        \r\n                        {\r\n                            label: 'Deaths',\r\n                            borderColor:'#c70808',\r\n                            backgroundColor:'rgba(199, 8, 8, 0.7)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: data.map(covid => covid.Deaths)\r\n                        },\r\n                        \r\n                    ]\r\n                }\r\n                this.loaded = true\r\n\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        naverCrawling(){\r\n            axios.get('/user/naverCrawling')\r\n            .then(({data})=>{\r\n                console.log(data)\r\n                this.naverNews = data\r\n            })\r\n            .catch(e=>{\r\n                console.error(e)\r\n            })\r\n        }\r\n            \r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/views"}]}