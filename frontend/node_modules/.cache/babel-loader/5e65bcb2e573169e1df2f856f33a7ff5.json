{"remainingRequest":"C:\\projects\\nam-lol\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\projects\\nam-lol\\frontend\\src\\store\\covid.js","dependencies":[{"path":"C:\\projects\\nam-lol\\frontend\\src\\store\\covid.js","mtime":1600305447366},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJDOi9wcm9qZWN0cy9uYW0tbG9sL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKCnZhciBzdGF0ZSA9IGZ1bmN0aW9uIHN0YXRlKCkgewogIHJldHVybiB7CiAgICB3b3JsZENvdW50cnk6ICcnLAogICAga29yZWFEYWlseTogJycsCiAgICBrb3JlYUNpdHk6ICcnLAogICAga29yZWFHZW5BZ2U6ICcnCiAgfTsKfTsKCnZhciBnZXR0ZXJzID0gewogIHdvcmxkVG90YWw6IGZ1bmN0aW9uIHdvcmxkVG90YWwoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS53b3JsZENvdW50cnkuc2xpY2UoMCwgMik7CiAgfSwKICBjb3VudHJ5VG90YWw6IGZ1bmN0aW9uIGNvdW50cnlUb3RhbChzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLndvcmxkQ291bnRyeS5zbGljZSgyLCAyMTcpOwogIH0sCiAga29yZWFUb3RhbDogZnVuY3Rpb24ga29yZWFUb3RhbChzdGF0ZSkge30KfTsKdmFyIG11dGF0aW9ucyA9IHsKICBzZXRXb3JsZENvdW50cnk6IGZ1bmN0aW9uIHNldFdvcmxkQ291bnRyeShzdGF0ZSwgcGF5bG9hZCkgewogICAgc3RhdGUud29ybGRDb3VudHJ5ID0gcGF5bG9hZDsKICB9LAogIHNldEtvcmVhRGFpbHk6IGZ1bmN0aW9uIHNldEtvcmVhRGFpbHkoc3RhdGUsIHBheWxvYWQpIHsKICAgIHN0YXRlLmtvcmVhRGFpbHkgPSBwYXlsb2FkOwogIH0sCiAgc2V0S29yZWFDaXR5OiBmdW5jdGlvbiBzZXRLb3JlYUNpdHkoc3RhdGUsIHBheWxvYWQpIHsKICAgIHN0YXRlLmtvcmVhQ2l0eSA9IHBheWxvYWQ7CiAgfSwKICBzZXRLb3JlYUdlbkFnZTogZnVuY3Rpb24gc2V0S29yZWFHZW5BZ2Uoc3RhdGUsIHBheWxvYWQpIHsKICAgIHN0YXRlLmtvcmVhR2VuQWdlID0gcGF5bG9hZDsKICB9Cn07CnZhciBhY3Rpb25zID0gewogIGdldFdvcmxkQ291bnRyeTogZnVuY3Rpb24gZ2V0V29ybGRDb3VudHJ5KF9yZWYpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBjb21taXQsIF95aWVsZCRheGlvcyRnZXQsIGRhdGE7CgogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgnL2NvdmlkL3dvcmxkJyk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgX3lpZWxkJGF4aW9zJGdldCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgZGF0YSA9IF95aWVsZCRheGlvcyRnZXQuZGF0YTsKICAgICAgICAgICAgICBjb21taXQoJ3NldFdvcmxkQ291bnRyeScsIGRhdGEpOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMjsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gOTsKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoX2NvbnRleHQudDApOwoKICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1sxLCA5XV0pOwogICAgfSkpKCk7CiAgfSwKICBnZXRLb3JlYURhaWx5OiBmdW5jdGlvbiBnZXRLb3JlYURhaWx5KF9yZWYyKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgdmFyIGNvbW1pdCwgX3lpZWxkJGF4aW9zJGdldDIsIGRhdGE7CgogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDE7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoJy9jb3ZpZC9rb3JlYS9kYXknKTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBfeWllbGQkYXhpb3MkZ2V0MiA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkYXhpb3MkZ2V0Mi5kYXRhOwogICAgICAgICAgICAgIGNvbW1pdCgnc2V0S29yZWFEYWlseScsIGRhdGEucmVzcG9uc2UuYm9keS5pdGVtcy5pdGVtLnJldmVyc2UoKS5zcGxpY2UoMTE2LCAyKSk7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMjsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDk7CiAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoX2NvbnRleHQyLnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1sxLCA5XV0pOwogICAgfSkpKCk7CiAgfSwKICBnZXRLb3JlYUNpdHk6IGZ1bmN0aW9uIGdldEtvcmVhQ2l0eShfcmVmMykgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgIHZhciBjb21taXQsIF95aWVsZCRheGlvcyRnZXQzLCBkYXRhOwoKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAxOwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCcvY292aWQva29yZWEvY2l0eScpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIF95aWVsZCRheGlvcyRnZXQzID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgZGF0YSA9IF95aWVsZCRheGlvcyRnZXQzLmRhdGE7CiAgICAgICAgICAgICAgY29tbWl0KCdzZXRLb3JlYUNpdHknLCBkYXRhKTsKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDEyOwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gOTsKICAgICAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihfY29udGV4dDMudDApOwoKICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzLCBudWxsLCBbWzEsIDldXSk7CiAgICB9KSkoKTsKICB9LAogIGdldEtvcmVhR2VuQWdlOiBmdW5jdGlvbiBnZXRLb3JlYUdlbkFnZShfcmVmNCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgIHZhciBjb21taXQsIF95aWVsZCRheGlvcyRnZXQ0LCBkYXRhOwoKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSAxOwogICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCcvY292aWQva29yZWEvZ2VuQWdlJyk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgX3lpZWxkJGF4aW9zJGdldDQgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICBkYXRhID0gX3lpZWxkJGF4aW9zJGdldDQuZGF0YTsKICAgICAgICAgICAgICBjb21taXQoJ3NldEtvcmVhR2VuQWdlJywgZGF0YSk7CiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAxMjsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDk7CiAgICAgICAgICAgICAgX2NvbnRleHQ0LnQwID0gX2NvbnRleHQ0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoX2NvbnRleHQ0LnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNCwgbnVsbCwgW1sxLCA5XV0pOwogICAgfSkpKCk7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBhY3Rpb25zOiBhY3Rpb25zCn07"},{"version":3,"sources":["C:/projects/nam-lol/frontend/src/store/covid.js"],"names":["state","worldCountry","koreaDaily","koreaCity","koreaGenAge","getters","worldTotal","slice","countryTotal","koreaTotal","mutations","setWorldCountry","payload","setKoreaDaily","setKoreaCity","setKoreaGenAge","actions","getWorldCountry","commit","axios","get","data","console","error","getKoreaDaily","response","body","items","item","reverse","splice","getKoreaCity","getKoreaGenAge","namespaced"],"mappings":"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","sourcesContent":["const state = () =>({\r\n    worldCountry : '',\r\n    koreaDaily: '',\r\n    koreaCity:'',\r\n    koreaGenAge:''\r\n    \r\n})\r\n\r\nconst getters = {\r\n    worldTotal : state => {\r\n        return state.worldCountry.slice(0,2)\r\n    },\r\n    countryTotal : state => {\r\n        return state.worldCountry.slice(2,217)\r\n    },\r\n    koreaTotal : state => {\r\n\r\n    }\r\n}\r\n\r\nconst mutations = {\r\n    setWorldCountry(state, payload){\r\n        state.worldCountry = payload\r\n    },\r\n    setKoreaDaily(state, payload){\r\n        state.koreaDaily = payload\r\n    },\r\n    setKoreaCity(state, payload){\r\n        state.koreaCity = payload\r\n    },\r\n    setKoreaGenAge(state, payload){\r\n        state.koreaGenAge = payload\r\n    },\r\n}\r\n\r\nconst actions = {\r\n    async getWorldCountry({commit}){\r\n        try{\r\n            const { data } = await axios.get('/covid/world')\r\n            commit('setWorldCountry', data)\r\n            \r\n        }catch(e){\r\n            console.error(e)\r\n        }\r\n    },\r\n    async getKoreaDaily({commit}){\r\n        try{\r\n            const { data } = await axios.get('/covid/korea/day')\r\n            commit('setKoreaDaily', data.response.body.items.item.reverse().splice(116, 2))\r\n        }catch(e){\r\n            console.error(e)\r\n        }\r\n    },\r\n    async getKoreaCity({commit}){\r\n        try{\r\n            const { data } = await axios.get('/covid/korea/city')\r\n            commit('setKoreaCity', data)\r\n        }catch(e){\r\n            console.error(e)\r\n        }\r\n    },\r\n    async getKoreaGenAge({commit}){\r\n        try{\r\n            const { data } = await axios.get('/covid/korea/genAge')\r\n            commit('setKoreaGenAge', data)\r\n        }catch(e){\r\n            console.error(e)\r\n        }\r\n    },\r\n    \r\n}\r\n\r\nexport default {\r\n    namespaced:true,\r\n    state,getters,mutations,actions\r\n}"]}]}