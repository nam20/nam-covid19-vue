{"remainingRequest":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\projects\\nam-lol\\frontend\\src\\components\\CovidNews.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\projects\\nam-lol\\frontend\\src\\components\\CovidNews.vue","mtime":1600316964487},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQ2hhcnRDYXJkIGZyb20gJ0AvY29tcG9uZW50cy9DaGFydENhcmQnDQpleHBvcnQgZGVmYXVsdCB7DQogICAgY29tcG9uZW50czp7DQogICAgICAgIENoYXJ0Q2FyZA0KICAgIH0sDQogICAgZGF0YSgpew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgbmF2ZXJOZXdzIDogJycsDQogICAgICAgICAgICBnb29nbGVOZXdzIDogJycNCiAgICAgICAgfQ0KICAgIH0sDQogICAgY3JlYXRlZCgpew0KICAgICAgICB0aGlzLm5ld3NDcmF3bGluZygpDQogICAgfSwNCiAgICBtZXRob2RzOnsNCiAgICAgICAgYXN5bmMgbmV3c0NyYXdsaW5nKCl7DQogICAgICAgICAgICB0cnl7DQogICAgICAgICAgICAgICAgY29uc3QgbmF2ZXJQcm9taXNlID0gYXhpb3MuZ2V0KCcvY292aWQvbmV3cy9uYXZlcicpDQogICAgICAgICAgICAgICAgY29uc3QgZ29vZ2xlUHJvbWlzZSA9IGF4aW9zLmdldCgnL2NvdmlkL25ld3MvZ29vZ2xlJykNCg0KICAgICAgICAgICAgICAgIGNvbnN0IFtuYXZlckNyYXdsaW5nLCBnb29nbGVDcmF3bGluZ10gPSBhd2FpdCBQcm9taXNlLmFsbChbbmF2ZXJQcm9taXNlLCBnb29nbGVQcm9taXNlXSkNCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhuYXZlckNyYXdsaW5nKQ0KICAgICAgICAgICAgICAgIHRoaXMubmF2ZXJOZXdzID0gbmF2ZXJDcmF3bGluZy5kYXRhDQogICAgICAgICAgICAgICAgdGhpcy5nb29nbGVOZXdzID0gZ29vZ2xlQ3Jhd2xpbmcuZGF0YQ0KICAgICAgICAgICAgfWNhdGNoKGUpew0KICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSkNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgLy8gYXN5bmMgbmF2ZXJDcmF3bGluZygpew0KICAgICAgICAvLyAgICAgdHJ5ew0KICAgICAgICAvLyAgICAgICAgIGxldCB7IGRhdGEgfSA9IGF3YWl0IGF4aW9zLmdldCgnL2NvdmlkL25ld3MvbmF2ZXInKQ0KICAgICAgICAvLyAgICAgICAgIHRoaXMubmF2ZXJOZXdzID0gZGF0YQ0KICAgICAgICAvLyAgICAgfWNhdGNoKGUpew0KICAgICAgICAvLyAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSkNCiAgICAgICAgLy8gICAgIH0NCiAgICAgICAgLy8gfSwNCiAgICAgICAgLy8gYXN5bmMgZ29vZ2xlQ3Jhd2xpbmcoKXsNCiAgICAgICAgLy8gICAgIHRyeXsNCiAgICAgICAgLy8gICAgICAgICBsZXQgeyBkYXRhIH0gPSBhd2FpdCBheGlvcy5nZXQoJy9jb3ZpZC9uZXdzL2dvb2dsZScpDQogICAgICAgIC8vICAgICAgICAgdGhpcy5nb29nbGVOZXdzID0gZGF0YQ0KICAgICAgICAvLyAgICAgfWNhdGNoKGUpew0KICAgICAgICAvLyAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSkNCiAgICAgICAgLy8gICAgIH0NCiAgICAgICAgLy8gfSwNCiAgICB9DQoNCn0NCg=="},{"version":3,"sources":["CovidNews.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"CovidNews.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <v-row id=\"worldKoreaNews\">\r\n        <v-col cols=\"12\" xs=\"12\" md=\"6\" >\r\n            <chart-card>\r\n                <template v-slot:title>\r\n                    국내 주요 뉴스\r\n                </template>\r\n                <template v-slot:body>\r\n                    <v-simple-table >\r\n                        <tbody>\r\n                            <tr v-for=\"news in naverNews\" :key=\"news\">\r\n                                <td>\r\n                                    <h4>\r\n                                        <a :href=\"news.href\" style=\"text-decoration:none; color:#2d46c4\" target=\"_blank\">{{news.title}}</a>\r\n                                    </h4>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </v-simple-table>\r\n                </template>\r\n            </chart-card>\r\n            \r\n        </v-col>\r\n\r\n        <v-col cols=\"12\" xs=\"12\" md=\"6\" >\r\n            <chart-card>\r\n                <template v-slot:title>\r\n                    해외 주요 뉴스\r\n                </template>\r\n                <template v-slot:body>\r\n                    <v-simple-table>\r\n                        <tbody>\r\n                            <tr v-for=\"news in googleNews\" :key=\"news\">\r\n                                <td>\r\n                                    <h4>\r\n                                        <a :href=\"news.href\" style=\"text-decoration:none; color:#2d46c4\" target=\"_blank\">{{news.title}}</a>\r\n                                    </h4>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </v-simple-table>\r\n                    \r\n                </template>\r\n            </chart-card>\r\n            \r\n        </v-col>\r\n    </v-row>\r\n</template>\r\n\r\n<script>\r\nimport ChartCard from '@/components/ChartCard'\r\nexport default {\r\n    components:{\r\n        ChartCard\r\n    },\r\n    data(){\r\n        return {\r\n            naverNews : '',\r\n            googleNews : ''\r\n        }\r\n    },\r\n    created(){\r\n        this.newsCrawling()\r\n    },\r\n    methods:{\r\n        async newsCrawling(){\r\n            try{\r\n                const naverPromise = axios.get('/covid/news/naver')\r\n                const googlePromise = axios.get('/covid/news/google')\r\n\r\n                const [naverCrawling, googleCrawling] = await Promise.all([naverPromise, googlePromise])\r\n                console.log(naverCrawling)\r\n                this.naverNews = naverCrawling.data\r\n                this.googleNews = googleCrawling.data\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        // async naverCrawling(){\r\n        //     try{\r\n        //         let { data } = await axios.get('/covid/news/naver')\r\n        //         this.naverNews = data\r\n        //     }catch(e){\r\n        //         console.error(e)\r\n        //     }\r\n        // },\r\n        // async googleCrawling(){\r\n        //     try{\r\n        //         let { data } = await axios.get('/covid/news/google')\r\n        //         this.googleNews = data\r\n        //     }catch(e){\r\n        //         console.error(e)\r\n        //     }\r\n        // },\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]}]}