{"remainingRequest":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\projects\\nam-lol\\frontend\\src\\components\\KoreaDaily.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\projects\\nam-lol\\frontend\\src\\components\\KoreaDaily.vue","mtime":1601793970174},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQ2hhcnRDYXJkIGZyb20gJ0AvY29tcG9uZW50cy9DaGFydENhcmQnDQppbXBvcnQgeyBHQ2hhcnQgfSBmcm9tICd2dWUtZ29vZ2xlLWNoYXJ0cycNCmltcG9ydCBMaW5lQ2hhcnQgZnJvbSAnQC9jb21wb25lbnRzL2NoYXJ0L0xpbmVDaGFydCcNCg0KZXhwb3J0IGRlZmF1bHQgew0KICAgIGNvbXBvbmVudHM6ew0KICAgICAgICBDaGFydENhcmQsDQogICAgICAgIEdDaGFydCwNCiAgICAgICAgTGluZUNoYXJ0DQogICAgfSwNCiAgICBwcm9wczpbJ2RhaWx5VG90YWxEYXRhJywnY2l0eURhdGEnXSwNCiAgICBkYXRhKCl7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgICBkYWlseVRvdGFsQ2hhcnRMb2FkZWQgOiBmYWxzZSwNCiAgICAgICAgICAgIGRhaWx5VG90YWxDaGFydERhdGE6ICcnLA0KICAgICAgICANCiAgICAgICAgICAgIGNpdHlHZW9DaGFydERhdGE6IFsNCiAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFsnQ2l0eScsICftmZXsp4TsnpAnLCAn7IKs66ed7J6QJ10sDQogICAgICAgICAgICAgICAgW3t2OidLUi00OScsZjon7KCc7KO8J31dLA0KICAgICAgICAgICAgICAgIFt7djonS1ItNDgnLGY6J+qyveuCqCd9XSwNCiAgICAgICAgICAgICAgICBbe3Y6J0tSLTQ3JyxmOifqsr3rtoEnfV0sDQogICAgICAgICAgICAgICAgW3t2OidLUi00NicsZjon7KCE64KoJ31dLA0KICAgICAgICAgICAgICAgIFt7djonS1ItNDUnLGY6J+yghOu2gSd9XSwNCiAgICAgICAgICAgICAgICBbe3Y6J0tSLTQ0JyxmOifstqnrgqgnfV0sDQogICAgICAgICAgICAgICAgW3t2OidLUi00MycsZjon7Lap67aBJ31dLA0KICAgICAgICAgICAgICAgIFt7djonS1ItNDInLGY6J+qwleybkCd9XSwNCiAgICAgICAgICAgICAgICBbe3Y6J0tSLTQxJyxmOifqsr3quLAnfV0sDQogICAgICAgICAgICAgICAgW3t2OidLUi01MCcsZjon7IS47KKFJ31dLA0KICAgICAgICAgICAgICAgIFt7djonS1ItMzEnLGY6J+yauOyCsCd9XSwNCiAgICAgICAgICAgICAgICBbe3Y6J0tSLTMwJyxmOifrjIDsoIQnfV0sDQogICAgICAgICAgICAgICAgW3t2OidLUi0yOScsZjon6rSR7KO8J31dLA0KICAgICAgICAgICAgICAgIFt7djonS1ItMjgnLGY6J+yduOyynCd9XSwNCiAgICAgICAgICAgICAgICBbe3Y6J0tSLTI3JyxmOifrjIDqtawnfV0sDQogICAgICAgICAgICAgICAgW3t2OidLUi0yNicsZjon67aA7IKwJ31dLA0KICAgICAgICAgICAgICAgIFt7djonS1ItMTEnLGY6J+yEnOyauCd9XSwNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIF0sDQogICAgICAgICAgICBjaXR5R2VvQ2hhcnRPcHRpb25zOiB7DQogICAgICAgICAgICAgICAgcmVnaW9uOiAnS1InLA0KICAgICAgICAgICAgICAgIHJlc29sdXRpb246ICdwcm92aW5jZXMnLA0KICAgICAgICAgICAgICAgIGNvbG9yQXhpczp7DQogICAgICAgICAgICAgICAgICAgIG1pblZhbHVlOiAwLCAgY29sb3JzOiBbJyNmZmZjZmMnLCAnI2IwMGIwYiddDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICBoZWlnaHQ6NDAwDQogICAgICAgICAgICB9LA0KDQogICAgICAgIH0NCiAgICB9LA0KICAgIGNyZWF0ZWQoKXsNCg0KICAgIH0sDQogICAgd2F0Y2g6ew0KICAgICAgICBkYWlseVRvdGFsRGF0YSgpew0KICAgICAgICAgICAgdGhpcy5rb3JlYURhaWx5VG90YWxDaGFydCgpDQogICAgICAgIH0sDQogICAgICAgIGNpdHlEYXRhKCl7DQogICAgICAgICAgICB0aGlzLmtvcmVhQ2l0eUdlb0NoYXJ0KCkNCiAgICAgICAgfQ0KICAgIH0sDQogICAgbWV0aG9kczp7DQogICAgICAgIGtvcmVhRGFpbHlUb3RhbENoYXJ0KCl7DQogICAgICAgICAgICANCiAgICAgICAgICAgIGNvbnN0IHsgZGF0ZXMsIGNvbmZpcm1lZCwgcmVjb3ZlcmVkLCBkZWF0aHMgfSA9IHRoaXMuZGFpbHlUb3RhbERhdGENCg0KICAgICAgICAgICAgdGhpcy5kYWlseVRvdGFsQ2hhcnREYXRhID0gew0KICAgICAgICAgICAgICAgIGxhYmVsczogZGF0ZXMsDQogICAgICAgICAgICAgICAgZGF0YXNldHM6Ww0KICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ+2ZleynhOyekCcsDQogICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjoncmdiYSg1NCwgMTYyLCAyMzUsIDEpJywNCiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjoncmdiYSg1NCwgMTYyLCAyMzUsIDAuMDUpJywNCiAgICAgICAgICAgICAgICAgICAgICAgIHBvaW50Qm9yZGVyQ29sb3I6J3JnYmEoMjU1LCAyNTUsIDI1NSwgMCknLA0KICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnRCYWNrZ3JvdW5kQ29sb3I6J3JnYmEoNTQsIDE2MiwgMjM1LCAxKScsDQogICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMiwNCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IGNvbmZpcm1lZA0KICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ+yZhOy5mOyekCcsDQogICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjoncmdiYSgyOSwgMjM3LCAxNCwgMSknLCAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOidyZ2JhKDI5LCAyMzcsIDE0LCAwLjA1KScsDQogICAgICAgICAgICAgICAgICAgICAgICBwb2ludEJvcmRlckNvbG9yOidyZ2JhKDI1NSwgMjU1LCAyNTUsIDApJywNCiAgICAgICAgICAgICAgICAgICAgICAgIHBvaW50QmFja2dyb3VuZENvbG9yOidyZ2JhKDI5LCAyMzcsIDE0LCAxKScsDQogICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMiwNCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHJlY292ZXJlZA0KICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICfsgqzrp53snpAnLA0KICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6J3JnYmEoMjE5LCA0NywgMzUsIDEpJywNCiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjoncmdiYSgyMTksIDQ3LCAzNSwgMC4wNSknLA0KICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnRCb3JkZXJDb2xvcjoncmdiYSgyNTUsIDI1NSwgMjU1LCAwKScsDQogICAgICAgICAgICAgICAgICAgICAgICBwb2ludEJhY2tncm91bmRDb2xvcjoncmdiYSgyMTksIDQ3LCAzNSwgMSknLA0KICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDIsDQogICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBkZWF0aHMNCiAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgXQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0aGlzLmRhaWx5VG90YWxDaGFydExvYWRlZCA9IHRydWUNCiAgICAgICAgfSwNCiAgICAgICAga29yZWFDaXR5R2VvQ2hhcnQoKXsNCiAgICAgICAgICAgIGxldCB7IGNpdHlEYXRhIH0gPSB0aGlzLmNpdHlEYXRhDQogICAgICAgICAgICBmb3IobGV0IGk9MTsgaTxjaXR5RGF0YS5sZW5ndGg7IGkrKyl7DQoNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5jaXR5R2VvQ2hhcnREYXRhW2ldLnB1c2goY2l0eURhdGFbaV0uZGVmQ250LCBjaXR5RGF0YVtpXS5kZWF0aENudCkNCiAgICAgICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCn0NCg=="},{"version":3,"sources":["KoreaDaily.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"KoreaDaily.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <v-row id=\"koreaStatus\">\r\n        <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n            \r\n            <chart-card>\r\n                <template v-slot:title>\r\n                    국내 확진자 증가추이\r\n                </template>\r\n                <template v-slot:body>\r\n                    <line-chart \r\n                    v-if=\"dailyTotalChartLoaded\"\r\n                    :chart-data=\"dailyTotalChartData\"\r\n                    :height=\"400\"\r\n                    >\r\n                    </line-chart>\r\n                </template>\r\n            </chart-card>\r\n            \r\n        </v-col>\r\n        <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n            <chart-card>\r\n                <template v-slot:title>\r\n                    코로나 발병 국내 지도\r\n                </template>\r\n                <template v-slot:body>\r\n                    <GChart\r\n                    type=\"GeoChart\"\r\n                    :settings=\"{ packages: [ 'geochart']}\"\r\n                    :data=\"cityGeoChartData\"\r\n                    :options=\"cityGeoChartOptions\"\r\n                    \r\n                    />\r\n                </template>\r\n            </chart-card>\r\n            \r\n        </v-col>\r\n    </v-row>\r\n</template>\r\n\r\n<script>\r\nimport ChartCard from '@/components/ChartCard'\r\nimport { GChart } from 'vue-google-charts'\r\nimport LineChart from '@/components/chart/LineChart'\r\n\r\nexport default {\r\n    components:{\r\n        ChartCard,\r\n        GChart,\r\n        LineChart\r\n    },\r\n    props:['dailyTotalData','cityData'],\r\n    data(){\r\n        return {\r\n            dailyTotalChartLoaded : false,\r\n            dailyTotalChartData: '',\r\n        \r\n            cityGeoChartData: [\r\n               \r\n                ['City', '확진자', '사망자'],\r\n                [{v:'KR-49',f:'제주'}],\r\n                [{v:'KR-48',f:'경남'}],\r\n                [{v:'KR-47',f:'경북'}],\r\n                [{v:'KR-46',f:'전남'}],\r\n                [{v:'KR-45',f:'전북'}],\r\n                [{v:'KR-44',f:'충남'}],\r\n                [{v:'KR-43',f:'충북'}],\r\n                [{v:'KR-42',f:'강원'}],\r\n                [{v:'KR-41',f:'경기'}],\r\n                [{v:'KR-50',f:'세종'}],\r\n                [{v:'KR-31',f:'울산'}],\r\n                [{v:'KR-30',f:'대전'}],\r\n                [{v:'KR-29',f:'광주'}],\r\n                [{v:'KR-28',f:'인천'}],\r\n                [{v:'KR-27',f:'대구'}],\r\n                [{v:'KR-26',f:'부산'}],\r\n                [{v:'KR-11',f:'서울'}],\r\n                \r\n            ],\r\n            cityGeoChartOptions: {\r\n                region: 'KR',\r\n                resolution: 'provinces',\r\n                colorAxis:{\r\n                    minValue: 0,  colors: ['#fffcfc', '#b00b0b']\r\n                },\r\n                height:400\r\n            },\r\n\r\n        }\r\n    },\r\n    created(){\r\n\r\n    },\r\n    watch:{\r\n        dailyTotalData(){\r\n            this.koreaDailyTotalChart()\r\n        },\r\n        cityData(){\r\n            this.koreaCityGeoChart()\r\n        }\r\n    },\r\n    methods:{\r\n        koreaDailyTotalChart(){\r\n            \r\n            const { dates, confirmed, recovered, deaths } = this.dailyTotalData\r\n\r\n            this.dailyTotalChartData = {\r\n                labels: dates,\r\n                datasets:[\r\n                    {\r\n                        label: '확진자',\r\n                        borderColor:'rgba(54, 162, 235, 1)',\r\n                        backgroundColor:'rgba(54, 162, 235, 0.05)',\r\n                        pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                        pointBackgroundColor:'rgba(54, 162, 235, 1)',\r\n                        borderWidth: 2,\r\n                        data: confirmed\r\n                    },\r\n                    {\r\n                        label: '완치자',\r\n                        borderColor:'rgba(29, 237, 14, 1)',                     \r\n                        backgroundColor:'rgba(29, 237, 14, 0.05)',\r\n                        pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                        pointBackgroundColor:'rgba(29, 237, 14, 1)',\r\n                        borderWidth: 2,\r\n                        data: recovered\r\n                    },\r\n                    \r\n                    {\r\n                        label: '사망자',\r\n                        borderColor:'rgba(219, 47, 35, 1)',\r\n                        backgroundColor:'rgba(219, 47, 35, 0.05)',\r\n                        pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                        pointBackgroundColor:'rgba(219, 47, 35, 1)',\r\n                        borderWidth: 2,\r\n                        data: deaths\r\n                    },\r\n                    \r\n                ]\r\n            }\r\n\r\n            this.dailyTotalChartLoaded = true\r\n        },\r\n        koreaCityGeoChart(){\r\n            let { cityData } = this.cityData\r\n            for(let i=1; i<cityData.length; i++){\r\n\r\n                    this.cityGeoChartData[i].push(cityData[i].defCnt, cityData[i].deathCnt)\r\n                }\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]}]}