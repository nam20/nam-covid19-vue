{"remainingRequest":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\projects\\nam-lol\\frontend\\src\\views\\VueChartJS.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\projects\\nam-lol\\frontend\\src\\views\\VueChartJS.vue","mtime":1598598090017},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgTGluZUNoYXJ0IGZyb20gJ0AvY29tcG9uZW50cy9MaW5lQ2hhcnQnDQppbXBvcnQgQmFyQ2hhcnQgZnJvbSAnQC9jb21wb25lbnRzL0JhckNoYXJ0Jw0KaW1wb3J0IEJ1YmJsZUNoYXJ0IGZyb20gJ0AvY29tcG9uZW50cy9CdWJibGVDaGFydCcNCmltcG9ydCBSZWFjdGl2ZSBmcm9tICdAL2NvbXBvbmVudHMvUmVhY3RpdmUnDQoNCg0KZXhwb3J0IGRlZmF1bHQgew0KICAgIG5hbWU6ICdWdWVDaGFydEpTJywNCiAgICBjb21wb25lbnRzOnsNCiAgICAgICAgTGluZUNoYXJ0LA0KICAgICAgICBCYXJDaGFydCwNCiAgICAgICAgQnViYmxlQ2hhcnQsDQogICAgICAgIFJlYWN0aXZlDQogICAgfSwNCiAgICBkYXRhICgpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIC8vIGluc3RhbnRpYXRpbmcgZGF0YWNvbGxlY3Rpb24gd2l0aCBudWxsDQogICAgICAgICAgICBkYXRhY29sbGVjdGlvbjogbnVsbCwNCiAgICAgICAgICAgIGxvYWRlZDpmYWxzZQ0KICAgICAgICB9DQogICAgfSwNCiAgICBjcmVhdGVkICgpIHsNCiAgICAgICAgLy9hbnl0aW1lIHRoZSB2dWUgaW5zdGFuY2UgaXMgY3JlYXRlZCwgY2FsbCB0aGUgZmlsbERhdGEoKSBmdW5jdGlvbi4NCiAgICAgICAgLy90aGlzLmZpbGxEYXRhKCkNCiAgICAgICAgdGhpcy5jb3JvbmEoKQ0KICAgIH0sDQogICAgbWV0aG9kczogew0KICAgICAgICBmaWxsRGF0YSAoKSB7DQogICAgICAgICAgICB0aGlzLmRhdGFjb2xsZWN0aW9uID0gew0KICAgICAgICAgICAgLy8gRGF0YSBmb3IgdGhlIHktYXhpcyBvZiB0aGUgY2hhcnQNCiAgICAgICAgICAgIGxhYmVsczogWydKYW51YXJ5JywgJ0ZlYnJ1YXJ5JywgJ01hcmNoJywgJ0FwcmlsJywgJ01heScsICdKdW5lJywgJ0p1bHknLCAnQXVndXN0JywgJ1NlcHRlbWJlcicsICdPY3RvYmVyJywgJ05vdmVtYmVyJywgJ0RlY2VtYmVyJ10sDQogICAgICAgICAgICBkYXRhc2V0czogWw0KICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICBsYWJlbDogJ0RhdGEgT25lJywNCiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjMDNmY2VjJywNCiAgICAgICAgICAgICAgICAvLyBEYXRhIGZvciB0aGUgeC1heGlzIG9mIHRoZSBjaGFydA0KICAgICAgICAgICAgICAgIGRhdGE6IFt0aGlzLmdldFJhbmRvbUludCgpLCB0aGlzLmdldFJhbmRvbUludCgpLCB0aGlzLmdldFJhbmRvbUludCgpLCB0aGlzLmdldFJhbmRvbUludCgpLCB0aGlzLmdldFJhbmRvbUludCgpLCB0aGlzLmdldFJhbmRvbUludCgpLCB0aGlzLmdldFJhbmRvbUludCgpLCB0aGlzLmdldFJhbmRvbUludCgpLCB0aGlzLmdldFJhbmRvbUludCgpLCB0aGlzLmdldFJhbmRvbUludCgpLCB0aGlzLmdldFJhbmRvbUludCgpLCB0aGlzLmdldFJhbmRvbUludCgpXQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBdDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIGdldFJhbmRvbUludCAoKSB7DQogICAgICAgICAgICAvLyBKUyBmdW5jdGlvbiB0byBnZW5lcmF0ZSBudW1iZXJzIHRvIGJlIHVzZWQgZm9yIHRoZSBjaGFydA0KICAgICAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqICg1MCAtIDUgKyAxKSkgKyA1DQogICAgICAgIH0sDQogICAgICAgIGFzeW5jIGNvcm9uYSgpew0KICAgICAgICAgICAgdHJ5ew0KICAgICAgICAgICAgICAgIGxldCB7IGRhdGEgfSA9IGF3YWl0IGF4aW9zLmdldCgnaHR0cHM6Ly9hcGkuY292aWQxOWFwaS5jb20vdG90YWwvY291bnRyeS9zb3V0aC1rb3JlYScpDQogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSkNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICB0aGlzLmRhdGFjb2xsZWN0aW9uID0gew0KICAgICAgICAgICAgICAgICAgICBsYWJlbHM6IGRhdGEubWFwKGNvdmlkID0+IGNvdmlkLkRhdGUuc3Vic3RyaW5nKDUsMTApKSwNCiAgICAgICAgICAgICAgICAgICAgZGF0YXNldHM6Ww0KICAgICAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnQ29uZmlybWVkJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjonIzAzZmNlYycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOidyZ2JhKDMsIDI1MiwgMjM2LCAwLjIpJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb2ludEJvcmRlckNvbG9yOidyZ2JhKDI1NSwgMjU1LCAyNTUsIDApJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLm1hcChjb3ZpZCA9PiBjb3ZpZC5Db25maXJtZWQpDQogICAgICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnUmVjb3ZlcmVkJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjonIzBlY2Y0YicsICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOidyZ2JhKDE0LCAyMDcsIDc1LCAwLjIpJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb2ludEJvcmRlckNvbG9yOidyZ2JhKDI1NSwgMjU1LCAyNTUsIDApJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLm1hcChjb3ZpZCA9PiBjb3ZpZC5SZWNvdmVyZWQpDQogICAgICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICdEZWF0aHMnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOicjYzcwODA4JywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6J3JnYmEoMTk5LCA4LCA4LCAwLjcpJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb2ludEJvcmRlckNvbG9yOidyZ2JhKDI1NSwgMjU1LCAyNTUsIDApJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLm1hcChjb3ZpZCA9PiBjb3ZpZC5EZWF0aHMpDQogICAgICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIF0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgdGhpcy5sb2FkZWQgPSB0cnVlDQoNCiAgICAgICAgICAgIH1jYXRjaChlKXsNCiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGUpDQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCiAgICANCn0NCg=="},{"version":3,"sources":["VueChartJS.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA","file":"VueChartJS.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <v-container>\r\n        <h2>example vue-chartjs</h2>\r\n        <v-col>\r\n            <v-card>\r\n                <h3>Line Chart</h3>\r\n                <v-switch label=\"test\"></v-switch>\r\n                <line-chart \r\n                v-if=\"loaded\"\r\n                :chart-data=\"datacollection\">\r\n                </line-chart>\r\n            </v-card>\r\n        </v-col>\r\n        <v-col>\r\n            <v-card>\r\n                <h3>Bar Chart</h3>\r\n                <bar-chart></bar-chart>\r\n            </v-card>    \r\n        </v-col>\r\n        <v-col>\r\n            <v-card>\r\n                <h3>Bubble Chart</h3>\r\n                <bubble-chart></bubble-chart>\r\n            </v-card>\r\n        </v-col>\r\n        <!-- <v-col>\r\n            <v-card>\r\n                <h3>Reactive Chart</h3>\r\n                <reactive :chart-data=\"datacollection\"></reactive>\r\n                <v-btn color=\"success\" @click=\"fillData()\">Randomize</v-btn>\r\n            </v-card>\r\n        </v-col> -->\r\n        \r\n       \r\n    </v-container>\r\n   \r\n</template>\r\n\r\n<script>\r\nimport LineChart from '@/components/LineChart'\r\nimport BarChart from '@/components/BarChart'\r\nimport BubbleChart from '@/components/BubbleChart'\r\nimport Reactive from '@/components/Reactive'\r\n\r\n\r\nexport default {\r\n    name: 'VueChartJS',\r\n    components:{\r\n        LineChart,\r\n        BarChart,\r\n        BubbleChart,\r\n        Reactive\r\n    },\r\n    data () {\r\n        return {\r\n            // instantiating datacollection with null\r\n            datacollection: null,\r\n            loaded:false\r\n        }\r\n    },\r\n    created () {\r\n        //anytime the vue instance is created, call the fillData() function.\r\n        //this.fillData()\r\n        this.corona()\r\n    },\r\n    methods: {\r\n        fillData () {\r\n            this.datacollection = {\r\n            // Data for the y-axis of the chart\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n            datasets: [\r\n                {\r\n                label: 'Data One',\r\n                backgroundColor: '#03fcec',\r\n                // Data for the x-axis of the chart\r\n                data: [this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt()]\r\n                }\r\n                ]\r\n            }\r\n        },\r\n        getRandomInt () {\r\n            // JS function to generate numbers to be used for the chart\r\n            return Math.floor(Math.random() * (50 - 5 + 1)) + 5\r\n        },\r\n        async corona(){\r\n            try{\r\n                let { data } = await axios.get('https://api.covid19api.com/total/country/south-korea')\r\n                console.log(data)\r\n                \r\n                this.datacollection = {\r\n                    labels: data.map(covid => covid.Date.substring(5,10)),\r\n                    datasets:[\r\n                        {\r\n                            label: 'Confirmed',\r\n                            borderColor:'#03fcec',\r\n                            backgroundColor:'rgba(3, 252, 236, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: data.map(covid => covid.Confirmed)\r\n                        },\r\n                        {\r\n                            label: 'Recovered',\r\n                            borderColor:'#0ecf4b',                     \r\n                            backgroundColor:'rgba(14, 207, 75, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: data.map(covid => covid.Recovered)\r\n                        },\r\n                        \r\n                        {\r\n                            label: 'Deaths',\r\n                            borderColor:'#c70808',\r\n                            backgroundColor:'rgba(199, 8, 8, 0.7)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: data.map(covid => covid.Deaths)\r\n                        },\r\n                        \r\n                    ]\r\n                }\r\n                this.loaded = true\r\n\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]}]}