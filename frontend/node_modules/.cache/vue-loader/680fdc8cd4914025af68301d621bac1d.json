{"remainingRequest":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\projects\\nam-lol\\frontend\\src\\views\\VueChartJS.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\projects\\nam-lol\\frontend\\src\\views\\VueChartJS.vue","mtime":1600266248299},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgTGluZUNoYXJ0IGZyb20gJ0AvY29tcG9uZW50cy9jaGFydC9MaW5lQ2hhcnQnDQppbXBvcnQgQmFyQ2hhcnQgZnJvbSAnQC9jb21wb25lbnRzL2NoYXJ0L0JhckNoYXJ0Jw0KaW1wb3J0IEJ1YmJsZUNoYXJ0IGZyb20gJ0AvY29tcG9uZW50cy9jaGFydC9CdWJibGVDaGFydCcNCmltcG9ydCBSZWFjdGl2ZSBmcm9tICdAL2NvbXBvbmVudHMvY2hhcnQvUmVhY3RpdmUnDQoNCg0KZXhwb3J0IGRlZmF1bHQgew0KICAgIG5hbWU6ICdWdWVDaGFydEpTJywNCiAgICBjb21wb25lbnRzOnsNCiAgICAgICAgTGluZUNoYXJ0LA0KICAgICAgICBCYXJDaGFydCwNCiAgICAgICAgQnViYmxlQ2hhcnQsDQogICAgICAgIFJlYWN0aXZlDQogICAgfSwNCiAgICBkYXRhICgpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIC8vIGluc3RhbnRpYXRpbmcgZGF0YWNvbGxlY3Rpb24gd2l0aCBudWxsDQogICAgICAgICAgICBkYXRhY29sbGVjdGlvbjogbnVsbCwNCiAgICAgICAgICAgIGxvYWRlZDpmYWxzZQ0KICAgICAgICB9DQogICAgfSwNCiAgICBjcmVhdGVkICgpIHsNCiAgICAgICAgLy9hbnl0aW1lIHRoZSB2dWUgaW5zdGFuY2UgaXMgY3JlYXRlZCwgY2FsbCB0aGUgZmlsbERhdGEoKSBmdW5jdGlvbi4NCiAgICAgICAgdGhpcy5maWxsRGF0YSgpDQogICAgICAgIHRoaXMuY29yb25hKCkNCiAgICB9LA0KICAgIG1ldGhvZHM6IHsNCiAgICAgICAgZmlsbERhdGEgKCkgew0KICAgICAgICAgICAgdGhpcy5kYXRhY29sbGVjdGlvbiA9IHsNCiAgICAgICAgICAgIC8vIERhdGEgZm9yIHRoZSB5LWF4aXMgb2YgdGhlIGNoYXJ0DQogICAgICAgICAgICBsYWJlbHM6IFsnSmFudWFyeScsICdGZWJydWFyeScsICdNYXJjaCcsICdBcHJpbCcsICdNYXknLCAnSnVuZScsICdKdWx5JywgJ0F1Z3VzdCcsICdTZXB0ZW1iZXInLCAnT2N0b2JlcicsICdOb3ZlbWJlcicsICdEZWNlbWJlciddLA0KICAgICAgICAgICAgZGF0YXNldHM6IFsNCiAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgbGFiZWw6ICdEYXRhIE9uZScsDQogICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnIzAzZmNlYycsDQogICAgICAgICAgICAgICAgLy8gRGF0YSBmb3IgdGhlIHgtYXhpcyBvZiB0aGUgY2hhcnQNCiAgICAgICAgICAgICAgICBkYXRhOiBbdGhpcy5nZXRSYW5kb21JbnQoKSwgdGhpcy5nZXRSYW5kb21JbnQoKSwgdGhpcy5nZXRSYW5kb21JbnQoKSwgdGhpcy5nZXRSYW5kb21JbnQoKSwgdGhpcy5nZXRSYW5kb21JbnQoKSwgdGhpcy5nZXRSYW5kb21JbnQoKSwgdGhpcy5nZXRSYW5kb21JbnQoKSwgdGhpcy5nZXRSYW5kb21JbnQoKSwgdGhpcy5nZXRSYW5kb21JbnQoKSwgdGhpcy5nZXRSYW5kb21JbnQoKSwgdGhpcy5nZXRSYW5kb21JbnQoKSwgdGhpcy5nZXRSYW5kb21JbnQoKV0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgXQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBnZXRSYW5kb21JbnQgKCkgew0KICAgICAgICAgICAgLy8gSlMgZnVuY3Rpb24gdG8gZ2VuZXJhdGUgbnVtYmVycyB0byBiZSB1c2VkIGZvciB0aGUgY2hhcnQNCiAgICAgICAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoNTAgLSA1ICsgMSkpICsgNQ0KICAgICAgICB9LA0KICAgICAgICBhc3luYyBjb3JvbmEoKXsNCiAgICAgICAgICAgIHRyeXsNCiAgICAgICAgICAgICAgICBsZXQgeyBkYXRhIH0gPSBhd2FpdCBheGlvcy5nZXQoJ2h0dHBzOi8vYXBpLmNvdmlkMTlhcGkuY29tL3RvdGFsL2NvdW50cnkvc291dGgta29yZWEnKQ0KICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgdGhpcy5kYXRhY29sbGVjdGlvbiA9IHsNCiAgICAgICAgICAgICAgICAgICAgbGFiZWxzOiBkYXRhLm1hcChjb3ZpZCA9PiBjb3ZpZC5EYXRlLnN1YnN0cmluZyg1LDEwKSksDQogICAgICAgICAgICAgICAgICAgIGRhdGFzZXRzOlsNCiAgICAgICAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ0NvbmZpcm1lZCcsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6JyMwM2ZjZWMnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjoncmdiYSgzLCAyNTIsIDIzNiwgMC4yKScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnRCb3JkZXJDb2xvcjoncmdiYSgyNTUsIDI1NSwgMjU1LCAwKScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDIsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YS5tYXAoY292aWQgPT4gY292aWQuQ29uZmlybWVkKQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ1JlY292ZXJlZCcsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6JyMwZWNmNGInLCAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjoncmdiYSgxNCwgMjA3LCA3NSwgMC4yKScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnRCb3JkZXJDb2xvcjoncmdiYSgyNTUsIDI1NSwgMjU1LCAwKScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDIsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YS5tYXAoY292aWQgPT4gY292aWQuUmVjb3ZlcmVkKQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnRGVhdGhzJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjonI2M3MDgwOCcsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOidyZ2JhKDE5OSwgOCwgOCwgMC43KScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnRCb3JkZXJDb2xvcjoncmdiYSgyNTUsIDI1NSwgMjU1LCAwKScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDIsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YS5tYXAoY292aWQgPT4gY292aWQuRGVhdGhzKQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICBdDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHRoaXMubG9hZGVkID0gdHJ1ZQ0KDQogICAgICAgICAgICB9Y2F0Y2goZSl7DQogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgDQp9DQo="},{"version":3,"sources":["VueChartJS.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA","file":"VueChartJS.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <v-container>\r\n        <h2>example vue-chartjs</h2>\r\n        <v-col>\r\n            <v-card>\r\n                <h3>Line Chart</h3>\r\n                <v-switch label=\"test\"></v-switch>\r\n                <line-chart \r\n                v-if=\"loaded\"\r\n                :chart-data=\"datacollection\">\r\n                </line-chart>\r\n            </v-card>\r\n        </v-col>\r\n        <v-col>\r\n            <v-card>\r\n                <h3>Bar Chart</h3>\r\n                <bar-chart></bar-chart>\r\n            </v-card>    \r\n        </v-col>\r\n        <v-col>\r\n            <v-card>\r\n                <h3>Bubble Chart</h3>\r\n                <bubble-chart></bubble-chart>\r\n            </v-card>\r\n        </v-col>\r\n        <v-col>\r\n            <v-card>\r\n                <h3>Reactive Chart</h3>\r\n                <reactive :chart-data=\"datacollection\"></reactive>\r\n                <v-btn color=\"success\" @click=\"fillData()\">Randomize</v-btn>\r\n            </v-card>\r\n        </v-col>\r\n        \r\n       \r\n    </v-container>\r\n   \r\n</template>\r\n\r\n<script>\r\nimport LineChart from '@/components/chart/LineChart'\r\nimport BarChart from '@/components/chart/BarChart'\r\nimport BubbleChart from '@/components/chart/BubbleChart'\r\nimport Reactive from '@/components/chart/Reactive'\r\n\r\n\r\nexport default {\r\n    name: 'VueChartJS',\r\n    components:{\r\n        LineChart,\r\n        BarChart,\r\n        BubbleChart,\r\n        Reactive\r\n    },\r\n    data () {\r\n        return {\r\n            // instantiating datacollection with null\r\n            datacollection: null,\r\n            loaded:false\r\n        }\r\n    },\r\n    created () {\r\n        //anytime the vue instance is created, call the fillData() function.\r\n        this.fillData()\r\n        this.corona()\r\n    },\r\n    methods: {\r\n        fillData () {\r\n            this.datacollection = {\r\n            // Data for the y-axis of the chart\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n            datasets: [\r\n                {\r\n                label: 'Data One',\r\n                backgroundColor: '#03fcec',\r\n                // Data for the x-axis of the chart\r\n                data: [this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt()]\r\n                }\r\n                ]\r\n            }\r\n        },\r\n        getRandomInt () {\r\n            // JS function to generate numbers to be used for the chart\r\n            return Math.floor(Math.random() * (50 - 5 + 1)) + 5\r\n        },\r\n        async corona(){\r\n            try{\r\n                let { data } = await axios.get('https://api.covid19api.com/total/country/south-korea')\r\n                console.log(data)\r\n                \r\n                this.datacollection = {\r\n                    labels: data.map(covid => covid.Date.substring(5,10)),\r\n                    datasets:[\r\n                        {\r\n                            label: 'Confirmed',\r\n                            borderColor:'#03fcec',\r\n                            backgroundColor:'rgba(3, 252, 236, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: data.map(covid => covid.Confirmed)\r\n                        },\r\n                        {\r\n                            label: 'Recovered',\r\n                            borderColor:'#0ecf4b',                     \r\n                            backgroundColor:'rgba(14, 207, 75, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: data.map(covid => covid.Recovered)\r\n                        },\r\n                        \r\n                        {\r\n                            label: 'Deaths',\r\n                            borderColor:'#c70808',\r\n                            backgroundColor:'rgba(199, 8, 8, 0.7)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: data.map(covid => covid.Deaths)\r\n                        },\r\n                        \r\n                    ]\r\n                }\r\n                this.loaded = true\r\n\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]}]}