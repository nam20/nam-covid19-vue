{"remainingRequest":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\projects\\nam-lol\\frontend\\src\\components\\KoreaCountry.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\projects\\nam-lol\\frontend\\src\\components\\KoreaCountry.vue","mtime":1601804430805},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["KoreaCountry.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"KoreaCountry.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <v-row>\r\n        <v-col cols=\"12\" sm=\"12\" md=\"6\" >\r\n            <chart-card>\r\n                <template v-slot:title>\r\n                    국내 확진자 일일 신규 증가추이\r\n                </template>\r\n                <template v-slot:body>\r\n                    <line-chart \r\n                    v-if=\"koreaDailyNewChartLoaded\"\r\n                    :chart-data=\"koreaDailyNewChartData\"\r\n                    :height=\"472\">\r\n                    </line-chart>\r\n                </template>\r\n            </chart-card>\r\n        \r\n        </v-col>\r\n        <v-col cols=\"12\" sm=\"12\" md=\"6\" id=\"worldStatus\">\r\n            <chart-card>\r\n                <template v-slot:title>\r\n                    국가별 발생 분포\r\n                </template>\r\n                <template v-slot:body>\r\n                    <pie-chart\r\n                    :chart-data=\"worldCounrtyChartData\"\r\n                    >\r\n                    </pie-chart>\r\n                    <v-row justify=\"center\">\r\n                        <v-btn-toggle \r\n                        borderless \r\n                        mandatory\r\n                        color=\"rgba(54, 162, 235, 1)\" \r\n                        v-model=\"worldCounrtyChartStatus\" \r\n                        class=\"my-3\">\r\n                            <v-btn value=\"0\">\r\n                                확진자\r\n                            </v-btn>\r\n                            <v-btn value=\"1\">\r\n                                사망자\r\n                            </v-btn>\r\n                            <v-btn value=\"2\">\r\n                                완치자\r\n                            </v-btn>\r\n                        </v-btn-toggle>\r\n                    </v-row>\r\n                    \r\n                </template>\r\n                \r\n            </chart-card>\r\n        </v-col>\r\n    </v-row>\r\n</template>\r\n\r\n<script>\r\nimport ChartCard from './ChartCard'\r\nimport LineChart from './chart/LineChart'\r\nimport PieChart from './chart/PieChart'\r\nimport isoCountries from '@/data/isoCountries'\r\n\r\nexport default {\r\n    components:{\r\n        ChartCard,\r\n        LineChart,\r\n        PieChart\r\n    },\r\n    props:['koreaNewConfData','worldCountryData'],\r\n    data(){\r\n        return {\r\n            koreaDailyNewChartData: '',\r\n            koreaDailyNewChartLoaded: false,\r\n\r\n            worldCounrtyChartDataArr: [],\r\n            worldCounrtyChartStatus: 0,\r\n            worldCounrtyChartLoaded: false,\r\n\r\n\r\n            borderColor:[\r\n                'rgba(240, 12, 12, 1)',\r\n                'rgba(237, 226, 14, 1)',\r\n                'rgba(29, 237, 14, 1)',\r\n                'rgba(237, 159, 14, 1)',\r\n                'rgba(14, 237, 237, 1)',\r\n                'rgba(14, 44, 237, 1)',\r\n                'rgba(189, 235, 52, 1)',\r\n                'rgba(171, 50, 165, 1)',\r\n                'rgba(91, 168, 35, 1)',\r\n                'rgba(255, 107, 174, 1)',\r\n                'rgba(102, 102, 102, 1)',\r\n            ],\r\n            backgroundColor:[\r\n                'rgba(240, 12, 12, 0.2)',\r\n                'rgba(237, 226, 14, 0.2)',\r\n                'rgba(29, 237, 14, 0.2)',\r\n                'rgba(237, 159, 14, 0.2)',\r\n                'rgba(14, 237, 237, 0.2)',\r\n                'rgba(14, 44, 237, 0.2)',\r\n                'rgba(189, 235, 52, 0.2)',\r\n                'rgba(171, 50, 165, 0.2)',\r\n                'rgba(91, 168, 35, 0.2)',\r\n                'rgba(255, 107, 174, 0.2)',\r\n                'rgba(102, 102, 102, 0.2)',\r\n            ],\r\n        }\r\n    },\r\n    watch:{\r\n        koreaNewConfData(){\r\n            this.koreaDailyNewChart()\r\n        },\r\n        worldCountryData(){\r\n            this.worldCountryChart()\r\n        }\r\n    },\r\n    computed:{\r\n        worldCounrtyChartData(){\r\n            return this.worldCounrtyChartDataArr[this.worldCounrtyChartStatus]\r\n        }\r\n    },\r\n    methods:{\r\n        koreaDailyNewChart(){\r\n            const { confirmed, dates } = this.koreaNewConfData\r\n            const dailyNewConfirmed = confirmed.slice(confirmed.length - 31)\r\n            const dailyNewDates = dates.slice(dates.length - 30)\r\n\r\n            for(let i=0; i<30; i++){\r\n                dailyNewConfirmed[i] = dailyNewConfirmed[i+1] - dailyNewConfirmed[i]\r\n            }\r\n            this.koreaDailyNewChartData = {\r\n                labels: dailyNewDates,\r\n                datasets:[\r\n                    {\r\n                        label: '확진자 (전일대비)',\r\n                        borderColor:'rgba(54, 162, 235, 1)',\r\n                        backgroundColor:'rgba(54, 162, 235, 0.2)',\r\n                        pointBorderColor:'rgba(54, 162, 235, 1)',\r\n                        pointBackgroundColor:'rgba(54, 162, 235, 1)',\r\n                        borderWidth: 2,\r\n                        data: dailyNewConfirmed.slice(0, dailyNewConfirmed.length-1)\r\n                    }\r\n                ]\r\n            }\r\n\r\n            this.koreaDailyNewChartLoaded = true\r\n        },\r\n        worldCountryChart(){\r\n\r\n            const data = this.worldCountryData\r\n            const conf = this.countryStatusSortData(data, 'confirmed')\r\n            const deaths = this.countryStatusSortData(data, 'deaths')\r\n            const recovered = this.countryStatusSortData(data, 'recovered')\r\n\r\n            this.worldCounrtyChartDataArr = [\r\n                {\r\n                    labels: [...(conf.data.map(covid => isoCountries[covid.country].name)), '기타'],\r\n                    datasets:[\r\n                        {\r\n                            label: '확진자',\r\n                            borderColor: this.borderColor,\r\n                            backgroundColor : this.backgroundColor,\r\n                            data: [...(conf.data.map(covid => covid.confirmed)), conf.otherCountryCount]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    labels: [...(deaths.data.map(covid => isoCountries[covid.country].name)), '기타'],\r\n                    datasets:[\r\n                        {\r\n                            label: '사망자',\r\n                            borderColor: this.borderColor,\r\n                            backgroundColor : this.backgroundColor,\r\n                            data: [...(deaths.data.map(covid => covid.deaths)), deaths.otherCountryCount]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    labels: [...(recovered.data.map(covid => isoCountries[covid.country].name)), '기타'],\r\n                    datasets:[\r\n                        {\r\n                            label: '완치자',\r\n                            borderColor: this.borderColor,\r\n                            backgroundColor : this.backgroundColor,\r\n                            data: [...(recovered.data.map(covid => covid.recovered)), recovered.otherCountryCount]\r\n                        }\r\n                    ]\r\n                },\r\n\r\n            ]\r\n\r\n            //this.worldCounrtyChartData = this.worldCounrtyChartDataArr[0]\r\n            //this.worldCounrtyChartLoaded = true\r\n        },\r\n        // 국가별 확진, 사망, 완치 수 내림차순 정렬\r\n        countryStatusSortData(data, status){\r\n\r\n            const mapped = data.map((covid, i) => { \r\n                    return { i, value : covid[`${status}`] }\r\n                })\r\n            mapped.sort((a,b) => b.value - a.value)\r\n            const sortData = mapped.map(el => data[el.i])\r\n            \r\n            const otherCountryCount = sortData.slice(10)\r\n                                        .map(covid => covid[`${status}`])\r\n                                        .reduce((acc,cur) => acc + cur)\r\n            return {\r\n                otherCountryCount,\r\n                data : sortData.slice(0,10)\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]}]}