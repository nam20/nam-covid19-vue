{"remainingRequest":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\projects\\nam-lol\\frontend\\src\\components\\WorldDaily.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\projects\\nam-lol\\frontend\\src\\components\\WorldDaily.vue","mtime":1601806768851},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBHQ2hhcnQgfSBmcm9tICd2dWUtZ29vZ2xlLWNoYXJ0cycNCmltcG9ydCBDaGFydENhcmQgZnJvbSAnLi9DaGFydENhcmQnDQppbXBvcnQgTGluZUNoYXJ0IGZyb20gJ0AvY29tcG9uZW50cy9jaGFydC9MaW5lQ2hhcnQnDQppbXBvcnQgaXNvQ291bnRyaWVzIGZyb20gJ0AvZGF0YS9pc29Db3VudHJpZXMnDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgICBjb21wb25lbnRzOnsNCiAgICAgICAgR0NoYXJ0LA0KICAgICAgICBDaGFydENhcmQsDQogICAgICAgIExpbmVDaGFydA0KICAgIH0sDQogICAgcHJvcHM6Wydjb3VudHJ5RGF0YSddLA0KICAgIGRhdGEoKXsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIHdvcmxkR2VvQ2hhcnREYXRhOiBbWydDb3VudHJ5JywgJ+2ZleynhOyekCcsICfsgqzrp53snpAnXV0sDQogICAgICAgICAgICB3b3JsZEdlb0NoYXJ0T3B0aW9uczogew0KICAgICAgICAgICAgICAgIHJlc29sdXRpb246ICdjb3VudHJpZXMnLA0KICAgICAgICAgICAgICAgIGNvbG9yQXhpczp7DQogICAgICAgICAgICAgICAgICAgIG1pblZhbHVlOiAwLCAgY29sb3JzOiBbJyNmZmZjZmMnLCAnI2IwMGIwYiddDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICBoZWlnaHQ6IDANCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICB3b3JsZEdlb0NoYXJ0TG9hZGVkOiBmYWxzZSwNCg0KICAgICAgICAgICAgZGFpbHlUb3RhbENoYXJ0RGF0YTogJycsDQogICAgICAgICAgICBkYWlseVRvdGFsQ2hhcnRMb2FkZWQ6IGZhbHNlLA0KICAgICAgICAgICAgDQogICAgICAgIH0NCiAgICB9LA0KICAgIGNyZWF0ZWQoKXsNCiAgICAgICAgLy90aGlzLmdldFdvcmxkRGFpbHlUb3RhbENoYXJ0KCkNCiAgICB9LA0KICAgIHdhdGNoOnsNCiAgICAgICAgY291bnRyeURhdGEoKXsNCiAgICAgICAgICAgIHRoaXMud29ybGRDb3VudHJ5R2VvQ2hhcnQoKQ0KICAgICAgICB9LA0KICAgICAgICBjaGFydEhlaWdodCgpew0KICAgICAgICAgICAgdGhpcy53b3JsZEdlb0NoYXJ0T3B0aW9ucy5oZWlnaHQgPSB0aGlzLmNoYXJ0SGVpZ2h0DQogICAgICAgIH0NCiAgICB9LA0KICAgIGNvbXB1dGVkOnsNCiAgICAgICAgY2hhcnRIZWlnaHQoKXsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLiR2dWV0aWZ5LmJyZWFrcG9pbnQud2lkdGggKiAwLjYyNA0KICAgICAgICB9DQogICAgfSwNCiAgICBtZXRob2RzOnsNCiAgICAgICAgd29ybGRDb3VudHJ5R2VvQ2hhcnQoKXsNCg0KICAgICAgICAgICAgY29uc3QgZGF0YSA9IHRoaXMuY291bnRyeURhdGENCg0KICAgICAgICAgICAgY29uc3QgY291bnRyeUdlb0RhdGEgPSBkYXRhLm1hcChjb3ZpZCA9PiB7DQoNCiAgICAgICAgICAgICAgICBjb25zdCBpc29Db3VudHJ5ID0gaXNvQ291bnRyaWVzW2NvdmlkLmNvdW50cnldDQogICAgICAgICAgICAgICAgcmV0dXJuIFsNCiAgICAgICAgICAgICAgICAgICAgeyANCiAgICAgICAgICAgICAgICAgICAgICAgIHY6IGlzb0NvdW50cnkuaXNvLA0KICAgICAgICAgICAgICAgICAgICAgICAgZjogaXNvQ291bnRyeS5uYW1lDQogICAgICAgICAgICAgICAgICAgIH0sIA0KICAgICAgICAgICAgICAgICAgICBjb3ZpZC5jb25maXJtZWQsIA0KICAgICAgICAgICAgICAgICAgICBjb3ZpZC5kZWF0aHMNCiAgICAgICAgICAgICAgICBdDQogICAgICAgICAgICB9KS5maWx0ZXIoY292aWQgPT4gY292aWRbMF0udikNCg0KICAgICAgICAgICAgdGhpcy53b3JsZEdlb0NoYXJ0RGF0YSA9IHRoaXMud29ybGRHZW9DaGFydERhdGEuY29uY2F0KGNvdW50cnlHZW9EYXRhKQ0KDQogICAgICAgICAgICB0aGlzLndvcmxkR2VvQ2hhcnRMb2FkZWQgPSB0cnVlDQogICAgICAgIH0sDQogICAgICAgIGFzeW5jIGdldFdvcmxkRGFpbHlUb3RhbENoYXJ0KCl7DQoNCiAgICAgICAgICAgIHRyeXsNCiAgICAgICAgICAgICAgICAvL2NvbnN0IHsgZGF0YSB9ID0gYXdhaXQgYXhpb3MuZ2V0KCcvY292aWQvd29ybGQvZGFpbHknKQ0KICAgICAgICAgICAgICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgYXhpb3MuZ2V0KCdodHRwczovL2NvdmlkMTkubWF0aGRyby5pZC9hcGkvZGFpbHknKQ0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIHRoaXMuZGFpbHlUb3RhbENoYXJ0RGF0YSAgPSB7DQogICAgICAgICAgICAgICAgICAgIGxhYmVscyA6IGRhdGEubWFwKGNvdmlkID0+IGNvdmlkLnJlcG9ydERhdGUuc3Vic3RyaW5nKDUpKSwNCiAgICAgICAgICAgICAgICAgICAgZGF0YXNldHM6Ww0KICAgICAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAn7ZmV7KeE7J6QJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjoncmdiYSg1NCwgMTYyLCAyMzUsIDEpJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6J3JnYmEoNTQsIDE2MiwgMjM1LCAwLjIpJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb2ludEJvcmRlckNvbG9yOidyZ2JhKDI1NSwgMjU1LCAyNTUsIDApJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb2ludEJhY2tncm91bmRDb2xvcjoncmdiYSg1NCwgMTYyLCAyMzUsIDEpJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLm1hcChjb3ZpZCA9PiBjb3ZpZC5jb25maXJtZWQudG90YWwpDQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIF0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgdGhpcy5kYWlseVRvdGFsQ2hhcnRMb2FkZWQgPSB0cnVlDQogICAgICAgICAgICB9Y2F0Y2goZSl7DQogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlKQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgDQogICAgICAgIH0sDQogICAgICAgIG9uUmVzaXplKCl7DQogICAgICAgICAgICB0aGlzLmNoYXJ0SGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0DQogICAgICAgIH0NCiAgICB9DQp9DQo="},{"version":3,"sources":["WorldDaily.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"WorldDaily.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <v-row>\r\n        <v-col cols=\"12\" md=\"12\">\r\n            <chart-card>\r\n                <template v-slot:title>\r\n                    코로나 발병 세계 지도\r\n                </template>\r\n                <template v-slot:body>\r\n                    <GChart\r\n                    type=\"GeoChart\"\r\n                    :settings=\"{ packages: [ 'geochart'] }\"\r\n                    :data=\"worldGeoChartData\"\r\n                    :options=\"worldGeoChartOptions\"\r\n                    :resizeDebounce=\"500\"\r\n                    v-if=\"worldGeoChartLoaded\"\r\n                    \r\n                    />\r\n                </template>\r\n            </chart-card>\r\n        </v-col>\r\n        <!-- <v-col cols=\"12\" md=\"6\">\r\n            <chart-card>\r\n                <template v-slot:title>\r\n                    전세계 확진자 증가추이\r\n                </template>\r\n                <template v-slot:body>\r\n                    <line-chart\r\n                    :chart-data=\"dailyTotalChartData\"\r\n                    v-if=\"dailyTotalChartLoaded\"\r\n                    :height=\"450\">\r\n                    </line-chart>\r\n                </template>\r\n            </chart-card>\r\n        </v-col> -->\r\n    </v-row>\r\n</template>\r\n\r\n<script>\r\nimport { GChart } from 'vue-google-charts'\r\nimport ChartCard from './ChartCard'\r\nimport LineChart from '@/components/chart/LineChart'\r\nimport isoCountries from '@/data/isoCountries'\r\n\r\nexport default {\r\n    components:{\r\n        GChart,\r\n        ChartCard,\r\n        LineChart\r\n    },\r\n    props:['countryData'],\r\n    data(){\r\n        return {\r\n            worldGeoChartData: [['Country', '확진자', '사망자']],\r\n            worldGeoChartOptions: {\r\n                resolution: 'countries',\r\n                colorAxis:{\r\n                    minValue: 0,  colors: ['#fffcfc', '#b00b0b']\r\n                },\r\n                height: 0\r\n            },\r\n            worldGeoChartLoaded: false,\r\n\r\n            dailyTotalChartData: '',\r\n            dailyTotalChartLoaded: false,\r\n            \r\n        }\r\n    },\r\n    created(){\r\n        //this.getWorldDailyTotalChart()\r\n    },\r\n    watch:{\r\n        countryData(){\r\n            this.worldCountryGeoChart()\r\n        },\r\n        chartHeight(){\r\n            this.worldGeoChartOptions.height = this.chartHeight\r\n        }\r\n    },\r\n    computed:{\r\n        chartHeight(){\r\n            return this.$vuetify.breakpoint.width * 0.624\r\n        }\r\n    },\r\n    methods:{\r\n        worldCountryGeoChart(){\r\n\r\n            const data = this.countryData\r\n\r\n            const countryGeoData = data.map(covid => {\r\n\r\n                const isoCountry = isoCountries[covid.country]\r\n                return [\r\n                    { \r\n                        v: isoCountry.iso,\r\n                        f: isoCountry.name\r\n                    }, \r\n                    covid.confirmed, \r\n                    covid.deaths\r\n                ]\r\n            }).filter(covid => covid[0].v)\r\n\r\n            this.worldGeoChartData = this.worldGeoChartData.concat(countryGeoData)\r\n\r\n            this.worldGeoChartLoaded = true\r\n        },\r\n        async getWorldDailyTotalChart(){\r\n\r\n            try{\r\n                //const { data } = await axios.get('/covid/world/daily')\r\n                const { data } = await axios.get('https://covid19.mathdro.id/api/daily')\r\n                \r\n                this.dailyTotalChartData  = {\r\n                    labels : data.map(covid => covid.reportDate.substring(5)),\r\n                    datasets:[\r\n                        {\r\n                            label: '확진자',\r\n                            borderColor:'rgba(54, 162, 235, 1)',\r\n                            backgroundColor:'rgba(54, 162, 235, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            pointBackgroundColor:'rgba(54, 162, 235, 1)',\r\n                            \r\n                            borderWidth: 2,\r\n                            data: data.map(covid => covid.confirmed.total)\r\n                        }\r\n                    ]\r\n                }\r\n                \r\n                this.dailyTotalChartLoaded = true\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n            \r\n        },\r\n        onResize(){\r\n            this.chartHeight = window.innerHeight\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]}]}