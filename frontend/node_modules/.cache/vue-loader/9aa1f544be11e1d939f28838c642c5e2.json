{"remainingRequest":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\projects\\nam-lol\\frontend\\src\\views\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\projects\\nam-lol\\frontend\\src\\views\\index.vue","mtime":1598798145876},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgTGluZUNoYXJ0IGZyb20gJ0AvY29tcG9uZW50cy9MaW5lQ2hhcnQnDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgICBjb21wb25lbnRzOnsNCiAgICAgICAgTGluZUNoYXJ0DQogICAgfSwNCiAgICBkYXRhKCl7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgICB3b3JsZFRvdGFsOnt9LA0KICAgICAgICAgICAga29yZWFUb3RhbDp7fSwNCiAgICAgICAgICAgIGtvcmVhQ2hhcnREYXRhOiBudWxsLA0KICAgICAgICAgICAga29yZWFEYWlseUNoYXJ0RGF0YTpudWxsLA0KICAgICAgICAgICAgbG9hZGVkOmZhbHNlLA0KICAgICAgICAgICAgbmF2ZXJOZXdzOicnLA0KICAgICAgICAgICAgZ29vZ2xlTmV3czonJywNCiAgICAgICAgICAgIA0KICAgICAgICB9DQogICAgfSwNCiAgICBjcmVhdGVkKCl7DQogICAgICAgIHRoaXMuZ2V0V29ybGRUb3RhbCgpDQogICAgICAgIHRoaXMuY29yb25hKCkNCiAgICAgICAgdGhpcy5nb29nbGVDcmF3bGluZygpDQogICAgICAgIA0KICAgICAgICB0aGlzLm5hdmVyQ3Jhd2xpbmcoKQ0KICAgICAgICB0aGlzLmNvdmlkR2VuQWdlKCk7DQogICAgfSwNCiAgICBtZXRob2RzOnsNCiAgICAgICAgZ2V0V29ybGRUb3RhbCgpew0KICAgICAgICAgICAgYXhpb3MuZ2V0KCdodHRwczovL2FwaS5jb3ZpZDE5YXBpLmNvbS93b3JsZC90b3RhbCcpDQogICAgICAgICAgICAudGhlbigoe2RhdGF9KT0+ew0KICAgICAgICAgICAgICAgIHRoaXMud29ybGRUb3RhbCA9IHsNCiAgICAgICAgICAgICAgICAgICAgVG90YWxDb25maXJtZWQgOiB0aGlzLm51bWJlckZvcm1hdChkYXRhLlRvdGFsQ29uZmlybWVkKSwNCiAgICAgICAgICAgICAgICAgICAgVG90YWxEZWF0aHMgOiB0aGlzLm51bWJlckZvcm1hdChkYXRhLlRvdGFsRGVhdGhzKSwNCiAgICAgICAgICAgICAgICAgICAgVG90YWxSZWNvdmVyZWQgOiB0aGlzLm51bWJlckZvcm1hdChkYXRhLlRvdGFsUmVjb3ZlcmVkKQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pDQogICAgICAgICAgICAuY2F0Y2goZXJyPT57DQogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpDQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KICAgICAgICBhc3luYyBjb3JvbmEoKXsNCiAgICAgICAgICAgIHRyeXsNCiAgICAgICAgICAgICAgICBsZXQgeyBkYXRhIH0gPSBhd2FpdCBheGlvcy5nZXQoJ2h0dHBzOi8vYXBpLmNvdmlkMTlhcGkuY29tL3RvdGFsL2NvdW50cnkvc291dGgta29yZWEnKQ0KICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpDQogICAgICAgICAgICAgICAgbGV0IGRhdGVzID0gZGF0YS5tYXAoY292aWQgPT4gY292aWQuRGF0ZS5zdWJzdHJpbmcoNSwxMCkpDQogICAgICAgICAgICAgICAgbGV0IGNvbmZpcm1lZCA9IGRhdGEubWFwKGNvdmlkID0+IGNvdmlkLkNvbmZpcm1lZCkNCiAgICAgICAgICAgICAgICBsZXQgcmVjb3ZlcmVkID0gZGF0YS5tYXAoY292aWQgPT4gY292aWQuUmVjb3ZlcmVkKQ0KICAgICAgICAgICAgICAgIGxldCBkZWF0aHMgPSBkYXRhLm1hcChjb3ZpZCA9PiBjb3ZpZC5EZWF0aHMpDQogICAgICAgICAgICAgICAgdGhpcy5rb3JlYUNoYXJ0RGF0YSA9IHsNCiAgICAgICAgICAgICAgICAgICAgbGFiZWxzOiBkYXRlcywNCiAgICAgICAgICAgICAgICAgICAgZGF0YXNldHM6Ww0KICAgICAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnQ29uZmlybWVkJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjonIzAzZmNlYycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOidyZ2JhKDMsIDI1MiwgMjM2LCAwLjIpJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb2ludEJvcmRlckNvbG9yOidyZ2JhKDI1NSwgMjU1LCAyNTUsIDApJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBjb25maXJtZWQNCiAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICdSZWNvdmVyZWQnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOicjMGVjZjRiJywgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6J3JnYmEoMTQsIDIwNywgNzUsIDAuMiknLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvaW50Qm9yZGVyQ29sb3I6J3JnYmEoMjU1LCAyNTUsIDI1NSwgMCknLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcldpZHRoOiAyLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHJlY292ZXJlZA0KICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnRGVhdGhzJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjonI2M3MDgwOCcsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOidyZ2JhKDE5OSwgOCwgOCwgMC43KScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnRCb3JkZXJDb2xvcjoncmdiYSgyNTUsIDI1NSwgMjU1LCAwKScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDIsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogZGVhdGhzDQogICAgICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIF0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgbGV0IGRhaWx5Q29uZmlybWVkID0gY29uZmlybWVkLnNsaWNlKGNvbmZpcm1lZC5sZW5ndGggLSAzMSkNCiAgICAgICAgICAgICAgICBsZXQgZGFpbHlEYXRlcyA9IGRhdGVzLnNsaWNlKGRhdGVzLmxlbmd0aCAtIDMwKQ0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIGZvcihsZXQgaT0wOyBpPDMwOyBpKyspew0KICAgICAgICAgICAgICAgICAgICBkYWlseUNvbmZpcm1lZFtpXSA9IGRhaWx5Q29uZmlybWVkW2krMV0gLSBkYWlseUNvbmZpcm1lZFtpXQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYWlseUNvbmZpcm1lZCkNCiAgICAgICAgICAgICAgICB0aGlzLmtvcmVhRGFpbHlDaGFydERhdGEgPSB7DQogICAgICAgICAgICAgICAgICAgIGxhYmVsczogZGFpbHlEYXRlcywNCiAgICAgICAgICAgICAgICAgICAgZGF0YXNldHM6Ww0KICAgICAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnQ29uZmlybWVkJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjonIzAzZmNlYycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOidyZ2JhKDMsIDI1MiwgMjM2LCAwLjIpJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb2ludEJvcmRlckNvbG9yOidyZ2JhKDI1NSwgMjU1LCAyNTUsIDApJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYWlseUNvbmZpcm1lZC5zbGljZSgwLGRhaWx5Q29uZmlybWVkLmxlbmd0aC0xKQ0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBdDQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgdGhpcy5rb3JlYVRvdGFsID0gew0KICAgICAgICAgICAgICAgICAgICBUb3RhbENvbmZpcm1lZCA6IHRoaXMubnVtYmVyRm9ybWF0KGNvbmZpcm1lZFtjb25maXJtZWQubGVuZ3RoLTFdKSwNCiAgICAgICAgICAgICAgICAgICAgVG90YWxEZWF0aHMgOiB0aGlzLm51bWJlckZvcm1hdChkZWF0aHNbZGVhdGhzLmxlbmd0aC0xXSksDQogICAgICAgICAgICAgICAgICAgIFRvdGFsUmVjb3ZlcmVkIDogdGhpcy5udW1iZXJGb3JtYXQocmVjb3ZlcmVkW3JlY292ZXJlZC5sZW5ndGgtMV0pDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHRoaXMubG9hZGVkID0gdHJ1ZQ0KICAgICAgICAgICAgfWNhdGNoKGUpew0KICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSkNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgYXN5bmMgbmF2ZXJDcmF3bGluZygpew0KICAgICAgICAgICAgdHJ5ew0KICAgICAgICAgICAgICAgIGxldCB7IGRhdGEgfSA9IGF3YWl0IGF4aW9zLmdldCgnL2NvdmlkL25hdmVyQ3Jhd2xpbmcnKQ0KICAgICAgICAgICAgICAgIHRoaXMubmF2ZXJOZXdzID0gZGF0YQ0KICAgICAgICAgICAgfWNhdGNoKGUpew0KICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSkNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgYXN5bmMgZ29vZ2xlQ3Jhd2xpbmcoKXsNCiAgICAgICAgICAgIHRyeXsNCiAgICAgICAgICAgICAgICBsZXQgeyBkYXRhIH0gPSBhd2FpdCBheGlvcy5nZXQoJy9jb3ZpZC9nb29nbGVDcmF3bGluZycpDQogICAgICAgICAgICAgICAgdGhpcy5nb29nbGVOZXdzID0gZGF0YQ0KICAgICAgICAgICAgfWNhdGNoKGUpew0KICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSkNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgYXN5bmMgY292aWRHZW5BZ2UoKXsNCiAgICAgICAgICAgIHRyeXsNCiAgICAgICAgICAgICAgICBsZXQgcmVzID0gYXdhaXQgYXhpb3MuZ2V0KCcvY292aWQvY2FzZUdlbkFnZScpDQogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKQ0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICB9Y2F0Y2goZSl7DQogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBudW1iZXJGb3JtYXQoaW5wdXQpew0KICAgICAgICAgICAgcmV0dXJuIGlucHV0LnRvU3RyaW5nKCkucmVwbGFjZSgvXEIoPz0oXGR7M30pKyg/IVxkKSkvZywgIiwiKQ0KICAgICAgICB9LA0KICAgICAgICANCiAgICAgICAgICAgIA0KICAgIH0NCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"index.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <v-app>\r\n\r\n\r\n        \r\n\r\n\r\n        \r\n\r\n        \r\n\r\n        <v-container fluid > \r\n            <!-- <v-btn color=\"success\" @click=\"$router.push('/home')\">home</v-btn>\r\n            <v-btn color=\"#2196F3\" @click=\"$router.push('/signup')\">회원가입</v-btn>\r\n            <v-btn color=\"warning\" @click=\"$router.push('/login')\">로그인</v-btn>\r\n            <v-btn @click=\"$router.push('/nav')\">테스트</v-btn>\r\n            <v-btn @click=\"$router.push('/postForm')\">에디터</v-btn>\r\n            <v-btn @click=\"$router.push('/postList')\">게시판</v-btn>\r\n            <v-btn @click=\"$router.push('/chartjs')\">뷰차트 테스트</v-btn> -->\r\n            <v-row>\r\n                <v-col>\r\n\r\n                    <v-card>\r\n                        <v-card-title>\r\n                            <h2><span class=\"title mb-1\">국내</span></h2>\r\n                        </v-card-title>\r\n                        \r\n                        <v-list-item  >\r\n                            \r\n                            <v-list-item-content class=\"justify-center\">\r\n                                <v-card-title >확진</v-card-title>\r\n                                <v-card-text><h2>{{koreaTotal.TotalConfirmed}}</h2></v-card-text>\r\n                            </v-list-item-content >\r\n                            <v-list-item-content class=\"justify-center\">\r\n                                <v-card-title >완치</v-card-title>\r\n                                <v-card-text><h2>{{koreaTotal.TotalRecovered}}</h2></v-card-text>\r\n                                \r\n                            </v-list-item-content >\r\n                            <v-list-item-content class=\"justify-center\">\r\n                                <v-card-title >사망</v-card-title>\r\n                                <v-card-text><h2>{{koreaTotal.TotalDeaths}}</h2></v-card-text>\r\n                                \r\n                            </v-list-item-content >\r\n                        </v-list-item>\r\n                    </v-card>\r\n                </v-col>\r\n                <v-col >\r\n                    <v-card>\r\n                        <v-card-title>\r\n                            <h2><span class=\"title mb-1\">해외</span></h2>\r\n                        </v-card-title>\r\n                        <v-list-item >\r\n                            \r\n                            <v-list-item-content class=\"justify-center\">\r\n                                <v-card-title >확진</v-card-title>\r\n                                <v-card-text><h2>{{worldTotal.TotalConfirmed}}</h2></v-card-text>\r\n                            </v-list-item-content >\r\n                            <v-list-item-content class=\"justify-center\">\r\n                                <v-card-title >완치</v-card-title>\r\n                                <v-card-text><h2>{{worldTotal.TotalRecovered}}</h2></v-card-text>\r\n                                \r\n                            </v-list-item-content >\r\n                            <v-list-item-content class=\"justify-center\">\r\n                                <v-card-title >사망</v-card-title>\r\n                                <v-card-text><h2>{{worldTotal.TotalDeaths}}</h2></v-card-text>\r\n                                \r\n                            </v-list-item-content >\r\n                        </v-list-item>\r\n                    </v-card>\r\n                </v-col>\r\n            </v-row>\r\n            <v-row>\r\n                <v-col >\r\n                    <v-card>\r\n                        <h3>국내 확진자수 증가추이</h3>\r\n                        <v-switch label=\"test\"></v-switch>\r\n                        <line-chart \r\n                        v-if=\"loaded\"\r\n                        :chart-data=\"koreaChartData\">\r\n                        </line-chart>\r\n                    </v-card>\r\n                </v-col>\r\n                <v-col>\r\n                    <v-card>\r\n                        <h3>국내 확진자 일일 신규</h3>\r\n                        <v-switch label=\"test\"></v-switch>\r\n                        <line-chart \r\n                        v-if=\"loaded\"\r\n                        :chart-data=\"koreaDailyChartData\">\r\n                        </line-chart>\r\n                    </v-card>\r\n                </v-col>\r\n            </v-row>\r\n            \r\n            <v-row>\r\n                <v-col cols=\"12\" xs=\"12\" md=\"6\" >\r\n                    <v-card>\r\n                        <v-card-title>\r\n                            <h2><span class=\"title mb-4\">국내 주요 뉴우스</span></h2>\r\n                        </v-card-title>\r\n                        <v-card-text v-for=\"news in naverNews\" :key=\"news\">\r\n                            <h4>\r\n                                <a :href=\"news.href\" style=\"text-decoration:none; color:#2d46c4\">{{news.title}}</a>\r\n                            </h4>\r\n                        </v-card-text>\r\n                        \r\n                    </v-card>\r\n                </v-col>\r\n\r\n                <v-col cols=\"12\" xs=\"12\" md=\"6\" >\r\n                    <v-card>\r\n                        <v-card-title>\r\n                            <h2><span class=\"title mb-4\">해외 주요 뉴우스</span></h2>\r\n                        </v-card-title>\r\n                        <v-card-text v-for=\"news in googleNews\" :key=\"news\">\r\n                            <h4>\r\n                                <a :href=\"news.href\" style=\"text-decoration:none; color:#2d46c4\">{{news.title}}</a>\r\n                            </h4>\r\n                        </v-card-text>\r\n                        \r\n                    </v-card>\r\n                </v-col>\r\n            </v-row>\r\n            \r\n        </v-container>\r\n        \r\n        \r\n    </v-app>\r\n    \r\n</template>\r\n\r\n<script>\r\nimport LineChart from '@/components/LineChart'\r\n\r\nexport default {\r\n    components:{\r\n        LineChart\r\n    },\r\n    data(){\r\n        return {\r\n            worldTotal:{},\r\n            koreaTotal:{},\r\n            koreaChartData: null,\r\n            koreaDailyChartData:null,\r\n            loaded:false,\r\n            naverNews:'',\r\n            googleNews:'',\r\n            \r\n        }\r\n    },\r\n    created(){\r\n        this.getWorldTotal()\r\n        this.corona()\r\n        this.googleCrawling()\r\n        \r\n        this.naverCrawling()\r\n        this.covidGenAge();\r\n    },\r\n    methods:{\r\n        getWorldTotal(){\r\n            axios.get('https://api.covid19api.com/world/total')\r\n            .then(({data})=>{\r\n                this.worldTotal = {\r\n                    TotalConfirmed : this.numberFormat(data.TotalConfirmed),\r\n                    TotalDeaths : this.numberFormat(data.TotalDeaths),\r\n                    TotalRecovered : this.numberFormat(data.TotalRecovered)\r\n                }\r\n            })\r\n            .catch(err=>{\r\n                console.error(err)\r\n            })\r\n        },\r\n        async corona(){\r\n            try{\r\n                let { data } = await axios.get('https://api.covid19api.com/total/country/south-korea')\r\n                console.log(data)\r\n                let dates = data.map(covid => covid.Date.substring(5,10))\r\n                let confirmed = data.map(covid => covid.Confirmed)\r\n                let recovered = data.map(covid => covid.Recovered)\r\n                let deaths = data.map(covid => covid.Deaths)\r\n                this.koreaChartData = {\r\n                    labels: dates,\r\n                    datasets:[\r\n                        {\r\n                            label: 'Confirmed',\r\n                            borderColor:'#03fcec',\r\n                            backgroundColor:'rgba(3, 252, 236, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: confirmed\r\n                        },\r\n                        {\r\n                            label: 'Recovered',\r\n                            borderColor:'#0ecf4b',                     \r\n                            backgroundColor:'rgba(14, 207, 75, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: recovered\r\n                        },\r\n                        \r\n                        {\r\n                            label: 'Deaths',\r\n                            borderColor:'#c70808',\r\n                            backgroundColor:'rgba(199, 8, 8, 0.7)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: deaths\r\n                        },\r\n                        \r\n                    ]\r\n                }\r\n                \r\n                let dailyConfirmed = confirmed.slice(confirmed.length - 31)\r\n                let dailyDates = dates.slice(dates.length - 30)\r\n                \r\n                for(let i=0; i<30; i++){\r\n                    dailyConfirmed[i] = dailyConfirmed[i+1] - dailyConfirmed[i]\r\n                }\r\n                console.log(dailyConfirmed)\r\n                this.koreaDailyChartData = {\r\n                    labels: dailyDates,\r\n                    datasets:[\r\n                        {\r\n                            label: 'Confirmed',\r\n                            borderColor:'#03fcec',\r\n                            backgroundColor:'rgba(3, 252, 236, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: dailyConfirmed.slice(0,dailyConfirmed.length-1)\r\n                        }\r\n                    ]\r\n                }\r\n\r\n                this.koreaTotal = {\r\n                    TotalConfirmed : this.numberFormat(confirmed[confirmed.length-1]),\r\n                    TotalDeaths : this.numberFormat(deaths[deaths.length-1]),\r\n                    TotalRecovered : this.numberFormat(recovered[recovered.length-1])\r\n                }\r\n                this.loaded = true\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async naverCrawling(){\r\n            try{\r\n                let { data } = await axios.get('/covid/naverCrawling')\r\n                this.naverNews = data\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async googleCrawling(){\r\n            try{\r\n                let { data } = await axios.get('/covid/googleCrawling')\r\n                this.googleNews = data\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async covidGenAge(){\r\n            try{\r\n                let res = await axios.get('/covid/caseGenAge')\r\n                console.log(res)\r\n                \r\n\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        numberFormat(input){\r\n            return input.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n        },\r\n        \r\n            \r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}