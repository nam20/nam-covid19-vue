{"remainingRequest":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\projects\\nam-lol\\frontend\\src\\views\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\projects\\nam-lol\\frontend\\src\\views\\index.vue","mtime":1600436455493},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgVG9kYXlUb3RhbCBmcm9tICdAL2NvbXBvbmVudHMvVG9kYXlUb3RhbCcNCmltcG9ydCBDb3ZpZE5ld3MgZnJvbSAnQC9jb21wb25lbnRzL0NvdmlkTmV3cycNCmltcG9ydCBLb3JlYURhaWx5IGZyb20gJ0AvY29tcG9uZW50cy9Lb3JlYURhaWx5Jw0KaW1wb3J0IENpdHlHZW5kZXIgZnJvbSAnQC9jb21wb25lbnRzL0NpdHlHZW5kZXInDQppbXBvcnQgQWdlU3RhdHVzIGZyb20gJ0AvY29tcG9uZW50cy9BZ2VTdGF0dXMnDQppbXBvcnQgS29yZWFDb3VudHJ5IGZyb20gJ0AvY29tcG9uZW50cy9Lb3JlYUNvdW50cnknDQppbXBvcnQgV29ybGREYWlseSBmcm9tICdAL2NvbXBvbmVudHMvV29ybGREYWlseScNCmltcG9ydCBDb3ZpZE90aGVyIGZyb20gJ0AvY29tcG9uZW50cy9Db3ZpZE90aGVyJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogICAgY29tcG9uZW50czp7DQogICAgICAgIFRvZGF5VG90YWwsDQogICAgICAgIENvdmlkTmV3cywNCiAgICAgICAgS29yZWFEYWlseSwNCiAgICAgICAgQ2l0eUdlbmRlciwNCiAgICAgICAgQWdlU3RhdHVzLA0KICAgICAgICBLb3JlYUNvdW50cnksDQogICAgICAgIFdvcmxkRGFpbHksDQogICAgICAgIENvdmlkT3RoZXINCiAgICB9LA0KICAgIGRhdGEoKXsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgd29ybGRUb3RhbERhdGEgOiAnJywNCiAgICAgICAgICAgIA0KICAgICAgICAgICAga29yZWFEYWlseVRvdGFsRGF0YTonJywNCiAgICAgICAgICAgIA0KICAgICAgICAgICAga29yZWFDaXR5RGF0YTonJywNCg0KICAgICAgICAgICAga29yZWFHZW5EYXRhOicnLA0KICAgIA0KICAgICAgICAgICAga29yZWFBZ2VEYXRhOicnLA0KDQogICAgICAgICAgICBjb3VudHJ5VG90YWxEYXRhOicnLA0KICAgICAgICB9DQogICAgfSwNCg0KICAgIGNyZWF0ZWQoKXsNCiAgICAgICAgdGhpcy5nZXRLb3JlYURhaWx5VG90YWwoKQ0KICAgICAgICB0aGlzLmdldENvdW50cnlUb3RhbCgpDQogICAgICAgIHRoaXMuY292aWRHZW5BZ2UoKTsNCiAgICAgICAgdGhpcy5jb3ZpZENpdHkoKTsNCiAgICB9LA0KICAgIG1ldGhvZHM6ew0KICAgICAgIA0KICAgICAgICBhc3luYyBnZXRDb3VudHJ5VG90YWwoKXsNCiAgICAgICAgICAgIHRyeXsNCiAgICAgICAgICAgICAgICBsZXQgeyBkYXRhIH0gPSBhd2FpdCBheGlvcy5nZXQoJy9jb3ZpZC93b3JsZCcpDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgZGF0YSA9IGRhdGEubWFwKGNvdmlkID0+IHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpcm1lZCA6IHRoaXMuc3RyaW5nRm9ybWF0KGNvdmlkLmNvbmZpcm1lZCksDQogICAgICAgICAgICAgICAgICAgICAgICByZWNvdmVyZWQgOiB0aGlzLnN0cmluZ0Zvcm1hdChjb3ZpZC5yZWNvdmVyZWQpLA0KICAgICAgICAgICAgICAgICAgICAgICAgZGVhdGhzIDogdGhpcy5zdHJpbmdGb3JtYXQoY292aWQuZGVhdGhzKSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50cnkgOiBjb3ZpZC5jb3VudHJ5DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIHRoaXMud29ybGRUb3RhbERhdGEgPSBkYXRhLnNsaWNlKDAsMikNCg0KICAgICAgICAgICAgICAgIHRoaXMuY291bnRyeVRvdGFsRGF0YSA9IGRhdGEuc2xpY2UoMiwyMTcpDQoNCiAgICAgICAgICAgIH1jYXRjaChlKXsNCiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGUpDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIGFzeW5jIGdldEtvcmVhRGFpbHlUb3RhbCgpew0KICAgICAgICAgICAgdHJ5ew0KICAgICAgICAgICAgICAgIGxldCB7IGRhdGEgfSA9IGF3YWl0IGF4aW9zLmdldCgnL2NvdmlkL2tvcmVhL2RheScpDQogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSkNCiAgICAgICAgICAgICAgICBkYXRhID0gZGF0YS5yZXNwb25zZS5ib2R5Lml0ZW1zLml0ZW0ucmV2ZXJzZSgpDQogICAgICAgICAgICAgICAgZGF0YS5zcGxpY2UoMTE2LCAyKQ0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIC8vdGhpcy5rb3JlYVRvdGFsID0gZGF0YS5zbGljZShkYXRhLmxlbmd0aC0yKQ0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIGNvbnN0IGRhdGVzID0gZGF0YS5tYXAoY292aWQgPT4gY292aWQuY3JlYXRlRHQuc3Vic3RyaW5nKDUsMTApKQ0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbmZpcm1lZCA9IGRhdGEubWFwKGNvdmlkID0+IGNvdmlkLmRlY2lkZUNudCkNCiAgICAgICAgICAgICAgICBjb25zdCByZWNvdmVyZWQgPSBkYXRhLm1hcChjb3ZpZCA9PiBjb3ZpZC5jbGVhckNudCkNCiAgICAgICAgICAgICAgICBjb25zdCBkZWF0aHMgPSBkYXRhLm1hcChjb3ZpZCA9PiBjb3ZpZC5kZWF0aENudCkNCg0KICAgICAgICAgICAgICAgIHRoaXMua29yZWFEYWlseVRvdGFsRGF0YSA9IHsNCiAgICAgICAgICAgICAgICAgICAgZGF0ZXMsIA0KICAgICAgICAgICAgICAgICAgICBjb25maXJtZWQsDQogICAgICAgICAgICAgICAgICAgIHJlY292ZXJlZCwNCiAgICAgICAgICAgICAgICAgICAgZGVhdGhzDQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICB9Y2F0Y2goZSl7DQogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgIA0KICAgICAgICBhc3luYyBjb3ZpZEdlbkFnZSgpew0KICAgICAgICAgICAgdHJ5ew0KICAgICAgICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGF4aW9zLmdldCgnL2NvdmlkL2tvcmVhL2dlbkFnZScpDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IHJlcy5kYXRhLnJlc3BvbnNlLmJvZHkuaXRlbXMuaXRlbQ0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgdGhpcy5rb3JlYUFnZURhdGEgPSBkYXRhLnNsaWNlKDAsIDkpDQogICAgICAgICAgDQogICAgICAgICAgICAgICAgdGhpcy5rb3JlYUdlbkRhdGEgPSBkYXRhLnNsaWNlKDksIDExKQ0KDQogICAgICAgICAgICB9Y2F0Y2goZSl7DQogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBhc3luYyBjb3ZpZENpdHkoKXsNCiAgICAgICAgICAgIHRyeXsNCiAgICAgICAgICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBheGlvcy5nZXQoJy9jb3ZpZC9rb3JlYS9jaXR5JykNCiAgICAgICAgICAgICAgICBjb25zdCBjaXR5RGF0YSA9IHJlcy5kYXRhLnJlc3BvbnNlLmJvZHkuaXRlbXMuaXRlbS5zbGljZSgwLCAxOCkNCiAgICAgICAgICAgICAgICBjb25zdCBjaXR5TmFtZXMgPSBjaXR5RGF0YS5tYXAoY2l0eSA9PiBjaXR5Lmd1YnVuKQ0KDQogICAgICAgICAgICAgICAgdGhpcy5rb3JlYUNpdHlEYXRhID0gew0KICAgICAgICAgICAgICAgICAgICBjaXR5RGF0YSwgDQogICAgICAgICAgICAgICAgICAgIGNpdHlOYW1lcw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH1jYXRjaChlKXsNCiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGUpDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIHN0cmluZ0Zvcm1hdChpbnB1dCl7DQogICAgICAgICAgICByZXR1cm4gaW5wdXQgJiYgaW5wdXQgIT0gIk4vQSIgPyBwYXJzZUludChpbnB1dC5yZXBsYWNlQWxsKC8sL2csICcnKSwgMTApIDogMA0KICAgICAgICB9LA0KICAgIH0NCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n       <v-container fluid style=\"background-color: #f7f9fc\"> \r\n            \r\n            <today-total \r\n            :koreaTotalData=\"koreaDailyTotalData\" \r\n            :worldTotalData=\"worldTotalData\"\r\n            >\r\n            </today-total>\r\n          \r\n            <korea-daily\r\n            :dailyTotalData=\"koreaDailyTotalData\"\r\n            :cityData=\"koreaCityData\">\r\n            </korea-daily>\r\n        \r\n            <covid-news>\r\n            </covid-news>\r\n      \r\n            <city-gender\r\n            :cityData=\"koreaCityData\"\r\n            :genderData=\"koreaGenData\">\r\n            </city-gender>\r\n\r\n            <age-status\r\n            :ageData=\"koreaAgeData\">\r\n            </age-status>\r\n\r\n            <korea-country\r\n            :koreaNewConfData=\"koreaDailyTotalData\"\r\n            :worldCountryData=\"countryTotalData\">\r\n            </korea-country>\r\n\r\n            <world-daily\r\n            :countryData=\"countryTotalData\">\r\n            </world-daily>\r\n\r\n            <covid-other\r\n            :koreaTotalData=\"koreaDailyTotalData\" \r\n            :worldTotalData=\"worldTotalData\">\r\n            </covid-other>\r\n            \r\n        </v-container>        \r\n</template>\r\n\r\n<script>\r\nimport TodayTotal from '@/components/TodayTotal'\r\nimport CovidNews from '@/components/CovidNews'\r\nimport KoreaDaily from '@/components/KoreaDaily'\r\nimport CityGender from '@/components/CityGender'\r\nimport AgeStatus from '@/components/AgeStatus'\r\nimport KoreaCountry from '@/components/KoreaCountry'\r\nimport WorldDaily from '@/components/WorldDaily'\r\nimport CovidOther from '@/components/CovidOther'\r\n\r\nexport default {\r\n    components:{\r\n        TodayTotal,\r\n        CovidNews,\r\n        KoreaDaily,\r\n        CityGender,\r\n        AgeStatus,\r\n        KoreaCountry,\r\n        WorldDaily,\r\n        CovidOther\r\n    },\r\n    data(){\r\n        return {\r\n            \r\n            worldTotalData : '',\r\n            \r\n            koreaDailyTotalData:'',\r\n            \r\n            koreaCityData:'',\r\n\r\n            koreaGenData:'',\r\n    \r\n            koreaAgeData:'',\r\n\r\n            countryTotalData:'',\r\n        }\r\n    },\r\n\r\n    created(){\r\n        this.getKoreaDailyTotal()\r\n        this.getCountryTotal()\r\n        this.covidGenAge();\r\n        this.covidCity();\r\n    },\r\n    methods:{\r\n       \r\n        async getCountryTotal(){\r\n            try{\r\n                let { data } = await axios.get('/covid/world')\r\n                \r\n                data = data.map(covid => {\r\n                    return {\r\n                        confirmed : this.stringFormat(covid.confirmed),\r\n                        recovered : this.stringFormat(covid.recovered),\r\n                        deaths : this.stringFormat(covid.deaths),\r\n                        country : covid.country\r\n                    }\r\n                })\r\n                \r\n                this.worldTotalData = data.slice(0,2)\r\n\r\n                this.countryTotalData = data.slice(2,217)\r\n\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async getKoreaDailyTotal(){\r\n            try{\r\n                let { data } = await axios.get('/covid/korea/day')\r\n                console.log(data)\r\n                data = data.response.body.items.item.reverse()\r\n                data.splice(116, 2)\r\n                \r\n                //this.koreaTotal = data.slice(data.length-2)\r\n                \r\n                const dates = data.map(covid => covid.createDt.substring(5,10))\r\n                const confirmed = data.map(covid => covid.decideCnt)\r\n                const recovered = data.map(covid => covid.clearCnt)\r\n                const deaths = data.map(covid => covid.deathCnt)\r\n\r\n                this.koreaDailyTotalData = {\r\n                    dates, \r\n                    confirmed,\r\n                    recovered,\r\n                    deaths\r\n                }\r\n\r\n                \r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n       \r\n        async covidGenAge(){\r\n            try{\r\n                const res = await axios.get('/covid/korea/genAge')\r\n                \r\n                const data = res.data.response.body.items.item\r\n                \r\n               \r\n                this.koreaAgeData = data.slice(0, 9)\r\n          \r\n                this.koreaGenData = data.slice(9, 11)\r\n\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async covidCity(){\r\n            try{\r\n                const res = await axios.get('/covid/korea/city')\r\n                const cityData = res.data.response.body.items.item.slice(0, 18)\r\n                const cityNames = cityData.map(city => city.gubun)\r\n\r\n                this.koreaCityData = {\r\n                    cityData, \r\n                    cityNames\r\n                }\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        stringFormat(input){\r\n            return input && input != \"N/A\" ? parseInt(input.replaceAll(/,/g, ''), 10) : 0\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"]}]}