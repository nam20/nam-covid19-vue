{"remainingRequest":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\projects\\nam-lol\\frontend\\src\\views\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\projects\\nam-lol\\frontend\\src\\views\\index.vue","mtime":1600183520289},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\nam-lol\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappingshBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;;;AAKA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;;;;;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA","file":"index.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    \r\n        <v-container fluid style=\"background-color: #f7f9fc\"> \r\n            <!-- <v-btn color=\"success\" @click=\"$router.push('/home')\">home</v-btn>\r\n            <v-btn color=\"#2196F3\" @click=\"$router.push('/signup')\">회원가입</v-btn>\r\n            <v-btn color=\"warning\" @click=\"$router.push('/login')\">로그인</v-btn>\r\n            <v-btn @click=\"$router.push('/nav')\">테스트</v-btn>\r\n            <v-btn @click=\"$router.push('/postForm')\">에디터</v-btn>\r\n            <v-btn @click=\"$router.push('/postList')\">게시판</v-btn> -->\r\n            <!-- <v-btn @click=\"$router.push('/chartjs')\">뷰차트 테스트</v-btn> -->\r\n            \r\n            <v-row justify=\"center\" id=\"covidStatus\"> \r\n                <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n                    <v-card>\r\n                        \r\n                        <v-card-title class=\"justify-center\">\r\n                            <h3>국내 현황</h3>\r\n                        </v-card-title>\r\n                        <v-row>\r\n                            <v-col class=\"text-center\">\r\n                                <p>확진자</p>\r\n                                <p class=\"number mb-0\">{{koreaTotal.totalConfirmed}}</p>\r\n                                <p class=\"covid\">+({{koreaTotal.newConfirmed}})</p>                            \r\n                            </v-col>\r\n                            <v-col class=\"text-center\">\r\n                                <p>사망자</p>\r\n                                <p class=\"number covid mb-0\">{{koreaTotal.totalDeaths}}</p>\r\n                                <p class=\"covid\">+({{koreaTotal.newDeaths}})</p>   \r\n                            </v-col>\r\n                            <v-col class=\"text-center\">\r\n                                <p>치명율</p>\r\n                                <p class=\"number\">{{koreaTotal.totalCritical}}%</p>\r\n                            </v-col>\r\n                            <v-col class=\"text-center\">\r\n                                <p>완치자</p>\r\n                                <p class=\"number mb-0\">{{koreaTotal.totalRecovered}}</p>\r\n                                <p class=\"recovered\">+({{koreaTotal.newRecovered}})</p>   \r\n                            </v-col>\r\n                        </v-row>\r\n\r\n                    </v-card>\r\n                </v-col>\r\n                <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n                    <v-card>\r\n                        <v-card-title class=\"justify-center\">\r\n                            <h3>세계 현황</h3>\r\n                        </v-card-title>\r\n                        <v-row>\r\n                            <v-col class=\"text-center\">\r\n                                <p>확진자</p>\r\n                                <p class=\"number mb-0\">{{worldTotal.totalConfirmed}}</p>       \r\n                                <p class=\"covid\">+({{worldTotal.newConfirmed}})</p>                         \r\n                            </v-col>\r\n                            <v-col class=\"text-center\">\r\n                                <p>사망자</p>\r\n                                <p class=\"number covid mb-0\">{{worldTotal.totalDeaths}}</p>\r\n                                <p class=\"covid\">+({{worldTotal.newDeaths}})</p>   \r\n                            </v-col>\r\n                            <v-col class=\"text-center\">\r\n                                <p>치명율</p>\r\n                                <p class=\"number\">{{worldTotal.totalCritical}}%</p>\r\n                            </v-col>\r\n                            <v-col class=\"text-center\">\r\n                                <p>완치자</p>\r\n                                <p class=\"number mb-0\">{{worldTotal.totalRecovered}}</p>\r\n                                <p class=\"recovered\">+({{worldTotal.newRecovered}})</p>   \r\n                            </v-col>\r\n                        </v-row>\r\n                    </v-card>\r\n                </v-col>\r\n                \r\n            </v-row>\r\n            \r\n            <v-row id=\"koreaStatus\">\r\n                <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n                    <chart-card>\r\n                        <template v-slot:title>\r\n                            국내 확진자 증가추이\r\n                        </template>\r\n                        <template v-slot:body>\r\n                            <line-chart \r\n                            v-if=\"koreaDailyTotalLoaded\"\r\n                            :chart-data=\"koreaDailyTotalChartData\"\r\n                            :height=\"500\"\r\n                            >\r\n                            </line-chart>\r\n                        </template>\r\n                    </chart-card>\r\n                    \r\n                </v-col>\r\n                <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n                    <chart-card>\r\n                        <template v-slot:title>\r\n                            국내 코로나 발병 지도\r\n                        </template>\r\n                        <template v-slot:body>\r\n                            <GChart\r\n                            type=\"GeoChart\"\r\n                            :settings=\"{ packages: [ 'geochart']}\"\r\n                            :data=\"koreaGeoChartData\"\r\n                            :options=\"koreaGeoChartOptions\"\r\n                            \r\n                            />\r\n                        </template>\r\n                    </chart-card>\r\n                   \r\n                </v-col>\r\n            </v-row>\r\n\r\n            \r\n            <v-row id=\"worldKoreaNews\">\r\n                <v-col cols=\"12\" xs=\"12\" md=\"6\" >\r\n                    <chart-card>\r\n                        <template v-slot:title>\r\n                            국내 주요 뉴스\r\n                        </template>\r\n                        <template v-slot:body>\r\n                            <v-simple-table >\r\n                                <tbody>\r\n                                    <tr v-for=\"news in naverNews\" :key=\"news\">\r\n                                        <td>\r\n                                            <h4>\r\n                                                <a :href=\"news.href\" style=\"text-decoration:none; color:#2d46c4\" target=\"_blank\">{{news.title}}</a>\r\n                                            </h4>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </v-simple-table>\r\n                            <!-- <v-card-text v-for=\"news in naverNews\" :key=\"news\">\r\n                                <h4>\r\n                                    <a :href=\"news.href\" style=\"text-decoration:none; color:#2d46c4\" target=\"_blank\">{{news.title}}</a>\r\n                                </h4>\r\n                            </v-card-text> -->\r\n                        </template>\r\n                    </chart-card>\r\n                   \r\n                </v-col>\r\n\r\n                <v-col cols=\"12\" xs=\"12\" md=\"6\" >\r\n                    <chart-card>\r\n                        <template v-slot:title>\r\n                            해외 주요 뉴스\r\n                        </template>\r\n                        <template v-slot:body>\r\n                            <v-simple-table>\r\n                                <tbody>\r\n                                    <tr v-for=\"news in googleNews\" :key=\"news\">\r\n                                        <td>\r\n                                            <h4>\r\n                                                <a :href=\"news.href\" style=\"text-decoration:none; color:#2d46c4\" target=\"_blank\">{{news.title}}</a>\r\n                                            </h4>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </v-simple-table>\r\n                            <!-- <v-card-text v-for=\"news in googleNews\" :key=\"news\">\r\n                                <h4>\r\n                                    <a :href=\"news.href\" style=\"text-decoration:none; color:#2d46c4\" target=\"_blank\">{{news.title}}</a>\r\n                                </h4>\r\n                            </v-card-text> -->\r\n                        </template>\r\n                    </chart-card>\r\n                   \r\n                </v-col>\r\n            </v-row>\r\n\r\n            <v-row>\r\n                <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n                    <chart-card>\r\n                        <template v-slot:title>\r\n                            도시별 확진자 현황\r\n                        </template>\r\n                        <template v-slot:body>\r\n                            <bar-chart\r\n                            :chart-data=\"koreaCityChartData\"\r\n                            v-if=\"cityChartLoaded\"\r\n                            >\r\n                            </bar-chart>\r\n                            <v-row justify=\"center\">\r\n                                <v-btn-toggle \r\n                                borderless \r\n                                color=\"rgba(54, 162, 235, 1)\" \r\n                                v-model=\"koreaCityStatus\" \r\n                                class=\"my-3\">\r\n                                    <v-btn>\r\n                                        확진자\r\n                                    </v-btn>\r\n                                    <v-btn>\r\n                                        사망자\r\n                                    </v-btn>\r\n                                    <v-btn>\r\n                                        완치자\r\n                                    </v-btn>\r\n                                </v-btn-toggle>\r\n                            </v-row>\r\n                          \r\n                        </template>\r\n                    </chart-card>\r\n                   \r\n                    \r\n                </v-col>\r\n                <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n                    <chart-card>\r\n                        <template v-slot:title>\r\n                            성별 확진자 현황\r\n                        </template>\r\n                        <template v-slot:body>\r\n                            <pie-chart\r\n                            :chart-data=\"koreaGenChartData\"\r\n                            v-if=\"genAgeChartLoaded\">\r\n                            </pie-chart>\r\n                            <v-row justify=\"center\">\r\n                                <v-btn-toggle \r\n                                borderless \r\n                                color=\"rgba(54, 162, 235, 1)\" \r\n                                v-model=\"koreaGenStatus\" \r\n                                class=\"my-3\">\r\n                                    <v-btn>\r\n                                        확진자\r\n                                    </v-btn>\r\n                                    <v-btn>\r\n                                        사망자\r\n                                    </v-btn>\r\n                                </v-btn-toggle>\r\n                            </v-row>\r\n                         \r\n                        </template>\r\n                    </chart-card>\r\n                  \r\n                </v-col>\r\n            </v-row>\r\n            <v-row>\r\n                <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n                    <chart-card card-height=\"420px\">\r\n                        <template v-slot:title>\r\n                            연령대별 확진자 현황\r\n                        </template>\r\n                        <template v-slot:body>\r\n                            <polar-area-chart\r\n                            :chart-data=\"koreaAgeChartData\"\r\n                            v-if=\"genAgeChartLoaded\">\r\n                            </polar-area-chart>\r\n                        </template>\r\n                    </chart-card>\r\n          \r\n                </v-col>\r\n                <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n                    <chart-card card-height=\"420px\">\r\n                        <template v-slot:title>\r\n                            연령대별 치명율 현황\r\n                        </template>\r\n                        <template v-slot:body>\r\n                            <radar-chart\r\n                            :chart-data=\"koreaAgeCriticalChartData\"\r\n                            v-if=\"genAgeChartLoaded\">\r\n                            </radar-chart>\r\n                        </template>\r\n                    </chart-card>\r\n                </v-col>\r\n            </v-row>\r\n            \r\n            \r\n            <v-row id=\"worldStatus\">\r\n                <v-col cols=\"12\" sm=\"12\" md=\"6\" >\r\n                    <chart-card>\r\n                        <template v-slot:title>\r\n                            국내 확진자 일일 신규 증가추이\r\n                        </template>\r\n                        <template v-slot:body>\r\n                            <line-chart \r\n                            v-if=\"koreaDailyTotalLoaded\"\r\n                            :chart-data=\"koreaDailyChartData\"\r\n                            :height=\"472\">\r\n                            </line-chart>\r\n                        </template>\r\n                    </chart-card>\r\n                \r\n                </v-col>\r\n                <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n                    <chart-card>\r\n                        <template v-slot:title>\r\n                            국가별 발생 분포\r\n                        </template>\r\n                        <template v-slot:body>\r\n                            <pie-chart\r\n                            :chart-data=\"worldCounrtyChartData\"\r\n                            v-if=\"worldCounrtyChartLoaded\">\r\n                            </pie-chart>\r\n                            <v-row justify=\"center\">\r\n                                <v-btn-toggle \r\n                                borderless \r\n                                color=\"rgba(54, 162, 235, 1)\" \r\n                                v-model=\"worldCountryStatus\" \r\n                                class=\"my-3\">\r\n                                    <v-btn>\r\n                                        확진자\r\n                                    </v-btn>\r\n                                    <v-btn>\r\n                                        사망자\r\n                                    </v-btn>\r\n                                    <v-btn>\r\n                                        완치자\r\n                                    </v-btn>\r\n                                </v-btn-toggle>\r\n                            </v-row>\r\n                           \r\n                        </template>\r\n                    </chart-card>\r\n               \r\n                </v-col>\r\n            </v-row>\r\n\r\n            <!-- <v-row>\r\n                <v-col>\r\n                    \r\n                  \r\n                </v-col>\r\n            </v-row> -->\r\n\r\n            <v-row >\r\n                <v-col cols=\"12\" md=\"6\">\r\n                    <chart-card>\r\n                        <template v-slot:title>\r\n                            전세계 코로나 발병 지도\r\n                        </template>\r\n                        <template v-slot:body>\r\n                            <GChart\r\n                            type=\"GeoChart\"\r\n                            :settings=\"{ packages: [ 'geochart'] }\"\r\n                            :data=\"worldGeoChartData\"\r\n                            :options=\"worldGeoChartOptions\"\r\n                            :resizeDebounce=\"0\"\r\n                            v-if=\"worldGeoChartLoaded\"\r\n                            \r\n                            />\r\n                        </template>\r\n                    </chart-card>\r\n                </v-col>\r\n                <v-col cols=\"12\" md=\"6\">\r\n                    <chart-card>\r\n                        <template v-slot:title>\r\n                            전세계 확진자 증가추이\r\n                        </template>\r\n                        <template v-slot:body>\r\n                            <line-chart\r\n                            :chart-data=\"worldDailyTotalChartData\"\r\n                            v-if=\"worldChartLoaded\"\r\n                            :height=\"550\">\r\n                            </line-chart>\r\n                        </template>\r\n                    </chart-card>\r\n                </v-col>\r\n            </v-row>\r\n            \r\n           \r\n            <v-row >\r\n                <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n                    <v-row>\r\n                        <v-col cols=\"12\" class=\"pt-0\">\r\n                            <chart-card>\r\n                                <template v-slot:title>\r\n                                    유튜브 관련 영상\r\n                                </template>\r\n                                <template v-slot:body>\r\n                                    <v-card \r\n                                    v-for=\"item in youtubeList\" \r\n                                    :key=\"item\" \r\n                                    class=\"px-2\" \r\n                                    tile outlined \r\n                                    :href=\"`https://www.youtube.com/watch?v=${item.id.videoId}`\" \r\n                                    target=\"_blank\">\r\n                                        <v-row align=\"center\">\r\n                                            <v-col cols=\"4\">\r\n                                                <v-img :src=\"item.snippet.thumbnails.medium.url\"></v-img>\r\n                                            </v-col>\r\n                                            <v-col cols=\"8\">\r\n                                                <v-card-title v-text=\"item.snippet.title\" class=\"mb-2\"></v-card-title>\r\n                                                <v-card-subtitle v-text=\"item.snippet.description\"></v-card-subtitle>\r\n                                            </v-col>\r\n                                        </v-row>\r\n                                        <!-- <h2>{{item.snippet.title}}</h2> -->\r\n                                    </v-card>\r\n                                </template>\r\n                            </chart-card>\r\n                        </v-col>\r\n                        <v-col cols=\"12\" >\r\n                            <chart-card>\r\n                                <template v-slot:title>\r\n                                    전염병 통계 비교\r\n                                </template>\r\n                                <template v-slot:body>\r\n                                    <v-simple-table class=\"my-3\" >\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th><h3>병명</h3></th>\r\n                                                <th><h2>코로나 19</h2> </th>\r\n                                                <th><h2>MERS</h2> </th>\r\n                                                <th><h2>SARS</h2> </th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>발생연도</td>\r\n                                                <td class=\"covid\">2019</td>\r\n                                                <td>2012</td>\r\n                                                <td>2003</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>확진자</td>\r\n                                                <td class=\"covid\">{{worldTotal.totalConfirmed}}</td>\r\n                                                <td>2,494</td>\r\n                                                <td>8,096</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>한국 확진자</td>\r\n                                                <td class=\"covid\">{{koreaTotal.totalConfirmed}}</td>\r\n                                                <td>186</td>\r\n                                                <td>3</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>사망자</td>\r\n                                                <td class=\"covid\">{{worldTotal.totalDeaths}}</td>\r\n                                                <td>858</td>\r\n                                                <td>774</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>한국 사망자</td>\r\n                                                <td class=\"covid\">{{koreaTotal.totalDeaths}}</td>\r\n                                                <td>38</td>\r\n                                                <td>0</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>치명율</td>\r\n                                                <td class=\"covid\">{{worldTotal.totalCritical}}%</td>\r\n                                                <td>34.4%</td>\r\n                                                <td>9.6%</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>영향국가</td>\r\n                                                <td class=\"covid\">214</td>\r\n                                                <td>27</td>\r\n                                                <td>26</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </v-simple-table>\r\n                                </template>\r\n                            </chart-card>\r\n                        </v-col>\r\n                    </v-row>\r\n                    \r\n                </v-col>\r\n                <v-col cols=\"12\" sm=\"12\" md=\"6\">\r\n                    <v-row>\r\n                        <v-col cols=\"12\" class=\"pt-0\" id=\"cityConfirmed\">\r\n                            <chart-card>\r\n                                <template v-slot:title>\r\n                                    확진자 동향\r\n                                </template>\r\n                                <template v-slot:body>\r\n                                    <v-row justify=\"center\">\r\n                                        <v-col cols=\"10\">\r\n                                            <v-btn \r\n                                            tile outlined color=\"#4678eb\" \r\n                                            class=\"ma-2\"\r\n                                            v-for=\"city in cityCovidPages\" :key=\"city\" :href=\"city[1]\" target=\"_blank\">\r\n                                                {{city[0]}}\r\n                                            </v-btn>\r\n                                        </v-col>\r\n                                    </v-row>\r\n                                </template>\r\n                            </chart-card>\r\n                            \r\n                        </v-col>\r\n                        <v-col cols=\"12\" id=\"covidPrevention\">\r\n                            <chart-card>\r\n                                <template v-slot:title>\r\n                                    예방 행동 수칙\r\n                                </template>\r\n                                <template v-slot:body>\r\n                                    <v-carousel\r\n                                    cycle\r\n                                    hide-delimiter-background\r\n                                    show-arrows-on-hover\r\n                                    height=\"800\"\r\n                                    >\r\n                                        <v-carousel-item\r\n                                        v-for=\"slide in slides\"\r\n                                        :key=\"slide\"\r\n                                        >\r\n                                    \r\n                                        <v-img :src=\"slide.src\" \r\n                                        max-height=\"800\" \r\n                                        contain/>\r\n                                        \r\n                                        </v-carousel-item>\r\n                                    </v-carousel>\r\n                                </template>\r\n                            </chart-card>\r\n                        </v-col>\r\n                        <v-col cols=\"12\">\r\n                            <chart-card>\r\n                                <template v-slot:title>\r\n                                    데이터 출처\r\n                                </template>\r\n                            </chart-card>\r\n                        </v-col>\r\n                    </v-row>\r\n                </v-col>\r\n            </v-row>\r\n           \r\n            <v-row>\r\n                <v-col >\r\n                    <!-- <chart-card>\r\n                        <template v-slot:title>\r\n                            확진자 동향\r\n                        </template>\r\n                        <template v-slot:body>\r\n                            <v-row justify=\"center\">\r\n                                <v-col cols=\"10\">\r\n                                    <v-btn \r\n                                    tile outlined color=\"#4678eb\" \r\n                                    class=\"ma-2\"\r\n                                    v-for=\"city in cityCovidPages\" :key=\"city\" :href=\"city[1]\" target=\"_blank\">\r\n                                        {{city[0]}}\r\n                                    </v-btn>\r\n                                </v-col>\r\n                            </v-row>\r\n                        </template>\r\n                    </chart-card> -->\r\n                </v-col>\r\n                \r\n            </v-row>\r\n            \r\n        \r\n            \r\n            \r\n        </v-container>\r\n        \r\n</template>\r\n\r\n<script>\r\nimport ChartCard from '@/components/ChartCard'\r\nimport LineChart from '@/components/LineChart'\r\nimport BarChart from '@/components/BarChart'\r\nimport PieChart from '@/components/PieChart'\r\nimport { GChart } from 'vue-google-charts'\r\nimport PolarAreaChart from '@/components/PolarAreaChart'\r\nimport RadarChart from '@/components/RadarChart'\r\nimport Reactive from '@/components/Reactive'\r\nexport default {\r\n    components:{\r\n        LineChart,\r\n        BarChart,\r\n        GChart,\r\n        PieChart,\r\n        PolarAreaChart,\r\n        RadarChart,\r\n        Reactive,\r\n        ChartCard\r\n    },\r\n    data(){\r\n        return {\r\n            \r\n\r\n            worldTotal:{},\r\n            koreaTotal:{},\r\n            koreaTotalChartData: null,\r\n            koreaDailyChartData:null,\r\n            \r\n            koreaAgeChartData:null,\r\n            koreaAgeCriticalChartData:null,\r\n            \r\n            worldDailyTotalChartData:null,\r\n            koreaDailyTotalLoaded:false,\r\n            naverNews:'',\r\n            googleNews:'',\r\n            genAgeChartLoaded:false,\r\n            cityChartLoaded:false,\r\n            worldChartLoaded:false,\r\n\r\n\r\n            // worldCounrtyChartData:null,\r\n            worldCounrtyChartLoaded:false,\r\n            \r\n            worldCountryData:[],\r\n            worldCountryStatus: 0,\r\n\r\n            //koreaGenChartData:null,\r\n            koreaGenData:[],\r\n            koreaGenStatus: 0,\r\n\r\n            //koreaCityChartData:null,\r\n            koreaCityData:[],\r\n            koreaCityStatus: 0,\r\n\r\n            koreaGeoChartData: [\r\n               \r\n                ['City', '확진', '사망'],\r\n                [{v:'KR-49',f:'제주'}],\r\n                [{v:'KR-48',f:'경남'}],\r\n                [{v:'KR-47',f:'경북'}],\r\n                [{v:'KR-46',f:'전남'}],\r\n                [{v:'KR-45',f:'전북'}],\r\n                [{v:'KR-44',f:'충남'}],\r\n                [{v:'KR-43',f:'충북'}],\r\n                [{v:'KR-42',f:'강원'}],\r\n                [{v:'KR-41',f:'경기'}],\r\n                [{v:'KR-50',f:'세종'}],\r\n                [{v:'KR-31',f:'울산'}],\r\n                [{v:'KR-30',f:'대전'}],\r\n                [{v:'KR-29',f:'광주'}],\r\n                [{v:'KR-28',f:'인천'}],\r\n                [{v:'KR-27',f:'대구'}],\r\n                [{v:'KR-26',f:'부산'}],\r\n                [{v:'KR-11',f:'서울'}],\r\n                \r\n            ],\r\n            koreaGeoChartOptions: {\r\n                region: 'KR',\r\n                resolution: 'provinces',\r\n                colorAxis:{\r\n                    minValue: 0,  colors: ['#fffcfc', '#b00b0b']\r\n                },\r\n                height:500\r\n            },\r\n\r\n            worldGeoChartData:[['Country', '확진', '사망'] ],\r\n\r\n            \r\n            worldGeoChartOptions:{\r\n                resolution: 'countries',\r\n                colorAxis:{\r\n                    minValue: 0,  colors: ['#fffcfc', '#b00b0b']\r\n                },\r\n                height:550\r\n            },\r\n\r\n            worldGeoChartLoaded : false,\r\n            slides:[\r\n                {\r\n                    src: 'images/corona-1.jpg'\r\n                },\r\n                {\r\n                    src: 'images/corona-2.jpg'\r\n                },\r\n                {\r\n                    src: 'images/corona-3.jpg'\r\n                },\r\n                {\r\n                    src: 'images/corona-4.jpg'\r\n                },\r\n                \r\n            ],\r\n            borderColor:[\r\n                'rgba(240, 12, 12, 1)',\r\n                'rgba(237, 226, 14, 1)',\r\n                'rgba(29, 237, 14, 1)',\r\n                'rgba(237, 159, 14, 1)',\r\n                'rgba(14, 237, 237, 1)',\r\n                'rgba(14, 44, 237, 1)',\r\n                'rgba(189, 235, 52, 1)',\r\n                'rgba(171, 50, 165, 1)',\r\n                'rgba(91, 168, 35, 1)',\r\n                'rgba(222, 50, 31, 1)',\r\n                'rgba(102, 102, 102, 1)',\r\n                'rgba(78, 179, 11, 1)',\r\n                'rgba(11, 171, 179, 1)',\r\n                'rgba(179, 115, 11, 1)',\r\n                'rgba(207, 196, 76, 1)',\r\n                'rgba(207, 76, 181, 1)',\r\n                'rgba(110, 20, 39, 1)',\r\n                'rgba(99, 126, 212, 1)',\r\n                'rgba(72, 117, 100, 1)',\r\n                'rgba(142, 145, 144, 1)'\r\n            ],\r\n            backgroundColor:[\r\n                'rgba(240, 12, 12, 0.2)',\r\n                'rgba(237, 226, 14, 0.2)',\r\n                'rgba(29, 237, 14, 0.2)',\r\n                'rgba(237, 159, 14, 0.2)',\r\n                'rgba(14, 237, 237, 0.2)',\r\n                'rgba(14, 44, 237, 0.2)',\r\n                'rgba(189, 235, 52, 0.2)',\r\n                'rgba(171, 50, 165, 0.2)',\r\n                'rgba(91, 168, 35, 0.2)',\r\n                'rgba(222, 50, 31, 0.2)',\r\n                'rgba(102, 102, 102, 0.2)',\r\n                'rgba(78, 179, 11, 0.2)',\r\n                'rgba(11, 171, 179, 0.2)',\r\n                'rgba(179, 115, 11, 0.2)',\r\n                'rgba(207, 196, 76, 0.2)',\r\n                'rgba(207, 76, 181, 0.2)',\r\n                'rgba(110, 20, 39, 0.2)',\r\n                'rgba(99, 126, 212, 0.2)',\r\n                'rgba(72, 117, 100, 0.2)',\r\n                'rgba(142, 145, 144, 0.2)'\r\n            ],\r\n\r\n            cityCovidPages:[\r\n                ['서울', 'https://www.seoul.go.kr/coronaV/coronaStatus.do'],\r\n                ['부산', 'http://www.busan.go.kr/covid19/Corona19.do'],\r\n                ['대구', 'http://covid19.daegu.go.kr/00936598.html'],\r\n                ['인천', 'https://www.incheon.go.kr/health/HE020409'],\r\n                ['광주', 'https://www.gwangju.go.kr/c19/c19/contentsView.do?pageId=coronagj2'],\r\n                ['대전', 'https://www.daejeon.go.kr/corona19/index.do?menuId=0002'],\r\n                ['울산', 'http://www.ulsan.go.kr/corona.jsp'],\r\n                ['세종', 'https://www.sejong.go.kr/bbs/R3391/list.do'],\r\n                ['경기', 'https://www.gg.go.kr/bbs/board.do?bsIdx=722&menuId=2903#page=1'],\r\n                ['강원', 'https://www.provin.gangwon.kr/covid-19.html'],\r\n                ['충북', 'https://www1.chungbuk.go.kr/covid-19/index.do'],\r\n                ['충남', 'http://www.chungnam.go.kr/coronaStatus.do'],\r\n                ['전북', 'https://www.jeonbuk.go.kr/board/list.jeonbuk?boardId=BBS_0000107&menuCd=DOM_000000110006000000&contentsSid=1224&cpath='],\r\n                ['전남', 'https://www.jeonnam.go.kr/coronaMainPage.do'],\r\n                ['경북', 'http://gb.go.kr/corona_main.htm'],\r\n                ['경남', 'http://xn--19-q81ii1knc140d892b.kr/main/main.do'],\r\n                ['제주', 'https://www.jeju.go.kr/wel/healthCare/corona/coronaNotice.htm']\r\n            ],\r\n            youtubeList:[]\r\n\r\n\r\n            \r\n        }\r\n    },\r\n    computed : {\r\n        worldCounrtyChartData(){\r\n            return this.worldCountryData[this.worldCountryStatus]\r\n        },\r\n        koreaCityChartData(){\r\n            return this.koreaCityData[this.koreaCityStatus]\r\n        },\r\n        koreaGenChartData(){\r\n            return this.koreaGenData[this.koreaGenStatus]\r\n        }\r\n    },\r\n\r\n    created(){\r\n        this.getWorldDailyTotal()\r\n        this.getKoreaDailyTotal()\r\n\r\n        this.googleCrawling()\r\n        this.naverCrawling()\r\n\r\n        this.covidGenAge();\r\n        this.covidCity();\r\n\r\n        this.getCountryTotal()\r\n\r\n        this.youtubeSearch()\r\n\r\n        \r\n\r\n       \r\n    },\r\n    methods:{\r\n       \r\n        async getWorldDailyTotal(){\r\n            try{\r\n                let { data } = await axios.get('/covid/world/daily')\r\n                \r\n                this.worldDailyTotalChartData  = {\r\n                    labels : data.map(covid => covid.reportDate.substring(5)),\r\n                    datasets:[\r\n                        {\r\n                            label: '확진자',\r\n                            borderColor:'rgba(54, 162, 235, 1)',\r\n                            backgroundColor:'rgba(54, 162, 235, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: data.map(covid => covid.confirmed.total)\r\n                        }\r\n                    ]\r\n                }\r\n                \r\n                this.worldChartLoaded = true\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async getCountryTotal(){\r\n            try{\r\n                let { data } = await axios.get('/covid/world')\r\n                \r\n                data = data.map(covid => {\r\n                    return {\r\n                        confirmed : this.stringFormat(covid.confirmed),\r\n                        recovered : this.stringFormat(covid.recovered),\r\n                        deaths : this.stringFormat(covid.deaths),\r\n                        country : covid.country\r\n                    }\r\n                })\r\n                \r\n                const yesterdayWorld = data[0]\r\n                const todayWorld = data[1]\r\n                \r\n                this.worldTotal = {\r\n                    totalConfirmed : this.numberCommas(todayWorld.confirmed) ,\r\n                    totalDeaths : this.numberCommas(todayWorld.deaths),\r\n                    totalRecovered : this.numberCommas(todayWorld.recovered),\r\n                    totalCritical: (todayWorld.deaths / todayWorld.confirmed * 100 ).toFixed(1),\r\n                    newConfirmed : this.numberCommas(todayWorld.confirmed - yesterdayWorld.confirmed),\r\n                    newDeaths: this.numberCommas(todayWorld.deaths - yesterdayWorld.deaths),\r\n                    newRecovered : this.numberCommas(todayWorld.recovered - yesterdayWorld.recovered)\r\n\r\n                }\r\n\r\n                data = data.slice(2, 217)\r\n               \r\n            \r\n                const countryData = data.map(covid => [covid.country, covid.confirmed, covid.deaths] )\r\n                \r\n                this.worldGeoChartData = [['Country','확진','사망']].concat(countryData)\r\n               \r\n                this.worldGeoChartLoaded = true\r\n\r\n                const conf = this.countryStatusSortData(data, 'confirmed')\r\n                const deaths = this.countryStatusSortData(data, 'deaths')\r\n                const recovered = this.countryStatusSortData(data, 'recovered')\r\n\r\n                this.worldCountryData = [\r\n                    {\r\n                        labels: [...(conf.data.map(covid => covid.country)), '기타'],\r\n                        datasets:[\r\n                            {\r\n                                label: '확진자',\r\n                                borderColor: this.borderColor,\r\n                                backgroundColor : this.backgroundColor,\r\n                                data: [...(conf.data.map(covid => covid.confirmed)), conf.otherCountryCount]\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        labels: [...(deaths.data.map(covid => covid.country)), '기타'],\r\n                        datasets:[\r\n                            {\r\n                                label: '사망자',\r\n                                borderColor: this.borderColor,\r\n                                backgroundColor : this.backgroundColor,\r\n                                data: [...(deaths.data.map(covid => covid.deaths)), deaths.otherCountryCount]\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        labels: [...(recovered.data.map(covid => covid.country)), '기타'],\r\n                        datasets:[\r\n                            {\r\n                                label: '완치자',\r\n                                borderColor: this.borderColor,\r\n                                backgroundColor : this.backgroundColor,\r\n                                data: [...(recovered.data.map(covid => covid.recovered)), recovered.otherCountryCount]\r\n                            }\r\n                        ]\r\n                    },\r\n\r\n                ]\r\n\r\n                this.worldCounrtyChartData = this.worldCountryData[0]\r\n               \r\n                this.worldCounrtyChartLoaded = true\r\n\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async getKoreaDailyTotal(){\r\n            try{\r\n                let { data } = await axios.get('/covid/korea/day')\r\n                \r\n                data = data.response.body.items.item.reverse()\r\n                data.splice(116, 2)\r\n                \r\n                let dates = data.map(covid => covid.createDt.substring(5,10))\r\n                let confirmed = data.map(covid => covid.decideCnt)\r\n                let recovered = data.map(covid => covid.clearCnt)\r\n                let deaths = data.map(covid => covid.deathCnt)\r\n\r\n                this.koreaTotal = {\r\n                    totalConfirmed : this.numberCommas(confirmed[confirmed.length-1]),\r\n                    totalDeaths : this.numberCommas(deaths[deaths.length-1]),\r\n                    totalRecovered : this.numberCommas(recovered[recovered.length-1]),\r\n                    totalCritical: this.numberCommas((deaths[deaths.length-1] / confirmed[confirmed.length-1] * 100).toFixed(1)),\r\n                    newConfirmed : this.numberCommas(confirmed[confirmed.length-1] - confirmed[confirmed.length-2]),\r\n                    newDeaths : this.numberCommas(deaths[deaths.length-1] - deaths[deaths.length-2]),\r\n                    newRecovered : this.numberCommas(recovered[recovered.length-1] - recovered[recovered.length-2])\r\n                }\r\n\r\n                this.koreaDailyTotalChartData = {\r\n                    labels: dates,\r\n                    datasets:[\r\n                        {\r\n                            label: '확진자',\r\n                            borderColor:'rgba(54, 162, 235, 1)',\r\n                            backgroundColor:'rgba(54, 162, 235, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: confirmed\r\n                        },\r\n                        {\r\n                            label: '완치자',\r\n                            borderColor:'rgba(29, 237, 14, 1)',                     \r\n                            backgroundColor:'rgba(29, 237, 14, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: recovered\r\n                        },\r\n                        \r\n                        {\r\n                            label: '사망자',\r\n                            borderColor:'rgba(219, 47, 35, 1)',\r\n                            backgroundColor:'rgba(219, 47, 35, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: deaths\r\n                        },\r\n                        \r\n                    ]\r\n                }\r\n                \r\n                let dailyNewConfirmed = confirmed.slice(confirmed.length - 31)\r\n                let dailyNewDates = dates.slice(dates.length - 30)\r\n                \r\n                for(let i=0; i<30; i++){\r\n                    dailyNewConfirmed[i] = dailyNewConfirmed[i+1] - dailyNewConfirmed[i]\r\n                }\r\n                this.koreaDailyChartData = {\r\n                    labels: dailyNewDates,\r\n                    datasets:[\r\n                        {\r\n                            label: '확진자',\r\n                            borderColor:'rgba(54, 162, 235, 1)',\r\n                            backgroundColor:'rgba(54, 162, 235, 0.2)',\r\n                            pointBorderColor:'rgba(255, 255, 255, 0)',\r\n                            borderWidth: 2,\r\n                            data: dailyNewConfirmed.slice(0, dailyNewConfirmed.length-1)\r\n                        }\r\n                    ]\r\n                }\r\n\r\n                \r\n                this.koreaDailyTotalLoaded = true\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async naverCrawling(){\r\n            try{\r\n                let { data } = await axios.get('/covid/news/naver')\r\n                this.naverNews = data\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async googleCrawling(){\r\n            try{\r\n                let { data } = await axios.get('/covid/news/google')\r\n                this.googleNews = data\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async covidGenAge(){\r\n            try{\r\n                let res = await axios.get('/covid/korea/genAge')\r\n                \r\n                let data = res.data.response.body.items.item\r\n                let ageData = data.slice(0, 9)\r\n                let genData = data.slice(9, 11)\r\n                \r\n                let age = ageData.map(covid => covid.gubun)\r\n               \r\n                this.koreaAgeChartData = {\r\n                    labels: age,\r\n                    datasets:[\r\n                        {\r\n                            label: '확진자',\r\n                            borderWidth: 1,\r\n                            backgroundColor: this.backgroundColor,\r\n                            borderColor: this.borderColor,\r\n                            data : ageData.map(covid => covid.confCase)\r\n                        }\r\n                    ]\r\n                }\r\n\r\n\r\n                this.koreaAgeCriticalChartData = {\r\n                    labels : age,\r\n                    datasets:[\r\n                        {\r\n                            label: '치명율 (사망자/확진자)',\r\n                            \r\n                            backgroundColor:'rgba(54, 162, 235, 0.2)',\r\n                            \r\n                            borderWidth: 1,\r\n                            data: ageData.map(covid => covid.criticalRate)\r\n                        },\r\n                        \r\n                    ]\r\n                }\r\n\r\n                let gen  = genData.map(covid => covid.gubun)\r\n   \r\n                this.koreaGenData = [\r\n                    {\r\n                        labels : gen,\r\n                        datasets: [\r\n                            {\r\n                                label: '확진자',\r\n                                borderColor:[\r\n                                    'rgba(255,99,132,1)',\r\n                                    'rgba(54, 162, 235, 1)',\r\n                                ],\r\n                                backgroundColor:[\r\n                                    'rgba(255, 99, 132, 0.2)',\r\n                                    'rgba(54, 162, 235, 0.2)',\r\n                                ],\r\n                                \r\n                                borderWidth: 2,\r\n                                data: genData.map(covid => covid.confCase)\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        labels : gen,\r\n                        datasets: [\r\n                            {\r\n                                label: '사망자',\r\n                                borderColor:[\r\n                                    'rgba(255,99,132,1)',\r\n                                    'rgba(54, 162, 235, 1)',\r\n                                ],\r\n                                backgroundColor:[\r\n                                    'rgba(255, 99, 132, 0.2)',\r\n                                    'rgba(54, 162, 235, 0.2)',\r\n                                ],\r\n                                \r\n                                borderWidth: 2,\r\n                                data: genData.map(covid => covid.death)\r\n                            },\r\n                        ]\r\n                    },\r\n\r\n                ]\r\n\r\n                //this.koreaGenChartData = this.koreaGenData[0]\r\n\r\n                this.genAgeChartLoaded = true\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async covidCity(){\r\n            try{\r\n                let res = await axios.get('/covid/korea/city')\r\n                let cityData = res.data.response.body.items.item.slice(0, 18)\r\n                let cityNames = cityData.map(city => city.gubun)\r\n                \r\n\r\n                this.koreaCityData = [\r\n                    {\r\n                        labels: cityNames,\r\n                        datasets:[\r\n                            {\r\n                                label: '확진자',\r\n                                borderColor: 'rgba(54, 162, 235, 1)',\r\n                                backgroundColor: 'rgba(54, 162, 235, 0.2)',\r\n                                \r\n                                borderWidth: 2,\r\n                                data: cityData.map(city => city.defCnt)\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        labels: cityNames,\r\n                        datasets:[\r\n                            {\r\n                                label: '사망자',\r\n                                borderColor: 'rgba(219, 47, 35, 1)',\r\n                                backgroundColor: 'rgba(219, 47, 35, 0.2)',\r\n                                \r\n                                borderWidth: 2,\r\n                                data: cityData.map(city => city.deathCnt)\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        labels: cityNames,\r\n                        datasets:[\r\n                            {\r\n                                label: '완치자',\r\n                                borderColor: 'rgba(29, 237, 14, 1)',\r\n                                backgroundColor: 'rgba(29, 237, 14, 0.2)',\r\n                                \r\n                                borderWidth: 2,\r\n                                data: cityData.map(city => city.isolClearCnt)\r\n                            }\r\n                        ]\r\n                    },\r\n                ]\r\n\r\n\r\n\r\n                //this.koreaCityChartData = this.koreaCityData[0]\r\n\r\n                this.cityChartLoaded = true\r\n\r\n\r\n\r\n\r\n                for(let i=1; i<cityData.length; i++){\r\n                    this.koreaGeoChartData[i].push(cityData[i].defCnt, cityData[i].deathCnt)\r\n                }\r\n                this.koreaGeoChartLoaded = true\r\n\r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        async youtubeSearch(){\r\n            try{\r\n                const { data } = await axios.get('/covid/youtube')\r\n                \r\n                let searchList = data.items\r\n                \r\n                \r\n                searchList.forEach(youtube => {\r\n                    youtube.snippet.title = youtube.snippet.title.replaceAll('&quot;','\"')\r\n                })\r\n                console.log(searchList)\r\n                this.youtubeList = searchList\r\n                \r\n            }catch(e){\r\n                console.error(e)\r\n            }\r\n        },\r\n        numberCommas(input){\r\n            return input.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n        },\r\n        stringFormat(input){\r\n            return input && input != \"N/A\" ? parseInt(input.replaceAll(/,/g, ''), 10) : 0\r\n        },\r\n        countryStatusSortData(data, status){\r\n\r\n                let mapped = data.map((covid, i) => { \r\n                        return { i, value : covid[`${status}`] }\r\n                    })\r\n\r\n                mapped.sort((a,b) => b.value - a.value)\r\n                let sortData = mapped.map(el => data[el.i])\r\n                \r\n                const otherCountryCount = sortData.slice(10)\r\n                                         .map(covid => covid[`${status}`])\r\n                                         .reduce((acc,cur) => acc + cur)\r\n\r\n                return {\r\n                    otherCountryCount,\r\n                    data : sortData.slice(0,10)\r\n                }\r\n        }\r\n        \r\n            \r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.col p.number {\r\n    font-size: 22px;\r\n    font-weight: 500;\r\n}\r\n\r\n.col .covid {\r\n    color: red;\r\n}\r\n\r\n.col .recovered {\r\n    color: rgb(34, 182, 23);\r\n}\r\n\r\n</style>\r\n"]}]}